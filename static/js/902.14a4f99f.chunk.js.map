{"version":3,"file":"static/js/902.14a4f99f.chunk.js","mappings":"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","sources":["components/Select/Select.jsx","components/SelectLanguage/SelectLanguage.jsx","components/Header/BurgerMenu/BurgerMenu.styled.js","components/Sidebar/Logo/Logo.styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/BoardList/BoardList.styled.js","components/boardModals/ModalsBase/BoardModalBase.styled.jsx","images/mini/index.js","components/boardModals/ModalsBase/BoardModalBase.jsx","components/Sidebar/BoardListItem/BoardListItem.styled.js","components/Sidebar/BoardListItem/BoardListItem.jsx","components/Sidebar/BoardList/BoardList.jsx","components/boardModals/addBoardButton/addBoardButton.styled.jsx","components/boardModals/addBoardButton/addBoardButton.jsx","components/boardModals/addBoard.jsx","components/Sidebar/SidebarNav/SidebarNav.styled.js","components/NeedHelpModal/NeedHelpModal.styled.jsx","components/NeedHelpModal/NeedHelpModal.jsx","components/HelpApp/HelpApp.styled.js","components/HelpApp/HelpApp.jsx","components/Sidebar/SidebarNav/SidebarNav.jsx","components/Sidebar/Sidebar.styled.js","components/Sidebar/Sidebar.jsx","components/Header/BurgerMenu/BurgerMenu.jsx","components/Header/Header.styled.js","components/Header/ThemeDropDown/ThemeDropDown.jsx","components/Header/UserInfo/UserInfo.styled.js","components/EditProfileModal/PreviewAvatar/PreviewAvatar.jsx","components/EditProfileModal/PreviewAvatar/PreviewUploadAvatar.jsx","components/EditProfileModal/EditProfileModal.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","Pages/HomePage.styled.js","Pages/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Select, { components } from 'react-select';\nimport { useTranslation } from 'react-i18next';\nimport { GrLanguage } from 'react-icons/gr';\nimport '/node_modules/flag-icons/css/flag-icons.min.css';\n\nconst CustomDropdownIcon = () => <GrLanguage />;\n\nconst IconLanguage = {\n  DropdownIndicator: props => {\n    return (\n      <components.DropdownIndicator {...props}>\n        <CustomDropdownIcon width=\"32\" height=\"32\" />\n      </components.DropdownIndicator>\n    );\n  },\n};\n\nconst options = [\n  {\n    value: 'ua',\n    label: (\n      <span>\n        <span class=\"fi fi-ua\"></span> Ukraine\n      </span>\n    ),\n  },\n  {\n    value: 'en',\n    label: (\n      <span>\n        <span class=\"fi fi-gb\"></span> UK\n      </span>\n    ),\n  },\n  {\n    value: 'cn',\n    label: (\n      <span>\n        <span class=\"fi fi-cn\"></span> China\n      </span>\n    ),\n  },\n  {\n    value: 'he',\n    label: (\n      <span>\n        <span class=\"fi fi-il\"></span> Israel\n      </span>\n    ),\n  },\n  {\n    value: 'de',\n    label: (\n      <span>\n        <span class=\"fi fi-de\"></span> Germany\n      </span>\n    ),\n  },\n  {\n    value: 'es',\n    label: (\n      <span>\n        <span class=\"fi fi-es\"></span> Spain\n      </span>\n    ),\n  },\n  {\n    value: 'ita',\n    label: (\n      <span>\n        <span class=\"fi fi-it\"></span> Italy\n      </span>\n    ),\n  },\n  {\n    value: 'fr',\n    label: (\n      <span>\n        <span class=\"fi fi-fr\"></span> France\n      </span>\n    ),\n  },\n  {\n    value: 'jp',\n    label: (\n      <span>\n        <span class=\"fi fi-jp\"></span> Japan\n      </span>\n    ),\n  },\n  {\n    value: 'pl',\n    label: (\n      <span>\n        <span class=\"fi fi-pl\"></span> Poland\n      </span>\n    ),\n  },\n  {\n    value: 'ro',\n    label: (\n      <span>\n        <span class=\"fi fi-ro\"></span> Romania\n      </span>\n    ),\n  },\n  {\n    value: 'ar',\n    label: (\n      <span>\n        <span class=\"fi fi-sa\"></span> Saudi Arabia\n      </span>\n    ),\n  },\n  {\n    value: 'gr',\n    label: (\n      <span>\n        <span class=\"fi fi-gr\"></span> Greece\n      </span>\n    ),\n  },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    margin: 'auto 0',\n    padding: '0',\n    minHeight: '0',\n    lineHeight: '1',\n    backgroundColor: 'transparent'\n  }),\n\n  downChevron: provided => ({\n    ...provided,\n    width: '32px',\n    height: '32px',\n    padding: '0',\n    color: 'white'\n  }),\n\n  IndicatorContainer: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  input: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: '0',\n    stroke: `${p => p.theme.currentTheme.mainText}`,\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: state.isSelected ? '#5255BC' : 'rgb(22, 22, 22)',\n\n    '&:hover': {\n      backgroundColor: '#FCFCFC',\n      color: '#5255BC',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n  menu: provided => ({\n    ...provided,\n    maxHeight: '120px',\n    width: '120px',\n\n    backgroundColor: 'white',\n    borderRadius: '8px',\n\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'rgba(22, 22, 22, 0.2)',\n      borderRadius: '8px',\n    },\n    '&::-webkit-scrollbar-track': {\n      backgroundColor: 'transparent',\n    },\n  }),\n  menuList: provided => ({\n    ...provided,\n    overflowY: 'none',\n  }),\n};\n\nexport const CustomDropdown = () => {\n  const { i18n } = useTranslation('global');\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const selectRef = useRef(null);\n  const handleChangeLanguage = selectedOption => {\n    i18n.changeLanguage(selectedOption.value);\n    setMenuIsOpen(false);\n  };\n  const handleClickOutside = event => {\n    if (selectRef.current && !selectRef.current.contains(event.target)) {\n      setMenuIsOpen(false);\n    }\n  };\n\n  const toggleSelect = () => {\n    setMenuIsOpen(!menuIsOpen);\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return (\n    <div ref={selectRef}>\n      <Select\n        components={IconLanguage}\n        options={options}\n        styles={customStyles}\n        onChange={handleChangeLanguage}\n        placeholder=\"\"\n        menuIsOpen={menuIsOpen}\n        onMenuOpen={toggleSelect}\n        onMenuClose={toggleSelect}\n      />{' '}\n    </div>\n  );\n};\n\nexport default CustomDropdown;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CustomDropdown from 'components/Select/Select';\n\n\nexport const SelectLanguage = () => {\n  const { i18n } = useTranslation('global');\n\n  const handleChange = lang => {\n    i18n.changeLanguage(lang);\n  };\n\n  const handleChangeLanguage = e => {\n    const selectedLanguage = e.target.value;\n    handleChange(selectedLanguage);\n  };\n\n  return (\n      <CustomDropdown handleChangeLanguage={handleChangeLanguage} handleChange={handleChange}/>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BurgerMenuWrapper = styled.div`\n  display: flex;\n  /* @media screen and (max-width: 375px) {\n    padding-left: ${p => p.theme.spacing(5)};\n  } */\n`;\n\nexport const StyledBurgerMenu = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: auto 0;\n  padding: 0;\n  position: relative;\n  display: ${props => (props.isOpen ? 'display: flex;' : '')};\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const StyledSVGBurger = styled.svg`\n  stroke: ${p => p.theme.currentTheme.mainText};\n  width: 100%;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLogoWrapper = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  padding: 14px 14px 0 14px;\n\n  @media screen and (min-width: 768px) {\n   padding: 24px 24px 0 24px;\n }\n`;\n\nexport const StyledLogoIcon = styled.span`\n  display: flex;\n  border-radius: ${p => p.theme.radius.m};\n  width: 32px;\n  height: 32px;\n  background-color: ${p => p.theme.currentTheme.needHelpBgn};\n`;\nexport const StyledLogoText = styled.p`\n  display: flex;\n  margin: auto 0;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n`;\n\nexport const StyledSVGLogo = styled.svg`\n  fill: ${p => p.theme.currentTheme.logo};\n`;\n","import sprite from '../../../images/icons.svg';\nimport {\n  StyledLogoIcon,\n  StyledLogoText,\n  StyledLogoWrapper,\n  StyledSVGLogo,\n} from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <StyledLogoWrapper>\n      <StyledLogoIcon>\n        <StyledSVGLogo>\n          <use xlinkHref={`${sprite}#icon-logo2`}></use>\n        </StyledSVGLogo>\n      </StyledLogoIcon>\n\n      <StyledLogoText>Task Pro</StyledLogoText>\n    </StyledLogoWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport '../../../index.css';\n\nexport const StyledBoardListWrapper = styled.ul`\n  height: 126px;\n  overflow-y: scroll;\n  margin: 0 -14px;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n    height: 60px;\n    border-radius: 4px 0 0 4px;\n    margin-left: ${p => p.theme.spacing(3.5)};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #fff;\n    border-radius: 4px 0 0 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0 -24px;\n  }\n \n`;\n","import styled from 'styled-components'\nimport Modal from 'react-modal'\n\nexport const StyledModal = styled(Modal)`\n    position: relative;\n    width: 100%;\n    height: fit-content;\n    /* max-height: 433px; */\n    max-width: 350px;\n    background-color: ${props => props.theme.currentTheme.modalBgn};\n    border-radius: 8px;\n    box-shadow: 0px 4px 16px 0px ${props => props.theme.currentTheme.grayText};\n    z-index: 3000;\n    transition: transform 0.3s;\n`\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    padding: 24px;\n`\n\nexport const CloseButton = styled.button`\n    position: absolute;\n    background-color: transparent;\n    top: 14px;\n    right: 14px;\n    width: 20px;\n    height: 20px;\n    border: none;\n`\n\nexport const CloseSVG = styled.svg`\n    width: 18px;\n    height: 18px;\n    stroke: ${props => props.theme.currentTheme.mainText};\n`\n\nexport const BigHeader = styled.p`\n    color: ${props => props.theme.currentTheme.mainText};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    letter-spacing: 0.02em;\n`\n\nexport const TitleInput = styled.input`\n    margin: 24px 0;\n    height: 49px;\n    max-width: 302px;\n    background-color: transparent;\n    border: 1px ${props => props.theme.currentTheme.accent} solid;\n    border-radius: 8px;\n    padding: 0 18px;\n    color: ${props => props.theme.currentTheme.mainText};\n    font-family: inherit;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    outline: none;\n    opacity: 0.4;\n\n    &::placeholder {\n        color: ${props => props.theme.currentTheme.mainText};\n        font-family: inherit;\n        line-height: 21px;\n        letter-spacing: 0.02em;\n    }\n\n    &:hover, &:focus {\n        opacity: 1;\n    }\n`\n\nexport const SmallHeader = styled.p`\n    color: ${props => props.theme.currentTheme.mainText};\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    letter-spacing: -2%;\n    padding-bottom: 14px;\n`\n\nexport const List = styled.label`\n    width: 270px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    column-gap: 4px;\n    row-gap: 4px;\n    margin-bottom: 24px;\n`\n\nexport const Radio = styled.input`\n    display: none;\n\n    &:checked + svg {\n        stroke: ${props => props.theme.currentTheme.mainText};\n        cursor: default;\n    }\n\n    &:checked + span {\n        border-color: ${props => props.theme.currentTheme.accent};\n        cursor: default;\n    }\n`\n\nexport const IconSVG = styled.svg`\n    display: inline-block;\n    vertical-align: middle;\n    stroke: ${props => props.theme.currentTheme.iconStroke};\n    cursor: pointer;\n    fill: transparent;\n    width: 18px;\n    height: 18px;\n`\n\nexport const Pic = styled.span`\n    display: inline-block;\n    border: 1px transparent solid;\n    background-color: transparent;\n    z-index: 10;\n    cursor: pointer;\n    border-radius: 8px;\n    width: 28px;\n    height: 28px;\n\n    & > img {\n        border-radius: 6px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display: flex;\n    max-width: 100%;\n    height: 49px;\n    color: ${props => props.theme.currentTheme.plusIconFill};\n    border-radius: 8px;\n    border-color: transparent;\n    font-weight: 500;\n    background-color: ${props => props.theme.currentTheme.accent};\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    column-gap: 9px;\n    margin-top: 16px;\n\n    &:hover {\n        background-color: ${props => props.theme.currentTheme.hoverButton};\n    }\n\n    & > span {\n        display: flex;\n        width: 28px;\n        height: 28px;\n        background-color: ${props => props.theme.currentTheme.plusIconFill};\n        border-radius: 8px;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & > span > svg {\n        width: 14px;\n        height: 14px;\n        stroke: ${props => props.theme.currentTheme.plusIconStroke};\n    }\n`","import p0 from './mini_0.webp'\nimport p1 from './mini_1.webp'\nimport p2 from './mini_2.webp'\nimport p3 from './mini_3.webp'\nimport p4 from './mini_4.webp'\nimport p5 from './mini_5.webp'\nimport p6 from './mini_6.webp'\nimport p7 from './mini_7.webp'\nimport p8 from './mini_8.webp'\nimport p9 from './mini_9.webp'\nimport p10 from './mini_10.webp'\nimport p11 from './mini_11.webp'\nimport p12 from './mini_12.webp'\nimport p13 from './mini_13.webp'\nimport p14 from './mini_14.webp'\nimport p15 from './mini_15.webp'\n\nexport const pictures_mini = { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import React, { useState } from 'react';\nimport sprite from 'images/icons.svg';\nimport {\n  StyledModal,\n  Form,\n  CloseButton,\n  CloseSVG,\n  BigHeader,\n  TitleInput,\n  SmallHeader,\n  List,\n  Radio,\n  IconSVG,\n  Pic,\n  SubmitButton,\n} from './BoardModalBase.styled';\nimport { pictures_mini } from 'images/mini/index';\nimport { useTranslation } from 'react-i18next';\n\nexport const BoardModalBase = ({\n  isModalOpen,\n  info,\n  onCloseModal,\n  action,\n  SubmitForm,\n}) => {\n  const { t } = useTranslation('global');\n  const [title, setTitle] = useState(info.title);\n  const [iconURL, setIcon] = useState(info.iconURL);\n  const [backgroundURL, setBackground] = useState(info.backgroundURL);\n\n  const Icons = [\n    { value: 'icon-Project' },\n    { value: 'icon-star-04' },\n    { value: 'icon-loading-03' },\n    { value: 'icon-puzzle-piece-02' },\n    { value: 'icon-container' },\n    { value: 'icon-lightning-02' },\n    { value: 'icon-colors' },\n    { value: 'icon-hexagon-01' },\n  ];\n\n  const Backgrounds = [\n    { value: 'p0' },\n    { value: 'p1' },\n    { value: 'p2' },\n    { value: 'p3' },\n    { value: 'p4' },\n    { value: 'p5' },\n    { value: 'p6' },\n    { value: 'p7' },\n    { value: 'p8' },\n    { value: 'p9' },\n    { value: 'p10' },\n    { value: 'p11' },\n    { value: 'p12' },\n    { value: 'p13' },\n    { value: 'p14' },\n    { value: 'p15' },\n  ];\n\n  function close() {\n    onCloseModal();\n    setTitle(info.title);\n    setIcon(info.iconURL);\n    setBackground(info.backgroundURL);\n  }\n\n  function sub(event) {\n    event.preventDefault();\n    SubmitForm({ title, iconURL, backgroundURL });\n    setTitle(info.title);\n    setIcon(info.iconURL);\n    setBackground(info.backgroundURL);\n  }\n\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  return (\n    <StyledModal\n      isOpen={isModalOpen}\n      overlayClassName={'modal-overlay'}\n      className={'modal-content'}\n      onRequestClose={close}\n      ariaHideApp={false}\n    >\n      <CloseButton onClick={close}>\n        <CloseSVG>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </CloseSVG>\n      </CloseButton>\n\n      <Form onSubmit={event => sub(event)}>\n        <BigHeader>\n          {action === 'add'\n            ? t('screenPage.render.modal.board.titleNew')\n            : t('screenPage.render.modal.board.titleEdit')}\n        </BigHeader>\n\n        <TitleInput\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={e => handleChange(e)}\n          required\n        />\n\n        <SmallHeader>{t('screenPage.render.modal.board.icons')}</SmallHeader>\n        <List>\n          {Icons.map((Icon, index) => (\n            <label key={index}>\n              <Radio\n                type=\"radio\"\n                name=\"icon\"\n                value={Icon.value}\n                checked={Icon.value === iconURL ? true : false}\n                onChange={() => setIcon(Icon.value)}\n              ></Radio>\n              <IconSVG aria-hidden=\"true\">\n                <use xlinkHref={`${sprite}#${Icon.value}`}></use>\n              </IconSVG>\n            </label>\n          ))}\n        </List>\n\n        <SmallHeader>{t('screenPage.render.modal.board.backgr')}</SmallHeader>\n        <List>\n          {Backgrounds.map((Background, index) => (\n            <label key={index}>\n              <Radio\n                type=\"radio\"\n                name=\"background\"\n                value={Background.value}\n                checked={Background.value === backgroundURL ? true : false}\n                onChange={() => setBackground(Background.value)}\n              ></Radio>\n              <Pic>\n                <img\n                  alt=\"icon_option\"\n                  src={pictures_mini[`${Background.value}`]}\n                ></img>\n              </Pic>\n            </label>\n          ))}\n        </List>\n\n        <SubmitButton type=\"submit\">\n          <span>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </svg>\n          </span>\n          {action === 'add' ? t('screenPage.render.modal.board.add-btn') : t('screenPage.render.modal.board.edit-btn')}\n        </SubmitButton>\n      </Form>\n    </StyledModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBoardList = styled.div`\n  display: flex;\n  padding: 22px 18px 22px 14px;\n  margin: 0 auto;\n  justify-content: space-between;\n  background-color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255, 0.2)' : 'transparent'};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    stroke: ${p => p.theme.colors.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 21px 24px;\n  }\n`;\n\nexport const StyledBoardItem = styled.button`\n  border: none;\n  background: transparent;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: start;\n  padding: 0;\n  display: flex;\n  gap: 4px;\n  color: ${({ isActive, theme }) =>\n    isActive ? theme.currentTheme.iconNeedHelp : theme.currentTheme.greySubtitle};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.currentTheme.iconNeedHelp};\n   \n  }\n  svg {\n    width: 18px;\n    height: 18px;\n    fill: transparent;\n    stroke: ${({ isActive,theme }) =>\n      isActive ?  theme.currentTheme.iconNeedHelp : theme.currentTheme.greySubtitle};\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const StyledSVGPensil = styled.svg`\n  fill: transparent;\n  stroke:  ${p => p.theme.currentTheme.iconNeedHelp};\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n\nexport const StyledSVGTrash = styled.svg`\n  fill: transparent;\n  stroke: ${p => p.theme.currentTheme.iconNeedHelp};\n\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n\nexport const StyledBoardListBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  display: flex;\n\n  margin: 0;\n  padding: 0;\n`;\nexport const StyledBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { BoardModalBase } from 'components/boardModals/ModalsBase/BoardModalBase';\nimport { getBoardById, deleteBoard, editBoard } from 'redux/boards/operations';\nimport sprite from '../../../images/icons.svg';\nimport {\n  StyledBoardItem,\n  StyledBoardList,\n  StyledBoardListBtn,\n  StyledBtnWrapper,\n  StyledSVGPensil,\n  StyledSVGTrash,\n} from './BoardListItem.styled';\n\n\nexport const BoardListItem = ({ board, isActive, onClick }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n  const [isModalOpen, setOpenModal] = useState(false);\n\n  function CloseModal() {\n    setOpenModal(false);\n  }\n\n  function OpenModal() {\n    setOpenModal(true);\n  }\n\n  function SubmitForm(info) {\n    const { _id } = board;\n    dispatch(editBoard({ _id, info }));\n    setOpenModal(false);\n  }\n\n  function HandleDelete() {\n    dispatch(deleteBoard(board._id));\n    navigate('/home')\n  }\n\n  return (\n    <StyledBoardList isActive={isActive} onClick={onClick}>\n      {/* <StyledBoardItem to={`/home/${board._id}`}></StyledBoardItem> */}\n\n      <StyledBoardItem\n        type=\"button\"\n        isActive={isActive}\n        onClick={() => {\n          onClick();\n          dispatch(getBoardById(board._id));\n        }}\n      >\n        <svg>\n          <use xlinkHref={`${sprite}#${board.iconURL}`}></use>\n        </svg>\n\n        <Link to={`/home/${board._id}`}>{board.title}</Link>\n      </StyledBoardItem>\n\n      <StyledBtnWrapper isActive={isActive} onClick={onClick}>\n        <StyledBoardListBtn onClick={OpenModal} type=\"button\">\n          <StyledSVGPensil>\n            <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n          </StyledSVGPensil>\n        </StyledBoardListBtn>\n\n        <StyledBoardListBtn onClick={HandleDelete} type=\"button\">\n          <StyledSVGTrash>\n            <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n          </StyledSVGTrash>\n        </StyledBoardListBtn>\n      </StyledBtnWrapper>\n\n      <BoardModalBase\n        isModalOpen={isModalOpen}\n        info={board}\n        onCloseModal={CloseModal}\n        action={'edit'}\n        SubmitForm={SubmitForm}\n      />\n    </StyledBoardList>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBoards } from 'redux/boards/operations';\nimport { selectAllBoards } from 'redux/boards/selectors';\nimport { StyledBoardListWrapper } from './BoardList.styled';\nimport { BoardListItem } from '../BoardListItem/BoardListItem';\n\nexport const BoardList = ({ onItemClick }) => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectAllBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const [activeItem, setActiveItem] = useState(null);\n\n  const handleBoardClick = board => {\n    setActiveItem(board);\n    onItemClick();\n  };\n  return (\n    <>\n      {boards.length > 0 && (\n        <StyledBoardListWrapper>\n          {boards.map(board => (\n            <li key={board._id}>\n              <BoardListItem\n                board={board}\n                isActive={board === activeItem}\n                onClick={() => handleBoardClick(board)}\n              />\n            </li>\n          ))}\n        </StyledBoardListWrapper>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components'\n\nexport const StyledSVG = styled.svg`\n  stroke:  ${p => p.theme.currentTheme.plusIconFill};\n  width: 20px;\n  height: 20px;\n`\n\nexport const StyledButton = styled.span`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color:${p => p.theme.currentTheme.btnPlusFill};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n\n  &:hover {\n    background-color: ${p => p.theme.currentTheme.hoverBtnPlusFill};\n  }\n`\n\nexport const StyledCreateBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 100%;\n    font-weight: 500;\n    line-height: 1.5;\n    text-align: start;\n\n    color:  ${p => p.theme.currentTheme.mainText};\n    padding: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`","import React from 'react';\nimport sprite from 'images/icons.svg';\nimport {\n  StyledCreateBtn,\n  StyledButton,\n  StyledSVG,\n} from './addBoardButton.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddBoardButton = ({ onClick }) => {\n  const { t } = useTranslation('global');\n  return (\n    <StyledCreateBtn onClick={onClick}>\n      {t('screenPage.static.addBoard')}\n      <StyledButton>\n        <StyledSVG>\n          <use xlinkHref={`${sprite}#icon-plus`}></use>\n        </StyledSVG>\n      </StyledButton>\n    </StyledCreateBtn>\n  );\n};\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { AddBoardButton } from './addBoardButton/addBoardButton'\nimport { BoardModalBase } from './ModalsBase/BoardModalBase'\nimport { addBoard } from 'redux/boards/operations'\n\nexport const AddBoard = () => {\n    const dispatch = useDispatch()\n    const [isModalOpen, setOpenModal] = useState(false)\n\n    function CloseModal() {\n        setOpenModal(false)\n    }\n\n    function OpenModal(event) {\n        event.stopPropagation()\n        setOpenModal(true)\n    }\n\n    function SubmitForm(info) {\n        dispatch(addBoard(info))\n        setOpenModal(false)\n    }\n\n    return (\n        <>\n            <AddBoardButton onClick={(event) => OpenModal(event)} />\n            <BoardModalBase isModalOpen={isModalOpen} info={{ title: '', iconURL: 'icon-Project', backgroundURL: '0' }} onCloseModal={CloseModal} action={'add'} SubmitForm={SubmitForm}/>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 70px 14px 14px;\n  height: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 60px 24px 24px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  font-size: 12px;\n  color: ${p => p.theme.currentTheme.greySubtitle};\n  padding-bottom: ${p => p.theme.spacing(2)};\n  letter-spacing: -0.02em;\n`;\n\nexport const StyledCreateWrapper = styled.div`\n  padding: ${p => p.theme.spacing(3.5)} 0;\n  border-top: 1px solid ${p => p.theme.currentTheme.line};\n  border-bottom: 1px solid ${p => p.theme.currentTheme.line};\n`;\nexport const StyledLogoutBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 100%;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(3.5)};\n  align-items: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\n// export const StyledSVGPlus = styled.svg`\n//   fill: ${p => p.theme.violetColors.accentColor};\n//   stroke: rgb(255, 255, 255);\n//   width: 20px;\n//   height: 20px;\n//   padding: 8px 10px;\n// `;\n\nexport const StyledSVGLogout = styled.svg`\n  fill: transparent;\n  stroke: ${p => p.theme.currentTheme.iconLogout};\n\n  width: 32px;\n  height: 32px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.hoverIconLogout};;\n    opacity: 0.5;\n  }\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  gap: 24px;\n`;\n\nexport const Boards = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 100%;\n  max-width: 335px;\n  min-width: 320px;\n  height: 355px;  \n  background: ${p => p.theme.currentTheme.modalBgn};\n  border-radius: ${p => p.theme.radius.m};\n  border: none;\n  padding: 24px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n\n  @media (min-width: 768px) {\n    width: 400px;\n  }\n  @media (min-width: 335px) {\n    width: 335px;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  margin-bottom: ${p => p.theme.spacing(6)};\n  color:  ${p => p.theme.currentTheme.mainText};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n  border: 1px solid ${p => p.theme.currentTheme.accent};\n  border-radius: ${p => p.theme.radius.m};\n  box-sizing: border-box;\n  opacity: 0.4;\n  margin-bottom: 14px; \n  letter-spacing: -0.02em;  \n  outline: none;\n  background: ${p => p.theme.currentTheme.inputBgn};\n  color:  ${p => p.theme.currentTheme.maintext};\n  &:placeholder {\n    font-size: 14px;\n\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const CommentInput = styled.textarea`\n  width: 100%;\n  height: 120px;   \n  padding: 14px 18px; \n  border: 1px solid  ${p => p.theme.currentTheme.accent};\n  border-radius: ${p => p.theme.radius.m};\n  box-sizing: border-box;\n  resize: none;\n  opacity: 0.4;    \n  letter-spacing: -0.02em;\n  margin-bottom: 24px;\n  outline: none; \n  background: ${p => p.theme.currentTheme.inputBgn};\n  color:  ${p => p.theme.currentTheme.maintext};\n  &:placeholder {\n    font-size: 14px;    \n  }\n   &:focus {\n    opacity: 1;\n  } \n\n`;\n\nexport const SendButton = styled.button`\n  width: 100%;  \n  padding: 14px;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  cursor: pointer;\n  background-color: ${p => p.theme.currentTheme.accent};\n color:${p => p.theme.colors.white};\n  font-weight: 500;  \n  letter-spacing: -0.02em;\n  text-align: center;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover {\n  background-color: ${props => props.theme.currentTheme.hoverButton};\n}\n`;\nexport const StyledSvgClose = styled.svg`\n  fill:  ${p => p.theme.currentTheme.modalBgn};\n  stroke: ${props => props.theme.currentTheme.mainText};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n  @media (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import Modal from 'react-modal';\nimport sprite from '../../images/icons.svg';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ModalWrapper,\n  CloseButton,\n  ModalTitle,\n  Input,\n  CommentInput,\n  SendButton,\n  StyledSvgClose,\n} from './NeedHelpModal.styled';\nimport { sendHelpRequest } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Please enter a valid email address').required(''),\n  comment: Yup.string().required(''),\n});\n\nexport const NeedHelpModal = ({ isOpen, onClose, onItemClick }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation('global');\n\n  const handleSend = async ({ email, comment }) => {\n    dispatch(sendHelpRequest({ email, comment }))\n      .then(() => {\n        console.log('Request sent successfully');\n        onClose();\n      })\n      .catch(error => {\n        console.error('Error sending request:', error);\n      });\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal-content\"\n      onRequestClose={onClose}\n      ariaHideApp={false}\n    >\n      <ModalWrapper>\n        <CloseButton onClick={onClose}>\n          <StyledSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </StyledSvgClose>\n        </CloseButton>\n        <ModalTitle>{t('screenPage.static.needHelp')}</ModalTitle>\n        <Formik\n          initialValues={{ email: '', comment: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSend}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('screenPage.render.modal.help.email')}\n                as={Field}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n              <Field\n                type=\"text\"\n                name=\"comment\"\n                placeholder={t('screenPage.render.modal.help.text')}\n                as={CommentInput} \n                            \n              />\n              <ErrorMessage\n                name=\"comment\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n              <SendButton type=\"submit\" onClick={onItemClick}>{t('screenPage.render.modal.profile.send')}</SendButton>\n            </Form>\n          )}\n        </Formik>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HelpContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  width: 197px;\n  padding: 14px;\n  background-color: ${p => p.theme.currentTheme.needHelpBgn};\n  border-radius: ${p => p.theme.radius.m};\n\n  @media (min-width: 768px) {\n    width: 212px;\n    padding: 20px;\n  }\n`;\n\nexport const HelpImage = styled.img`\n  max-width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n  margin-right: 100px;\n`;\n\nexport const HelpText = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n  margin-bottom: 18px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const HelpButton = styled.button`\n  width: 20px;\n  height: 20px;\n  display: flex;\n  border-radius: 50%;\n  border: none;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n  cursor: pointer;\n  margin-right: 11px;\n  padding: 0;\n  position: relative;\n  background: transparent;\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  align-items: center;\n  cursor: pointer;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n`;\n\nexport const IconContainer = styled.div`\n  font-size: 1.7em;\n\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  transform: translate(-10%, -10%);\n`;\n\nexport const TaskPro = styled.span`\n  color: ${p => p.theme.currentTheme.accent};\n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: -0.02em;\n  text-align: left;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { NeedHelpModal } from 'components/NeedHelpModal/NeedHelpModal.jsx';\nimport {\n  HelpContainer,\n  HelpImage,\n  HelpButton,\n  HelpText,\n  ButtonText,\n  IconContainer,\n  TaskPro,\n} from './HelpApp.styled.js';\nimport flowerImage from './../../images/flower.png';\nimport { CiCircleQuestion } from 'react-icons/ci';\nimport { useTranslation } from 'react-i18next';\n\nconst HelpApp = ({ onItemClick }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation('global');\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HelpContainer>\n      <HelpImage src={flowerImage} alt=\"flower\" />\n      <HelpText>\n        {t('screenPage.static.help')} <TaskPro>TaskPro</TaskPro>\n        {t('screenPage.static.help2')}\n      </HelpText>\n      <HelpButton onClick={openModal}>\n        <IconContainer>\n          <CiCircleQuestion />\n        </IconContainer>\n      </HelpButton>\n      <ButtonText onClick={openModal}>\n        {t('screenPage.static.needHelp')}\n      </ButtonText>\n\n      {isModalOpen && (\n        <NeedHelpModal\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          onItemClick={onItemClick}\n        />\n      )}\n    </HelpContainer>\n  );\n};\nexport default HelpApp;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport sprite from '../../../images/icons.svg';\nimport { BoardList } from '../BoardList/BoardList';\nimport { AddBoard } from 'components/boardModals/addBoard';\nimport {\n  Boards,\n  ItemsWrapper,\n  SidebarWrapper,\n  StyledCreateWrapper,\n  StyledLogoutBtn,\n  StyledSVGLogout,\n  StyledText,\n} from './SidebarNav.styled';\nimport { logout } from 'redux/auth/operations';\nimport HelpApp from 'components/HelpApp/HelpApp.jsx';\n\nexport const SidebarNav = ({ onItemClick }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  const handleClickSidebar = () => {\n    onItemClick();\n  };\n\n  const { t } = useTranslation('global');\n  return (\n    <SidebarWrapper>\n      <StyledText>{t('screenPage.static.my-boards')}</StyledText>\n      <Boards>\n        <StyledCreateWrapper>\n          <AddBoard onItemClick={handleClickSidebar} />\n        </StyledCreateWrapper>\n        <BoardList onItemClick={handleClickSidebar} />\n      </Boards>\n      <ItemsWrapper>\n        <HelpApp onItemClick={handleClickSidebar} />\n        <StyledLogoutBtn type=\"button\" onClick={handleClick}>\n          <StyledSVGLogout>\n            <use xlinkHref={`${sprite}#icon-login`}></use>\n          </StyledSVGLogout>\n          {t('screenPage.static.logout')}\n        </StyledLogoutBtn>\n      </ItemsWrapper>\n    </SidebarWrapper>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nexport const DarkBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(21, 21, 21, 0.3);\n  z-index: 999;\n`;\n\nexport const StyledSidebar = styled.aside`\n  width: 225px;\n  height: 100vh;\n  background-color: ${p => p.theme.currentTheme.sidebarBgn};\n  z-index: 999;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n  }\n  ${() => {\n    const { i18n } = useTranslation('global');\n    const dir = i18n.dir(i18n.language);\n\n    if (dir === 'rtl') {\n      return `\n        right: 0;\n        left: auto;\n      `;\n    } else {\n      return `\n        left: 0;\n        right: auto;\n      `;\n    }\n  }}\n  @media screen and (min-width: 1440px) {\n    z-index: 0;\n    position: static;\n    top: 0;\n    left: 0;\n  }\n`;\n","import { Logo } from './Logo/Logo';\nimport { SidebarNav } from './SidebarNav/SidebarNav';\nimport { StyledSidebar } from './Sidebar.styled';\nimport { forwardRef } from 'react';\n\nexport const Sidebar = forwardRef((props, ref) => {\n  return (\n    <StyledSidebar ref={ref}>\n      <Logo />\n      <SidebarNav onItemClick={props.onItemClick}/>\n    </StyledSidebar>\n  );\n});\n","import { useRef, useState } from 'react';\nimport sprite from '../../../images/icons.svg';\nimport {\n  BurgerMenuWrapper,\n  StyledBurgerMenu,\n  StyledSVGBurger,\n} from './BurgerMenu.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DarkBackground } from 'components/Sidebar/Sidebar.styled';\n\nexport const BurgerMenu = () => {\n  const [isOpen, setOpen] = useState(false);\n  const burgerMenuRef = useRef(null);\n  const sidebarRef = useRef(null);\n\n  const handleOpenSidebar = () => {\n    setOpen(!isOpen);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BurgerMenuWrapper>\n      <StyledBurgerMenu\n        type=\"button\"\n        onClick={handleOpenSidebar}\n        ref={burgerMenuRef}\n      >\n        <StyledSVGBurger>\n          <use xlinkHref={`${sprite}#icon-menu-01`}></use>\n        </StyledSVGBurger>\n      </StyledBurgerMenu>\n      {isOpen && (\n        <div>\n          <DarkBackground onClick={handleCloseSidebar}/>\n          <Sidebar ref={sidebarRef} onItemClick={handleCloseSidebar}/>\n        </div>\n      )}\n    </BurgerMenuWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\nbackground-color: ${p => p.theme.currentTheme.headerBgn} ;\n  display: flex;\n  justify-content: space-between;\n\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(5)};\n@media screen and (min-width: 768px) {\n    padding: ${p => p.theme.spacing(4.5)} ${p => p.theme.spacing(8)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 0;\n    padding: 18px 24px;\n  }\n`;\n\nexport const StyledHeaderItemWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n \n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Select from 'react-select';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst options = [\n  { value: 'light', label: 'Light' },\n  { value: 'dark', label: 'Dark' },\n  { value: 'violet', label: 'Violet' },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'transparent',\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    margin: 'auto 0',\n    padding: '0',\n    minHeight: '0',\n    lineHeight: '1',\n  }),\n\n  downChevron: provided => ({\n    ...provided,\n    width: '16px',\n    height: '16px',\n    padding: '0',\n    margin: '0 auto',\n  }),\n\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  input: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: '0',\n    margin: 'auto 0',\n\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: state.isSelected ? '#5255BC' : 'rgb(22, 22, 22)',\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    fontWeight: '500',\n    fontSize: '14px',\n    letterSpacing: '-0.02em',\n    color: `${p => p.theme.currentTheme.mainText}`,\n  }),\n};\n\nexport const ThemeDropDown = () => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const selectRef = useRef(null);\n  const handleChangeTheme = options => {\n    \n    const theme = options.value;    \n    dispatch(changeTheme({ theme }));\n    setMenuIsOpen(false);\n  };\n  const handleClickOutside = event => {\n    if (selectRef.current && !selectRef.current.contains(event.target)) {\n      setMenuIsOpen(false);\n    }\n  };\n\n  const toggleSelect = () => {\n    setMenuIsOpen(!menuIsOpen);\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return (\n    <div ref={selectRef}>\n      <Select \n        options={options}\n        styles={customStyles}\n        onChange={handleChangeTheme}\n        menuIsOpen={menuIsOpen}\n        onMenuOpen={toggleSelect}\n        onMenuClose={toggleSelect}\n        placeholder={t('screenPage.static.theme')}\n      />{' '}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledUserInfo = styled.div`\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const StyledUserBtn = styled.button`\n  width: 32px;\n  height: 32px;\n  background-color: transparent;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  padding: 0;\n`;\n\nexport const StyledUserName = styled.p`\n  color: ${p => p.theme.currentTheme.mainText};\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  margin: auto 0;\n`;\n\nexport const StyledUserPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radius.m};\n`;\n","import React from 'react';\nimport { IconUser } from '../EditProfileModal.styled';\nimport sprite from '../../../images/icons.svg';\n\nexport const PreviewAvatar = ({ avatar }) => {\n    \n  return (\n    <>\n      {avatar ? (\n        <img src={avatar.href} alt=\"user-avatar\" />\n      ) : (\n        <IconUser>\n          <use xlinkHref={`${sprite}#icon-user`}></use>\n        </IconUser>\n      )}\n    </>\n  );\n};","import React, { useState } from 'react';\nimport { UploadImage } from '../EditProfileModal.styled';\n\nexport const PreviewUploadAvatar = ({ file }) => {\n  const [preview, setPreview] = useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>{preview && <UploadImage src={preview} alt=\"user-avatar\" />}</>\n  );\n};","import React, { useRef, useState } from 'react';\nimport {\n  AddButton,\n  Button,\n  CLoseButton,\n  ErrMessage,\n  HideBtn,\n  IconClose,\n  IconEye,\n  IconPlus,\n  // ImageUser,\n  ModalWrap,\n  ProfileFotoBox,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n  Thumb,\n  TitleModal,\n} from './EditProfileModal.styled.js';\n\nimport sprite from '../../images/icons.svg';\nimport { PreviewAvatar } from './PreviewAvatar/PreviewAvatar.jsx';\nimport { PreviewUploadAvatar } from './PreviewAvatar/PreviewUploadAvatar.jsx';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { updateProfile } from 'redux/auth/operations.js';\nimport { useTranslation } from 'react-i18next';\n\nconst editFormSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short').max(30, 'To long'),\n  email: Yup.string().email('Please enter a valid email address'),\n\n  password: Yup.string()\n    .min(5, 'The password should be at least 5 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const EditProfileModal = ({ onCloseModal, avatar }) => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const handleSubmit = credentials => {\n    return dispatch(updateProfile(credentials));\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const onShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const fileRef = useRef(null);\n\n  return (\n    <ModalWrap>\n      <TitleModal>{t('screenPage.render.modal.profile.title')}</TitleModal>\n\n      <CLoseButton onClick={onCloseModal}>\n        <IconClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </IconClose>\n      </CLoseButton>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          avatar: null,\n        }}\n        validationSchema={editFormSchema}\n        onSubmit={(values, actions) => {\n          handleSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        {({ values, setFieldValue }) => (\n          <StyledForm>\n            <ProfileFotoBox>\n              <Thumb>\n                <input\n                  hidden\n                  ref={fileRef}\n                  type=\"file\"\n                  name=\"avatar\"\n                  onChange={e => {\n                    setFieldValue('avatar', e.target.files[0]);\n                  }}\n                />\n                {values.avatar ? (\n                  <PreviewUploadAvatar file={values.avatar} />\n                ) : (\n                  <PreviewAvatar avatar={avatar} />\n                )}\n              </Thumb>\n\n              <AddButton type=\"button\" onClick={() => fileRef.current.click()}>\n                <IconPlus>\n                  <use xlinkHref={`${sprite}#icon-plus`}></use>\n                </IconPlus>\n              </AddButton>\n            </ProfileFotoBox>\n\n            <StyledLabel htmlFor=\"name\">\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                placeholder={t('screenPage.render.modal.profile.name')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"name\" />\n            </StyledLabel>\n\n            <StyledLabel htmlFor=\"email\">\n              <StyledField\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('screenPage.render.modal.profile.email')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"email\" />\n            </StyledLabel>\n\n            <StyledLabel htmlFor=\"password\">\n              <StyledField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder={t('screenPage.render.modal.profile.password')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"password\" />\n              <HideBtn type=\"button\" onClick={onShowPassword}>\n                <IconEye>\n                  <use xlinkHref={`${sprite}#icon-eye`}></use>\n                </IconEye>\n              </HideBtn>\n            </StyledLabel>\n\n            <Button type=\"submit\" onClick={onCloseModal}>\n              {t('screenPage.render.modal.profile.send')}\n            </Button>\n          </StyledForm>\n        )}\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import {\n  StyledUserInfo,\n  StyledUserName,\n  StyledUserPhoto,\n  StyledUserBtn,\n} from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditProfileModal } from 'components/EditProfileModal/EditProfileModal';\nimport '../../EditProfileModal/EditModal.css';\nimport { selectAvatar, selectUser } from 'redux/auth/selectors';\nimport { IconUserInfo } from 'components/EditProfileModal/EditProfileModal.styled';\nimport sprite from '../../../images/icons.svg';\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n  const userName = useSelector(selectUser);\n  const userAvatar = useSelector(selectAvatar);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const avatarURL =\n    userAvatar &&\n    new URL(userAvatar, 'https://task-pro-backend-a1c2.onrender.com/public');\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <StyledUserInfo>\n      <StyledUserName>{userName.name}</StyledUserName>\n      <StyledUserBtn type=\"button\" onClick={openModal}>\n        {!!userAvatar ? (\n          <StyledUserPhoto\n            src={avatarURL}\n            alt=\"user_photo\"\n            width={32}\n            height={32}\n          />\n        ) : (\n          <IconUserInfo>\n            <use xlinkHref={`${sprite}#icon-user`}></use>\n          </IconUserInfo>\n        )}\n      </StyledUserBtn>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <EditProfileModal onCloseModal={closeModal} avatar={avatarURL} />\n      </Modal>\n    </StyledUserInfo>\n  );\n};\n","import { SelectLanguage } from 'components/SelectLanguage/SelectLanguage';\nimport { BurgerMenu } from './BurgerMenu/BurgerMenu';\nimport { StyledHeader, StyledHeaderItemWrapper } from './Header.styled';\nimport { ThemeDropDown } from './ThemeDropDown/ThemeDropDown';\nimport { UserInfo } from './UserInfo/UserInfo';\n\nexport const Header = () => {\n  return (\n    <StyledHeader>\n      <BurgerMenu />\n      <StyledHeaderItemWrapper>\n        <SelectLanguage />\n        <ThemeDropDown />\n        <UserInfo />\n      </StyledHeaderItemWrapper>\n    </StyledHeader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  min-height: 100vh;    \n  min-width: 320px;\n  margin: 0 auto; \n  display: flex;\n  justify-content: center;\n  @media only screen and (min-width: 375px) {\n     min-width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 768px;\n  }\n\n  @media screen and (min-width: 1440px) {\n   min-width: 1440px;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;","import { Header } from 'components/Header/Header';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\n\nimport { HeaderWrapper, HomeWrapper } from './HomePage.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ScreensPage from './ScreensPage';\n\nexport default function HomePage() {\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n  const {\n    // t,\n    i18n,\n  } = useTranslation('global');\n\n  useEffect(() => {\n    const dir = i18n.dir(i18n.language);\n    document.documentElement.dir = dir;\n  }, [i18n, i18n.language]);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <HomeWrapper>\n      <Helmet>\n        <title>Boards</title>\n      </Helmet>\n      {isWideScreen && <Sidebar />}\n      <HeaderWrapper>\n        <Header />\n        <ScreensPage />\n      </HeaderWrapper>\n    </HomeWrapper>\n  );\n}"],"names":["CustomDropdownIcon","_jsx","GrLanguage","IconLanguage","DropdownIndicator","props","components","_objectSpread","children","width","height","options","value","label","_jsxs","class","customStyles","control","provided","state","color","isFocused","border","boxShadow","display","margin","padding","minHeight","lineHeight","backgroundColor","downChevron","IndicatorContainer","indicatorSeparator","input","dropdownIndicator","stroke","concat","p","theme","currentTheme","mainText","content","option","isSelected","placeholder","menu","maxHeight","borderRadius","overflowY","menuList","i18n","useTranslation","_useState","useState","_useState2","_slicedToArray","menuIsOpen","setMenuIsOpen","selectRef","useRef","handleClickOutside","event","current","contains","target","toggleSelect","useEffect","document","addEventListener","removeEventListener","ref","Select","styles","onChange","selectedOption","changeLanguage","onMenuOpen","onMenuClose","SelectLanguage","handleChange","lang","CustomDropdown","handleChangeLanguage","e","selectedLanguage","BurgerMenuWrapper","styled","_templateObject","_taggedTemplateLiteral","spacing","StyledBurgerMenu","_templateObject2","isOpen","StyledSVGBurger","_templateObject3","StyledLogoWrapper","StyledLogoIcon","radius","m","needHelpBgn","StyledLogoText","iconNeedHelp","StyledSVGLogo","_templateObject4","logo","Logo","xlinkHref","sprite","StyledBoardListWrapper","StyledModal","Modal","modalBgn","grayText","Form","CloseButton","CloseSVG","BigHeader","_templateObject5","TitleInput","_templateObject6","accent","SmallHeader","_templateObject7","List","_templateObject8","Radio","_templateObject9","IconSVG","_templateObject10","iconStroke","Pic","_templateObject11","SubmitButton","_templateObject12","plusIconFill","hoverButton","plusIconStroke","pictures_mini","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","BoardModalBase","_ref","isModalOpen","info","onCloseModal","action","SubmitForm","t","title","setTitle","_useState3","iconURL","_useState4","setIcon","_useState5","backgroundURL","_useState6","setBackground","close","overlayClassName","className","onRequestClose","ariaHideApp","onClick","onSubmit","preventDefault","sub","id","name","required","map","Icon","index","type","checked","Background","alt","src","StyledBoardList","isActive","colors","white","StyledBoardItem","_ref2","greySubtitle","_ref3","StyledSVGPensil","StyledSVGTrash","StyledBoardListBtn","StyledBtnWrapper","_ref4","BoardListItem","board","dispatch","useDispatch","navigate","useNavigate","setOpenModal","getBoardById","_id","Link","to","deleteBoard","editBoard","BoardList","onItemClick","boards","useSelector","selectAllBoards","fetchBoards","activeItem","setActiveItem","_Fragment","length","handleBoardClick","StyledSVG","StyledButton","btnPlusFill","hoverBtnPlusFill","StyledCreateBtn","AddBoardButton","AddBoard","stopPropagation","OpenModal","addBoard","SidebarWrapper","StyledText","StyledCreateWrapper","line","StyledLogoutBtn","StyledSVGLogout","iconLogout","hoverIconLogout","ItemsWrapper","Boards","ModalWrapper","ModalTitle","Input","Field","inputBgn","maintext","CommentInput","SendButton","StyledSvgClose","validationSchema","Yup","email","comment","NeedHelpModal","onClose","handleSend","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sendHelpRequest","then","console","log","catch","error","stop","_x","apply","arguments","Formik","initialValues","isSubmitting","as","ErrorMessage","component","HelpContainer","HelpImage","HelpText","HelpButton","ButtonText","IconContainer","TaskPro","setIsModalOpen","openModal","flowerImage","CiCircleQuestion","SidebarNav","handleClickSidebar","HelpApp","logout","DarkBackground","StyledSidebar","sidebarBgn","dir","language","Sidebar","forwardRef","BurgerMenu","setOpen","burgerMenuRef","sidebarRef","handleCloseSidebar","StyledHeader","headerBgn","StyledHeaderItemWrapper","fontWeight","fontSize","letterSpacing","ThemeDropDown","changeTheme","StyledUserInfo","StyledUserBtn","StyledUserName","StyledUserPhoto","PreviewAvatar","avatar","href","IconUser","PreviewUploadAvatar","file","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","UploadImage","editFormSchema","shape","min","max","password","matches","EditProfileModal","showPassword","setShowPassword","onShowPassword","fileRef","ModalWrap","TitleModal","CLoseButton","IconClose","values","actions","credentials","updateProfile","resetForm","setFieldValue","StyledForm","ProfileFotoBox","Thumb","hidden","files","AddButton","click","IconPlus","StyledLabel","htmlFor","StyledField","ErrMessage","HideBtn","IconEye","Button","UserInfo","userName","selectUser","userAvatar","selectAvatar","avatarURL","URL","closeModal","IconUserInfo","closeTimeoutMS","Header","HomeWrapper","HeaderWrapper","HomePage","window","innerWidth","isWideScreen","setIsWideScreen","documentElement","handleResize","Helmet","ScreensPage"],"sourceRoot":""}