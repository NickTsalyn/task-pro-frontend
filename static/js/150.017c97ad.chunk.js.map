{"version":3,"file":"static/js/150.017c97ad.chunk.js","mappings":"iHAqPA,IAAe,IAA0B,yD,6bClP5BA,GAAYC,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,8GAOtBC,GAAcH,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,oHAC1B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAOhCC,GAAoBT,GAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,oDAK9BS,GAAOX,GAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,GAAAA,GAAA,gKAClB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaM,UAAU,IASnCC,GAAOd,GAAAA,GAAAA,KAAWe,IAAAA,GAAAb,EAAAA,GAAAA,GAAA,8FACpB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaM,UAAU,IAMlCG,GAAShB,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,0YAerB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,GAExCP,IACU,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,GAG1CJ,IACS,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAKlCC,GAAUnB,GAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,mGAQpBmB,GAAarB,GAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,qPAQxB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IASjCe,GAAevB,GAAAA,GAAAA,GAASwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,sHAC1B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAOhCiB,GAAOzB,GAAAA,GAAAA,IAAU0B,IAAAA,GAAAxB,EAAAA,GAAAA,GAAA,gEACJ,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaoB,IAAI,IAI3CC,GAAa5B,GAAAA,GAAAA,IAAU6B,IAAAA,GAAA3B,EAAAA,GAAAA,GAAA,+GAOvB4B,GAAY9B,GAAAA,GAAAA,KAAW+B,IAAAA,GAAA7B,EAAAA,GAAAA,GAAA,8FACzB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAayB,UAAU,IAMlCC,GAAejC,GAAAA,GAAAA,EAAQkC,IAAAA,GAAAhC,EAAAA,GAAAA,GAAA,iPACzB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4B,QAAQ,IAchCC,IAAkBpC,EAAAA,GAAAA,IAAOqC,GAAAA,GAAPrC,CAAYsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,yHAQ9BqC,GAAoBvC,GAAAA,GAAAA,IAAUwC,IAAAA,GAAAtC,EAAAA,GAAAA,GAAA,gmCAC5B,SAAAuC,GAAK,OAAIA,EAAMC,QAAQ,IASV,SAAArC,GAClB,MAAmB,YAAfA,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeC,QAEb,QAAfvC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeE,IAEb,WAAfxC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeG,OAEb,SAAfzC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeI,UADhC,CAGF,IAGI,SAAA1C,GACA,MAAmB,YAAfA,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeC,QAEb,QAAfvC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeE,IAEb,WAAfxC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeG,OAEb,SAAfzC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeI,UADhC,CAGF,IAgBoB,SAAA1C,GAClB,MAAmB,YAAfA,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeC,QAEb,QAAfvC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeE,IAEb,WAAfxC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeG,OAEb,SAAfzC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeI,UADhC,CAGF,IAMK,SAAA1C,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAMvB,SAAAH,GACd,MAAmB,YAAfA,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeC,QAEb,QAAfvC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeE,IAEb,WAAfxC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeG,OAEb,SAAfzC,EAAEqC,SACGrC,EAAEC,MAAMqC,eAAeI,UADhC,CAGF,IAMK,SAAA1C,GAAC,OAAIA,EAAEC,MAAMC,aAAa4B,QAAQ,I,2CC/OpCa,GAA0B,SAAHC,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OAChDC,EAAAA,GAAAA,KAACC,GAAAA,GAAiB,CAACC,kBAAmB,SAAAC,GAAI,MAAa,aAATA,CAAmB,EAACJ,SAC/DA,GACiB,ECChBK,GAAU,CAAC,UAAW,MAAO,SAAU,QAqC7C,GAnC6B,SAAHN,GAA6B,IAAvBO,EAAeP,EAAfO,gBACxBC,GAAWC,EAAAA,GAAAA,MACXC,EAAgB,CACpBC,MAAOJ,GAMT,OACEL,EAAAA,GAAAA,KAACH,GAAuB,CAAAE,UACtBC,EAAAA,GAAAA,KAACU,GAAAA,GAAM,CAACF,cAAeA,EAAcT,UACnCC,EAAAA,GAAAA,KAACf,GAAe,CAAAc,SACbK,GAAQO,KAAI,SAAAC,GAAE,OACbC,EAAAA,GAAAA,MAACzB,GAAiB,CAAUG,SAAUqB,EAAGb,SAAA,EACvCC,EAAAA,GAAAA,KAAA,SACEc,GAAIF,EACJG,KAAK,QACLC,KAAK,WACLC,SAdGC,EAceN,EAbvBP,EAAgBc,SAASD,IAcpBE,SAAU,SAAAC,GACRf,GAASgB,EAAAA,GAAAA,IAAeD,EAAEE,OAAOT,IACnC,KAEFd,EAAAA,GAAAA,KAAA,SAAOwB,QAASZ,EAAIa,UAAU,cAAa1B,SACxCa,MAXmBA,GATjB,IAAAM,CAsBa,SAMhC,EC/BA,GAPqB,SAAHpB,GAAqB,IAAf4B,EAAO5B,EAAP4B,QAEhBC,GADSC,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOA,MAAM,IAChCC,MAAK,SAAAnB,GAAE,OAAIA,EAAGoB,MAAQN,CAAO,IAEpD,OAAO1B,EAAAA,GAAAA,KAAChD,GAAW,CAAA+C,SAAE4B,EAAUA,EAAQM,MAAQ,IACjD,E,sBCiBaC,GAAkB,WAC7B,IAAQC,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EACF7B,GAAWC,EAAAA,GAAAA,MACjB8B,GAAwBC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAc,WAAH,OAASD,GAAQ,EAAO,EACnCrC,GAAkBuB,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMe,QAAQvC,eAAe,IAClEqB,GAAYmB,EAAAA,GAAAA,MAAZnB,QAEFoB,EAAe,CACnBC,QAAS,CACPC,gBAAiB,eAEnBC,QAAS,CACPC,MAAO,QACPC,OAAQ,QACRC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXT,gBAAgB,GAADU,QAAK,SAAAxG,GAAC,OAAIA,EAAEC,MAAMC,aAAauG,QAAQ,MAI1D,OACE3D,EAAAA,GAAAA,KAAA,OAAAD,UACEc,EAAAA,GAAAA,MAAChB,GAAuB,CAAAE,SAAA,EACtBc,EAAAA,GAAAA,MAACjE,GAAS,CAAAmD,SAAA,EACRC,EAAAA,GAAAA,KAAC4D,GAAY,CAAClC,QAASA,KACvB1B,EAAAA,GAAAA,KAACnC,GAAM,CAACgG,QA3BG,WAAH,OAASnB,GAAQ,EAAM,EA2BH3C,UAC1Bc,EAAAA,GAAAA,MAACvD,GAAiB,CAAAyC,SAAA,EAChBC,EAAAA,GAAAA,KAACxC,GAAI,CAAAuC,UACHC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,qBAE3B/D,EAAAA,GAAAA,KAACrC,GAAI,CAAAoC,SAAEoC,EAAE,wCAIftB,EAAAA,GAAAA,MAACmD,KAAK,CACJC,OAAQxB,EACRyB,eAAgBvB,EAChBwB,MAAOrB,EACPsB,WAAYC,SAASC,eAAe,QAAQvE,SAAA,EAE5CC,EAAAA,GAAAA,KAAC9B,GAAU,CAAC2F,QAASlB,EAAa3B,KAAK,SAAQjB,UAC7CC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,sBAE3B/D,EAAAA,GAAAA,KAAChC,GAAO,CAAA+B,UACNc,EAAAA,GAAAA,MAAA,OAAAd,SAAA,EACEC,EAAAA,GAAAA,KAAC5B,GAAY,CAAA2B,SAAEoC,EAAE,2CACjBnC,EAAAA,GAAAA,KAAC1B,GAAI,KACLuC,EAAAA,GAAAA,MAACpC,GAAU,CAAAsB,SAAA,EACTC,EAAAA,GAAAA,KAACrB,GAAS,CAAAoB,SAAEoC,EAAE,4CACdnC,EAAAA,GAAAA,KAAClB,GAAY,CACX+E,QAAS,WACPvD,GAASiE,EAAAA,GAAAA,MACX,EAAExE,SAEDoC,EAAE,6CAGPnC,EAAAA,GAAAA,KAACwE,GAAoB,CAACnE,gBAAiBA,gBAOrD,E,61BC/EaoE,GAAqB,CAAEC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,I,04BCApFC,GAAqB,CAAEf,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,I,61BCApFE,GAAqB,CAAEhB,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,I,04BCApFG,GAAqB,CAAEjB,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,I,42BCApFI,GAAsB,CAAElB,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,I,y5BCArFK,GAAsB,CAAEnB,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,GAAAA,GAAIC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,GAAKC,IAAAA,ICRrFM,GAAqBjJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,s0BACtB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa2I,UAAU,IAEhC,SAAAzG,GAAK,OAAImF,GAAmBnF,EAAM0G,KAAK,IASrC,SAAA1G,GAAK,OAAImG,GAAmBnG,EAAM0G,KAAK,IAIvC,SAAA1G,GAAK,OAAIoG,GAAmBpG,EAAM0G,KAAK,IAKrC,SAAA1G,GAAK,OAAIqG,GAAmBrG,EAAM0G,KAAK,IAKzC,SAAA1G,GAAK,OAAIsG,GAAoBtG,EAAM0G,KAAK,IAKtC,SAAA1G,GAAK,OAAIuG,GAAoBvG,EAAM0G,KAAK,I,WCvCzDC,GAAgB,SAAApE,GAAK,OAAIA,EAAMqE,QAAQA,OAAQ,ECE/CC,GAAmBtJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,yXAmB7BY,GAAOd,GAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,4dAMjB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAagJ,QAAQ,IAgBhCC,GAAYxJ,GAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,6MAKzB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,I,sBC9ChCuI,GAAmBzJ,GAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,oLAOvB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAamJ,QAAQ,IAG3CC,GAAiB3J,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,kSAC9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAChC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAcjCoJ,GAAY5J,GAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,wUAMhB,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAG3B,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IClCvBC,GAAkBhK,GAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,kfAatB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa0J,iBAAiB,IACtD,SAAA5J,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAC1B,SAAAH,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAEtB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMC,aAAa2J,aAAa,IAQ5CC,GAAiBnK,GAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,qKAC3B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAShC4J,GAAiBpK,GAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,qbAQvB,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IACzB,SAAAb,GAAC,OAAIA,EAAEC,MAAM+J,OAAOC,WAAW,IAEjD,SAAAjK,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAIpB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAO5CqJ,IAAevK,EAAAA,GAAAA,KC7DN,SAAHiD,GAMZ,IALLC,EAAQD,EAARC,SAAQsH,EAAAvH,EACRkB,KAAAA,OAAI,IAAAqG,EAAG,QAAOA,EACd5F,EAAS3B,EAAT2B,UACA6F,EAAYxH,EAAZwH,aACA7G,EAAKX,EAALW,MAEA,OACET,EAAAA,GAAAA,KAAA,UACEgB,KAAMA,EACNS,UAAWA,EACXoC,QAASyD,EACT,aAAY7G,EAAMV,SAEjBA,GAGP,GD4C4BlD,CAAcY,IAAAA,GAAAV,EAAAA,GAAAA,GAAA,gcAapB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAC3C,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,aAAa2J,aAAa,IAK1B,SAAA7J,GAAC,OAAIA,EAAEC,MAAMC,aAAamK,WAAW,IAQhDC,GAAgB3K,GAAAA,GAAAA,KAAWe,IAAAA,GAAAb,EAAAA,GAAAA,GAAA,kKAMlB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa2J,aAAa,IAC1C,SAAA7J,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAG3Bc,GAAiB5K,GAAAA,GAAAA,KAAWiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,kKAMnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAamK,WAAW,IACxC,SAAArK,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAG3Be,GAAqB7K,GAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,gKAClC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IACpC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IASrCC,GAAoB/K,GAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,gKACjC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAayK,cAAc,IACtC,SAAA3K,GAAC,OAAIA,EAAEC,MAAMC,aAAayK,cAAc,IElGvCC,GAAiB,SAAHhI,GAA0B,IAApBiI,EAAYjI,EAAZiI,aACvB5F,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EACF7B,GAAWC,EAAAA,GAAAA,MACTmB,GAAYmB,EAAAA,GAAAA,MAAZnB,QAgDR,OACEb,EAAAA,GAAAA,MAAC4F,GAAS,CAAA1G,SAAA,EACRC,EAAAA,GAAAA,KAACgH,GAAc,CAAAjH,SACZoC,EAAE,8CAGLnC,EAAAA,GAAAA,KAACsG,GAAgB,CAACzC,QAASkE,EAAahI,UACtCC,EAAAA,GAAAA,KAACwG,GAAc,CAAAzG,UACbC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,wBAI7BlD,EAAAA,GAAAA,MAAA,QAAMmH,SAlCe,SAAAC,GACvBA,EAAIC,iBAEJ,IACE,IAAMC,EAAaF,EAAI1G,OAAOU,MAAMf,MAAMkH,OAE1C,GAAmB,KAAfD,EAAmB,CACrB,IAAME,EAAY,CAChBpG,MAAOkG,EACPG,YAAa5G,GAEfpB,GAASiI,EAAAA,GAAAA,IAAUF,IACnBN,IAnCJS,GAAAA,GAAAA,QAAc,qCAAsC,CAClDC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SAkCP,MA7BFH,GAAAA,GAAAA,QAAc,gCAAiC,CAC7CC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SA+BT,CAFE,MAAOC,IAzBU,SAAAA,GACnBJ,GAAAA,GAAAA,MAAY,8BAAD9E,OAA+BkF,EAAK,UAAU,CACvDH,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,OAEX,CAoBIE,CAAaD,EAAME,QACrB,CACF,EAcqC/I,SAAA,EAC/BC,EAAAA,GAAAA,KAACiH,GAAc,CACbjG,KAAK,OACLD,KAAK,QACLgI,YAAa5G,EAAE,wCACf6G,WAAS,KAGXnI,EAAAA,GAAAA,MAACuG,GAAY,CAACpG,KAAK,SAAQjB,SAAA,EACzBC,EAAAA,GAAAA,KAACwH,GAAa,CAAAzH,UACZC,EAAAA,GAAAA,KAAC4H,GAAiB,CAAA7H,UAChBC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,oBAG5B5B,EAAE,8CAKb,EC3Fa8G,GAAkB,SAAHnJ,GAAoB,IAAdoJ,EAAMpJ,EAANoJ,OACxB/G,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EACRE,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9C8G,EAAW5G,EAAA,GAAE6G,EAAc7G,EAAA,GAM5B8G,EAAa,WACjBD,GAAe,EACjB,EAEA,OACEvI,EAAAA,GAAAA,MAAAyI,GAAAA,SAAA,CAAAvJ,SAAA,EACEc,EAAAA,GAAAA,MAACgG,GAAe,CAAC7F,KAAK,SAAS6C,QAVjB,WAChBuF,GAAe,EACjB,EAQsDrJ,SAAA,EAChDC,EAAAA,GAAAA,KAACyH,GAAc,CAAA1H,UACbC,EAAAA,GAAAA,KAAC0H,GAAkB,CAAA3H,UACjBC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,oBAG5B5B,EAAE,mCAGLnC,EAAAA,GAAAA,KAACgE,KAAK,CACJC,OAAQkF,EACRjF,eAAgBmF,EAChBE,iBAAkB,gBAClB9H,UAAW,gBACX+H,eAAgB,IAAIzJ,UAEpBC,EAAAA,GAAAA,KAAC8H,GAAc,CAACC,aAAcsB,EAAYH,OAAQA,QAI1D,EC9CaO,GAAoB5M,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,k8BAGlC,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAsBV,SAAA1J,GAAC,OACnBA,EAAEC,MAAMC,aAAasM,cAAc,IACpB,SAAAxM,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOiD,CAAC,IAIlB,SAAAzM,GAAC,OACnBA,EAAEC,MAAMC,aAAa0J,iBAAiB,IACvB,SAAA5J,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOiD,CAAC,IAI7BC,GAAmB/M,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,iEAGhC,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAErBiD,GAAsBhN,GAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,2BC1ChC+M,GAAgBjN,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,uDAI1BgN,GAAelN,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,sMAMzB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAEnB,SAAA1J,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IAE1CC,GAAcpN,GAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,+FACnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAG7B,SAAA1J,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAEhC6M,GAAYrN,GAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,GAAAA,GAAA,uFACjB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAGhC,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAEnBuD,GAAatN,GAAAA,GAAAA,OAAae,IAAAA,GAAAb,EAAAA,GAAAA,GAAA,8GAIjB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IAG1CI,GAAUvN,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,yHACrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAayB,UAAU,IACtC,SAAA3B,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IAK7B,SAAA9M,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,ICrCtCsM,GAAW,SAAC/K,GAChB,OAAQA,EAAM4B,OACZ,IAAK,MACH,OAAO5B,EAAMnC,MAAMqC,eAAeE,IACpC,IAAK,SACH,OAAOJ,EAAMnC,MAAMqC,eAAeG,OACpC,IAAK,OACH,OAAOL,EAAMnC,MAAMqC,eAAeI,KACpC,QACE,OAAON,EAAMnC,MAAMqC,eAAeC,QAExC,EAEa6K,IAAiBzN,EAAAA,GAAAA,IAAOqC,GAAAA,GAAPrC,CAAYC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,yHAMtB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IAGxCO,GAAmB1N,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,2EAQ7ByN,GAAgB3N,GAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,kHAI7B,SAAAG,GAAC,OAAGA,EAAEC,MAAMC,aAAaC,QAAQ,IAK7BoN,GAAkB5N,GAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,GAAAA,GAAA,0EAO5B2N,IAAe7N,EAAAA,GAAAA,IAAO8N,GAAAA,GAAP9N,CAAae,IAAAA,GAAAb,EAAAA,GAAAA,GAAA,2dAMtB,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IACtC,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,aAAamJ,QAAQ,IACvC,SAAArJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAGZ,SAAAH,GAAC,OAAIA,EAAEC,MAAM+J,OAAOC,WAAW,IAInD,SAAAjK,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAOlCuN,GAAqB/N,GAAAA,GAAAA,SAAeiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,6cAM9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IACtC,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,aAAamJ,QAAQ,IACvC,SAAArJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAGZ,SAAAH,GAAC,OAAIA,EAAEC,MAAM+J,OAAOC,WAAW,IAKnD,SAAAjK,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAqBlCwN,KAdchO,EAAAA,GAAAA,IAAO8N,GAAAA,GAAP9N,CAAaoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,6OAMrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAM2N,aAAaC,WAAW,IAC3C,SAAA7N,GAAC,OAAIA,EAAEC,MAAM2N,aAAaE,OAAO,IACtC,SAAA9N,GAAC,OAAIA,EAAEC,MAAM+J,OAAO+D,aAAa,IAKZpO,GAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,uEAM7BmO,GAAmBrO,GAAAA,GAAAA,EAAQwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,4GAK/B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4B,QAAQ,IAI9BmM,IAAoBtO,EAAAA,GAAAA,IAAO8N,GAAAA,GAAP9N,CAAa0B,IAAAA,GAAAxB,EAAAA,GAAAA,GAAA,2mBAQpB,SAACuC,GAAK,OAAK+K,GAAS/K,EAAM,IAI1C,SAACA,GAAK,OAAK+K,GAAS/K,EAAM,IAcR,SAACA,GAAK,OAAK+K,GAAS/K,EAAM,IA+BzC8L,IA1BmBvO,GAAAA,GAAAA,MAAY6B,IAAAA,GAAA3B,EAAAA,GAAAA,GAAA,ieAetB,SAACuC,GAAK,OAAK+K,GAAS/K,EAAM,IAE1B,SAACA,GAAK,OAAK+K,GAAS/K,EAAM,IAI1B,SAACA,GAAK,OAAK+K,GAAS/K,EAAM,IAKjBzC,GAAAA,GAAAA,IAAU+B,IAAAA,GAAA7B,EAAAA,GAAAA,GAAA,2CAI5BsO,GAAaxO,GAAAA,GAAAA,OAAakC,KAAAA,IAAAhC,EAAAA,GAAAA,GAAA,iUAQnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAQvCuN,GAAiBzO,GAAAA,GAAAA,IAAUsC,KAAAA,IAAApC,EAAAA,GAAAA,GAAA,qEAK3BwO,GAAoB1O,GAAAA,GAAAA,IAAUwC,KAAAA,IAAAtC,EAAAA,GAAAA,GAAA,8FAM9ByO,GAAiB3O,GAAAA,GAAAA,EAAQ4O,KAAAA,IAAA1O,EAAAA,GAAAA,GAAA,sGAK9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4B,QAAQ,IAE7B0M,GAAsB7O,GAAAA,GAAAA,KAAW8O,KAAAA,IAAA5O,EAAAA,GAAAA,GAAA,gLAQ3B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAQ5CiE,GAAmB/O,GAAAA,GAAAA,IAAUgP,KAAAA,IAAA9O,EAAAA,GAAAA,GAAA,6GAEhC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IACpC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMC,aAAayK,cAAc,IAMvCiE,GAAuBjP,GAAAA,GAAAA,EAAQkP,KAAAA,IAAAhP,EAAAA,GAAAA,GAAA,6HAInC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAIlCqE,GAAiBnP,GAAAA,GAAAA,OAAaoP,KAAAA,IAAAlP,EAAAA,GAAAA,GAAA,oeASvB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAevCmO,GAAkBrP,GAAAA,GAAAA,IAAUsP,KAAAA,IAAApP,EAAAA,GAAAA,GAAA,iFACjC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAC9B,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAInC+O,GAAoBvP,GAAAA,GAAAA,IAAUwP,KAAAA,IAAAtP,EAAAA,GAAAA,GAAA,4DAO9BuP,GAAUzP,GAAAA,GAAAA,EAAQ0P,KAAAA,IAAAxP,EAAAA,GAAAA,GAAA,qEAGrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAG7ByO,GAAa3P,GAAAA,GAAAA,OAAa4P,KAAAA,IAAA1P,EAAAA,GAAAA,GAAA,8QAc5B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAEpC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAI/B2O,GAA0B7P,GAAAA,GAAAA,IAAU8P,KAAAA,IAAA5P,EAAAA,GAAAA,GAAA,gNC7TrC6P,GAAiB/P,GAAAA,GAAAA,GAASC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,okCACpB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAC9B,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAI5B,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAMX,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAapB,SAAA1J,GAAC,OAAIA,EAAEC,MAAMC,aAAayP,cAAc,IAC3C,SAAA3P,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOiD,CAAC,IAIlB,SAAAzM,GAAC,OAAIA,EAAEC,MAAMC,aAAa0P,iBAAiB,IAC9C,SAAA5P,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOiD,CAAC,I,WC/B7BoD,GAAc,SAAAlL,GAAK,OAAIA,EAAMmL,MAAMA,KAAM,E,KAMpBC,EAAAA,GAAAA,IAChC,CAACF,KACD,SAACC,EAAOE,GACN,OAAOF,EAAME,QAAO,SAAAF,GAAK,OACvBA,EAAMjM,KAAKoM,cAAchM,SAAS+L,EAAOC,cAAc,GAE3D,I,SCZI9C,GAAW,SAAA/K,GACf,OAAQA,EAAM4B,OACZ,IAAK,MACH,OAAO5B,EAAMnC,MAAMqC,eAAeE,IACpC,IAAK,SACH,OAAOJ,EAAMnC,MAAMqC,eAAeG,OACpC,IAAK,OACH,OAAOL,EAAMnC,MAAMqC,eAAeI,KACpC,QAEE,OAAON,EAAMnC,MAAMC,aAAaqC,QAEtC,EAEa2N,GAAgBvQ,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,8KAG9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAIZ,SAAA1J,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IACpC,SAAA9M,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAG3B0G,GAAuBxQ,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,sHAKxBsN,IAGTiD,GAAgBzQ,GAAAA,GAAAA,IAAUU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,8GAG9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IACrB,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IACnB,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAG7B2G,GAAQ1Q,GAAAA,GAAAA,GAASY,KAAAA,IAAAV,EAAAA,GAAAA,GAAA,uGAEX,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAG/B,SAAA1J,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAGhCmQ,GAAgB3Q,GAAAA,GAAAA,IAAUe,KAAAA,IAAAb,EAAAA,GAAAA,GAAA,0DAM1B0Q,GAAuB5Q,GAAAA,GAAAA,IAAUiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,yLAUjCY,GAAOd,GAAAA,GAAAA,EAAQoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,yIAQjB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAagJ,QAAQ,IAGhC9H,GAAOzB,GAAAA,GAAAA,IAAUsB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,yEAGJ,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaoB,IAAI,IAG3CkP,GAAW7Q,GAAAA,GAAAA,IAAUwB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,4EAEzB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAInB+G,GAAuB9Q,GAAAA,GAAAA,IAAU0B,KAAAA,IAAAxB,EAAAA,GAAAA,GAAA,yCAErC,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAGrBgH,GAAgB/Q,GAAAA,GAAAA,IAAU6B,KAAAA,IAAA3B,EAAAA,GAAAA,GAAA,oEAG9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAGnBiH,GAAWhR,GAAAA,GAAAA,GAAS+B,KAAAA,IAAA7B,EAAAA,GAAAA,GAAA,+EAItB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa0Q,YAAY,IAGpCC,GAAoBlR,GAAAA,GAAAA,IAAUkC,KAAAA,IAAAhC,EAAAA,GAAAA,GAAA,0EAElC,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAKnBoH,GAAiBnR,GAAAA,GAAAA,IAAUsC,KAAAA,IAAApC,EAAAA,GAAAA,GAAA,2FAIlBsN,IAGT4D,GAAepR,GAAAA,GAAAA,EAAQwC,KAAAA,IAAAtC,EAAAA,GAAAA,GAAA,gFAGzB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAIhC6Q,GAAoBrR,GAAAA,GAAAA,IAAU4O,KAAAA,IAAA1O,EAAAA,GAAAA,GAAA,oEAGlC,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAGnBuH,GAAWtR,GAAAA,GAAAA,EAAQ8O,KAAAA,IAAA5O,EAAAA,GAAAA,GAAA,gFAGrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAIhC+Q,GAAmBvR,GAAAA,GAAAA,IAAUgP,KAAAA,IAAA9O,EAAAA,GAAAA,GAAA,mEAGjC,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAGnByH,GAAOxR,GAAAA,GAAAA,IAAUkP,KAAAA,IAAAhP,EAAAA,GAAAA,GAAA,oCAIjBuR,GAAUzR,GAAAA,GAAAA,IAAUoP,KAAAA,IAAAlP,EAAAA,GAAAA,GAAA,yEAGvB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauG,QAAQ,IAChC,SAAAzG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAG/BwQ,GAAU1R,GAAAA,GAAAA,IAAUsP,KAAAA,IAAApP,EAAAA,GAAAA,GAAA,yCAExB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAGnB4H,GAAM3R,GAAAA,GAAAA,OAAawP,KAAAA,IAAAtP,EAAAA,GAAAA,GAAA,sHAQnB0R,GAAM5R,GAAAA,GAAAA,IAAU0P,KAAAA,IAAAxP,EAAAA,GAAAA,GAAA,wJAGnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauG,QAAQ,IAChC,SAAAzG,GAAC,OAAIA,EAAEC,MAAMC,aAAayB,UAAU,IAKlC,SAAA3B,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,I,WCjLxCsM,GAAW,SAAC/K,GAChB,OAAQA,EAAM4B,OACZ,IAAK,MACH,OAAO5B,EAAMnC,MAAMqC,eAAeE,IACpC,IAAK,SACH,OAAOJ,EAAMnC,MAAMqC,eAAeG,OACpC,IAAK,OACH,OAAOL,EAAMnC,MAAMqC,eAAeI,KACpC,QACE,OAAON,EAAMnC,MAAMqC,eAAeC,QAExC,EAEaiP,IAAkB7R,EAAAA,GAAAA,IAAOqC,GAAAA,GAAPrC,CAAYC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,6GAMvB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IAGxC2E,GAAoB9R,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,mEAQ9B6R,GAAiB/R,GAAAA,GAAAA,GAASU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,oGAI9B,SAAAG,GAAC,OAAGA,EAAEC,MAAMC,aAAaC,QAAQ,IAI7BwR,GAAmBhS,GAAAA,GAAAA,IAAUY,KAAAA,IAAAV,EAAAA,GAAAA,GAAA,8DAK7B+R,IAAgBjS,EAAAA,GAAAA,IAAO8N,GAAAA,GAAP9N,CAAae,KAAAA,IAAAb,EAAAA,GAAAA,GAAA,8aAMvB,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IACtC,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,aAAamJ,QAAQ,IACvC,SAAArJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAGZ,SAAAH,GAAC,OAAIA,EAAEC,MAAM+J,OAAOC,WAAW,IAInD,SAAAjK,GAAC,OAAGA,EAAEC,MAAMC,aAAaC,QAAQ,IAOjC0R,GAAsBlS,GAAAA,GAAAA,SAAeiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,gaAM/B,SAAAG,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IAClB,SAAAzJ,GAAC,OAAKA,EAAEC,MAAMC,aAAaW,MAAM,IACvC,SAAAb,GAAC,OAAKA,EAAEC,MAAMC,aAAamJ,QAAQ,IACxC,SAAArJ,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAGZ,SAAAH,GAAC,OAAIA,EAAEC,MAAM+J,OAAOC,WAAW,IAKnD,SAAAjK,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAMlC2R,GAAoBnS,GAAAA,GAAAA,IAAUoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,8DAM9BkS,GAAoBpS,GAAAA,GAAAA,EAAQsB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,4FAKhC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4B,QAAQ,IAE9BkQ,IAAqBrS,EAAAA,GAAAA,IAAO8N,GAAAA,GAAP9N,CAAawB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,umBASnB,SAACuC,GAAK,OAAK+K,GAAS/K,EAAM,IAI1C,SAACA,GAAK,OAAK+K,GAAS/K,EAAM,IAcR,SAACA,GAAK,OAAK+K,GAAS/K,EAAM,IAI3C6P,GAAmBtS,GAAAA,GAAAA,IAAU0B,KAAAA,IAAAxB,EAAAA,GAAAA,GAAA,sCAO7BqS,GAAcvS,GAAAA,GAAAA,OAAa6B,KAAAA,IAAA3B,EAAAA,GAAAA,GAAA,mSAQpB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAQvCsR,GAAkBxS,GAAAA,GAAAA,IAAU+B,KAAAA,IAAA7B,EAAAA,GAAAA,GAAA,6DAK5BuS,GAAqBzS,GAAAA,GAAAA,IAAUkC,KAAAA,IAAAhC,EAAAA,GAAAA,GAAA,oFAM/BwS,GAAkB1S,GAAAA,GAAAA,EAAQsC,KAAAA,IAAApC,EAAAA,GAAAA,GAAA,4FAK/B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4B,QAAQ,IAI7BwQ,GAAuB3S,GAAAA,GAAAA,KAAWwC,KAAAA,IAAAtC,EAAAA,GAAAA,GAAA,wJAQ5B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAG5C8H,GAAoB5S,GAAAA,GAAAA,IAAU4O,KAAAA,IAAA1O,EAAAA,GAAAA,GAAA,iGAEnC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAClC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMC,aAAayK,cAAc,IAQvC6H,GAAwB7S,GAAAA,GAAAA,EAAQ8O,KAAAA,IAAA5O,EAAAA,GAAAA,GAAA,iHAIpC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAMlCgI,GAAmB9S,GAAAA,GAAAA,IAAUgP,KAAAA,IAAA9O,EAAAA,GAAAA,GAAA,2EAClC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAauK,YAAY,IAClC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMC,aAAayK,cAAc,I,qBC/MvC+H,IAAqB/S,EAAAA,GAAAA,IAAOgT,GAAAA,EAAPhT,CAAkBC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,gsHAyB9B,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa0S,SAAS,IACnC,SAAA5S,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IACnC,SAAAb,GAAC,OAAIA,EAAEC,MAAMuJ,OAAOC,CAAC,IACd,SAAAzJ,GAAC,OAAIA,EAAEC,MAAM+J,OAAOlI,QAAQ,IA2DlC,SAAA9B,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAC1B,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAEf,SAAA1J,GAAC,OAAIA,EAAEC,MAAM+J,OAAOwC,cAAc,IAapD,SAAAxM,GAAC,OAAIA,EAAEC,MAAM+J,OAAO7J,QAAQ,IAM5B,SAAAH,GAAC,OAAIA,EAAEC,MAAM+J,OAAOnJ,MAAM,IAU1B,SAAAb,GAAC,OAAIA,EAAEC,MAAM+J,OAAO7J,QAAQ,IACpB,SAAAH,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAMzB,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAQ/B,SAAA1J,GAAC,OAAIA,EAAEC,MAAM+J,OAAOlI,QAAQ,IAmB5B,SAAA9B,GAAC,OAAIA,EAAEC,MAAM+J,OAAO7J,QAAQ,IAQ1B,SAAAH,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAMZ,SAAA1J,GAAC,OAAIA,EAAEC,MAAM+J,OAAOnJ,MAAM,IAU1B,SAAAb,GAAC,OAAIA,EAAEC,MAAM+J,OAAOnJ,MAAM,IACrC,SAAAb,GAAC,OAAIA,EAAEC,MAAM+J,OAAO6I,KAAK,ICnLzBC,GAAgB,SAAHlQ,GAA4C,IAAtCmQ,EAAYnQ,EAAZmQ,aAAcC,EAAgBpQ,EAAhBoQ,iBAE5C,OACIrP,EAAAA,GAAAA,MAAC+O,GAAkB,CAAA7P,SAAA,CAAC,YACRkQ,EAAa,YACbC,EAAiB,4BAKjC,E,WCsBWC,GAAW,SAAHrQ,GAAgF,IAYzEsQ,EAZDrI,EAAYjI,EAAZiI,aAAYsI,EAAAvQ,EAACwQ,KAAStO,EAAGqO,EAAHrO,IAAKC,EAAKoO,EAALpO,MAAOsO,EAAWF,EAAXE,YAAahR,EAAQ8Q,EAAR9Q,SAASiR,EAAQH,EAARG,SAC1ErO,GAAKC,EAAAA,GAAAA,IAAe,UAApBD,EACPE,GAAoBC,EAAAA,GAAAA,UAAS,IAAImO,MAA1BC,GAAiClO,EAAAA,GAAAA,GAAAH,EAAA,GAAxB,GAChBsO,GAA0CrO,EAAAA,GAAAA,WAAS,GAAKsO,GAAApO,EAAAA,GAAAA,GAAAmO,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAeF,EAAA,GACtCG,GAAwCzO,EAAAA,GAAAA,UAAS,MAAK0O,GAAAxO,EAAAA,GAAAA,GAAAuO,EAAA,GAA/Cd,EAAYe,EAAA,GAAEC,EAAeD,EAAA,GAC9B1Q,GAAWC,EAAAA,GAAAA,MAmBV2Q,EAAU,SAACd,GACf,IAAMe,EAAQ,IAAIV,KAClB,OACEL,EAAKgB,YAAcD,EAAMC,WACzBhB,EAAKiB,aAAeF,EAAME,YAC1BjB,EAAKkB,gBAAkBH,EAAMG,aAEjC,EACMC,EAAc,IAAId,KACpBe,EAlBEN,EAHmBd,EAqBYmB,GAhB3B,UAAN7N,QAAiB+N,EAAAA,GAAAA,IAAOrB,EAAM,YAIzBqB,EAAAA,GAAAA,IAAOrB,EAAM,gBAsDvB,OACEpQ,EAAAA,GAAAA,KAACU,GAAAA,GAAM,CACLF,cAAe,CACbyB,MAAM,GAADyB,OAAKzB,GACVsO,YAAY,GAAD7M,OAAK6M,GAChBhR,SAAS,GAADmE,OAAKnE,GACbiR,SAAS,GAAD9M,OAAK8M,EAAQ,QAAA9M,OAAOgN,IAE9B1I,SAAU,SAAA0J,GACR,IAAMC,EAAW,CACf1P,MAAOyP,EAAOzP,MACdsO,YAAamB,EAAOnB,YACpBhR,SAAUmS,EAAOnS,SACjBiR,SAAUkB,EAAOlB,SACjBoB,OAAQ5P,GAEV6P,QAAQC,IAAIH,GACZrR,GAASyR,EAAAA,GAAAA,IAASJ,IAIlB5J,IA5BHS,GAAAA,GAAAA,QAAc,gCAAiC,CAC7CC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SA2BR,EAAE5I,UAEFc,EAAAA,GAAAA,MAAC6N,GAAe,CAAA3O,SAAA,EACdC,EAAAA,GAAAA,KAACgS,GAAAA,GAAW,CAACnO,QAASkE,EAAc/G,KAAK,SAAQjB,UAC/CC,EAAAA,GAAAA,KAAC2P,GAAgB,CAAA5P,UACfC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,wBAI7BlD,EAAAA,GAAAA,MAAC8N,GAAiB,CAAA5O,SAAA,EAChBC,EAAAA,GAAAA,KAAC4O,GAAc,CAAA7O,SACZoC,EAAE,6CAELtB,EAAAA,GAAAA,MAACgO,GAAgB,CAAA9O,SAAA,EACfC,EAAAA,GAAAA,KAAC8O,GAAa,CAAC/N,KAAK,QAAQgI,YAAY,WAGxC/I,EAAAA,GAAAA,KAAC2K,GAAAA,GAAK,CACJsH,GAAIlD,GACJhO,KAAK,cACLgI,YAAa5G,EAAE,4CASnBtB,EAAAA,GAAAA,MAACyO,GAAkB,CAAAvP,SAAA,EACjBc,EAAAA,GAAAA,MAACmO,GAAiB,CAAAjP,SAAA,EAChBC,EAAAA,GAAAA,KAACiP,GAAiB,CAAAlP,SACfoC,EAAE,yCAGLnC,EAAAA,GAAAA,KAAA,SAAAD,UACEc,EAAAA,GAAAA,MAACsO,GAAgB,CAAApP,SAAA,EACjBC,EAAAA,GAAAA,KAACkP,GAAkB,CACfpO,GAAG,cACHE,KAAK,QACLD,KAAK,WACLG,MAAM,SAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,MAAMM,QAAQ,iBAGnDxB,EAAAA,GAAAA,KAACkP,GAAkB,CACfpO,GAAG,iBACHE,KAAK,QACLD,KAAK,WACLG,MAAM,YAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,SAASM,QAAQ,oBAGtDxB,EAAAA,GAAAA,KAACkP,GAAkB,CACfpO,GAAG,eACHE,KAAK,QACLD,KAAK,WACLG,MAAM,UAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,OAAOM,QAAQ,kBAGpDxB,EAAAA,GAAAA,KAACkP,GAAkB,CACfpO,GAAG,kBACHE,KAAK,QACLD,KAAK,WACLG,MAAM,aAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,UAAUM,QAAQ,6BAM3DX,EAAAA,GAAAA,MAACwO,GAAe,CAAAtP,SAAA,EACdC,EAAAA,GAAAA,KAACuP,GAAe,CAAAxP,SACboC,EAAE,4CAELtB,EAAAA,GAAAA,MAACuL,GAAiB,CAAArM,SAAA,EACZC,EAAAA,GAAAA,KAACwM,GAAU,CACXxL,KAAK,SACLS,UAAU,mBACToC,QAAS,kBAAMiN,GAAiBD,EAAe,EAAC9Q,UAE/CC,EAAAA,GAAAA,KAACsM,GAAO,CAAAvM,SAAEyR,MAKbX,IACA7Q,EAAAA,GAAAA,KAAC0M,GAAuB,CAACjL,UAAU,4BAA2B1B,UAC3DC,EAAAA,GAAAA,KAACgQ,GAAa,CACXkC,SAAUjC,EACV7O,SA1LE,SAACgP,GACxBa,EAAgBb,EAElB,EAwLuB+B,WACCjB,EAAQR,GAAa,kBAAoB,+BAiB3D7P,EAAAA,GAAAA,MAACuO,GAAW,CAACpO,KAAK,SAAQjB,SAAA,EACxBC,EAAAA,GAAAA,KAACwP,GAAoB,CAAAzP,UACnBC,EAAAA,GAAAA,KAACyP,GAAiB,CAAA1P,UAChBC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,qBAG7B/D,EAAAA,GAAAA,KAAC0P,GAAqB,CAAA3P,SACnBoC,EAAE,iDAMD,ECpQDiQ,GAAmBvV,GAAAA,GAAAA,OAAaC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,sHAQhCsV,GAAwBxV,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,yKAGrC,SAAAG,GAAC,OAAIA,EAAEC,MAAM+J,OAAO6I,KAAK,IACvB,SAAA7S,GAAC,OAAIA,EAAEC,MAAM+J,OAAO+D,aAAa,IAM/B,SAAA/N,GAAC,OAAIA,EAAEC,MAAM2N,aAAaC,WAAW,IAKtCuH,GAAgBzV,GAAAA,GAAAA,IAAUU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,yMAU1BwV,GAAe1V,GAAAA,GAAAA,OAAaY,KAAAA,IAAAV,EAAAA,GAAAA,GAAA,uTAmB5ByV,GAAkB3V,GAAAA,GAAAA,IAAUe,KAAAA,IAAAb,EAAAA,GAAAA,GAAA,sFC1C5B0V,GAAoB,SAAAnT,GAC/B,IAAQoC,GAAYmB,EAAAA,GAAAA,MAAZnB,QACFpB,GAAWC,EAAAA,GAAAA,MACX2F,GAAUtE,EAAAA,GAAAA,IAAYqE,IACpByM,EAAOpT,EAAPoT,GAEFC,EAAkBzM,EAAQgH,QAAO,SAAAhE,GAAM,OAAIA,EAAO0J,QAAUlR,CAAO,IACzE,OACE1B,EAAAA,GAAAA,KAACsS,GAAa,CAAAvS,UACZC,EAAAA,GAAAA,KAAA,MAAAD,SACG4S,EAAgBhS,KAAI,SAAAuI,GAAM,OACzBlJ,EAAAA,GAAAA,KAAA,MAAAD,UACEc,EAAAA,GAAAA,MAAC0R,GAAY,CACXvR,KAAK,SACL6C,QAAS,kBACPvD,GAASyR,EAAAA,GAAAA,IAAS,CAAEH,OAAQc,EAAIxJ,OAAQA,EAAOlH,MAAO,EACvDjC,SAAA,CAEAmJ,EAAOjH,OACRjC,EAAAA,GAAAA,KAACwS,GAAe,CAAAzS,UACdC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,wBATtBmF,EAAOlH,IAYX,OAKf,ECnCAgC,KAAAA,cAAoB,SAEb,IAAM6O,GAAqB,SAAAvT,GAChC,IAAA+C,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9C8G,EAAW5G,EAAA,GAAE6G,EAAc7G,EAAA,GAC1BqP,EAAWtS,EAAXsS,OASR,OACE/Q,EAAAA,GAAAA,MAAA,OAAAd,SAAA,EACEC,EAAAA,GAAAA,KAACoS,GAAgB,CAACpR,KAAK,SAAS6C,QATlB,WAChBuF,GAAe,EACjB,EAOuDrJ,UACjDC,EAAAA,GAAAA,KAACqS,GAAqB,CAAAtS,UACpBC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,uBAG7B/D,EAAAA,GAAAA,KAACgE,KAAK,CACJC,OAAQkF,EACRjF,eAZa,WACjBkF,GAAe,EACjB,EAWMG,iBAAkB,gBAClB9H,UAAW,gBACX+H,eAAgB,IAAIzJ,UAEpBC,EAAAA,GAAAA,KAACyS,GAAiB,CAACC,GAAId,QAI/B,ECCA5N,KAAAA,cAAoB,SAEb,I,MAAM8O,GAAW,SAAHhT,GAGd,IAADuQ,EAAAvQ,EAFJwQ,KAAQtO,EAAGqO,EAAHrO,IAAKC,EAAKoO,EAALpO,MAAOsO,EAAWF,EAAXE,YAAahR,EAAQ8Q,EAAR9Q,SAAUiR,EAAQH,EAARG,SAGnCrO,GAFDrC,EAAPoG,SAEc9D,EAAAA,GAAAA,IAAe,UAArBD,GAEF7B,GAAWC,EAAAA,GAAAA,MACjB8B,GAAwCC,EAAAA,GAAAA,UAAS,MAAKC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA/C4N,EAAY1N,EAAA,GAAE0O,EAAe1O,EAAA,GAC9BwQ,EAAmB9C,GAAgBgB,EAAkB,IAAIR,KAC/DE,GAAsCrO,EAAAA,GAAAA,WAAS,GAAMsO,GAAApO,EAAAA,GAAAA,GAAAmO,EAAA,GAA9CxH,EAAWyH,EAAA,GAAExH,EAAcwH,EAAA,GAgB5BvH,EAAa,WACjBD,GAAe,EACjB,EAkBM4J,EAAe,SAAApB,GACnB,IACEtR,GAAS2S,EAAAA,GAAAA,IAAWrB,IAjBtBpJ,GAAAA,GAAAA,QAAc,iCAAkC,CAC9CC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SAkBT,CAFE,MAAOC,IAZU,SAAAA,GACnBJ,GAAAA,GAAAA,MAAY,8BAAD9E,OAA+BkF,EAAK,UAAU,CACvDH,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,OAEX,CAOIE,CAAaD,EAAME,QACrB,CACF,EAEA,OACEjI,EAAAA,GAAAA,MAACuM,GAAa,CAAArN,SAAA,EACZC,EAAAA,GAAAA,KAACqN,GAAoB,CAACnM,MAAO3B,KAC7BsB,EAAAA,GAAAA,MAACyM,GAAa,CAAAvN,SAAA,EACZc,EAAAA,GAAAA,MAAC2M,GAAa,CAAAzN,SAAA,EACZC,EAAAA,GAAAA,KAACuN,GAAK,CAAAxN,SAAEkC,KACRjC,EAAAA,GAAAA,KAACyN,GAAoB,CAAA1N,UACnBC,EAAAA,GAAAA,KAACrC,GAAI,CAAAoC,SAAEwQ,UAIXvQ,EAAAA,GAAAA,KAAC1B,GAAI,KAELuC,EAAAA,GAAAA,MAAC6M,GAAQ,CAAA3N,SAAA,EACPc,EAAAA,GAAAA,MAAC8M,GAAoB,CAAA5N,SAAA,EACnBc,EAAAA,GAAAA,MAAC+M,GAAa,CAAA7N,SAAA,EACZC,EAAAA,GAAAA,KAAC6N,GAAQ,CAAA9N,SAAC,cACVc,EAAAA,GAAAA,MAACkN,GAAiB,CAAAhO,SAAA,EAChBC,EAAAA,GAAAA,KAACgO,GAAc,CAAC9M,MAAO3B,KACvBS,EAAAA,GAAAA,KAACiO,GAAY,CAAAlO,SAAER,WAGnBsB,EAAAA,GAAAA,MAACqN,GAAiB,CAAAnO,SAAA,EAChBC,EAAAA,GAAAA,KAAC6N,GAAQ,CAAA9N,SAAEoC,EAAE,4CAIbnC,EAAAA,GAAAA,KAACmO,GAAQ,CAAApO,SAtEM,SAAAyQ,GACzB,IAAM0C,EAAwB,IAAIzC,KAAKD,GAEjC2C,EAAMD,EAAsB9B,UAC5BgC,EAAQC,OAAOH,EAAsB7B,WAAa,GAAGiC,SAAS,EAAG,KACjEC,EAAOL,EAAsB5B,cAEnC,MAAM,GAAN5N,OAAUyP,EAAG,KAAAzP,OAAI0P,EAAK,KAAA1P,OAAI6P,EAC5B,CA8DuBC,CAAmBhD,YAGlC3P,EAAAA,GAAAA,MAACuN,GAAgB,CAAArO,SAAA,CACdgT,EAAmB,MAClB/S,EAAAA,GAAAA,KAACqO,GAAI,CAAAtO,UACHC,EAAAA,GAAAA,KAACsO,GAAO,CAAAvO,UACNC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,wBAI/BlD,EAAAA,GAAAA,MAAC0N,GAAO,CAAAxO,SAAA,EACNC,EAAAA,GAAAA,KAAC6S,GAAkB,CAACjB,OAAQ5P,KAC5BhC,EAAAA,GAAAA,KAACgE,KAAK,CACJC,OAAQkF,EACRjF,eAAgBmF,EAChBE,iBAAkB,gBAClB9H,UAAW,gBACX+H,eAAgB,IAAIzJ,UAEpBC,EAAAA,GAAAA,KAACmQ,GAAQ,CACPpI,aAAcsB,EACdiH,KAAM,CAAEtO,IAAAA,EAAKC,MAAAA,EAAOsO,YAAAA,EAAahR,SAAAA,EAAUiR,SAAAA,QAG/CxQ,EAAAA,GAAAA,KAACwO,GAAG,CAACxN,KAAK,SAAS6C,QArFb,WAChBuF,GAAe,EACjB,EAmFkDrJ,UACpCC,EAAAA,GAAAA,KAACyO,GAAG,CAAA1O,UACFC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,0BAG7B/D,EAAAA,GAAAA,KAACwO,GAAG,CAACxN,KAAK,SAAS6C,QAAS,kBAAMmP,EAAahR,EAAI,EAACjC,UAClDC,EAAAA,GAAAA,KAACyO,GAAG,CAAA1O,UACFC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,qCAQrC/D,EAAAA,GAAAA,KAACyT,GAAAA,GAAO,MAGd,ECpKaC,GAAwB,SAAA7R,GAAK,OAAIA,EAAMe,QAAQvC,eAAgB,ECQ/DsT,GAAW,SAAH7T,GAAmC,IAA7B8T,EAAQ9T,EAAR8T,SAAUC,EAAW/T,EAAX+T,YAC7BvT,GAAWC,EAAAA,GAAAA,MAEXuT,GADmBlS,EAAAA,GAAAA,IAAY8R,IACM/S,KACzC,SAAApB,GAAQ,OAAIA,EAASwU,OAAO,GAAGC,cAAgBzU,EAAS0U,MAAM,EAAE,KAGlEC,EAAAA,GAAAA,YAAU,WACR5T,GAAS6T,EAAAA,GAAAA,MACX,GAAG,CAAC7T,IAEJ,IAEM8T,GAFQxS,EAAAA,GAAAA,IAAYmL,IAEEG,QAAO,SAAAoD,GACjC,IAAM+D,EACyB,IAA7BP,EAAkBQ,QAClBR,EAAkB3S,SAASmP,EAAK/Q,UAE5BgV,EAAkBjE,EAAKpH,SAAW0K,EAExC,OAAOS,GAAqBE,CAC9B,IACA,OACEvU,EAAAA,GAAAA,KAAC4M,GAAc,CAAA7M,SACZqU,EAAczT,KAAI,SAAA2P,GAAI,OACrBtQ,EAAAA,GAAAA,KAAA,MAAAD,UACEC,EAAAA,GAAAA,KAAC8S,GAAQ,CAACxC,KAAMA,EAAMpK,QAAS2N,KADxBvD,EAAKtO,IAET,KAIb,ECQawS,GAAU,SAAH1U,GAA8B,IAAxBiI,EAAYjI,EAAZiI,aAAcjH,EAAEhB,EAAFgB,GAC9BqB,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EAENE,GAAwCC,EAAAA,GAAAA,UAAS,IAAImO,MAAOlO,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAArD4N,EAAY1N,EAAA,GAAE0O,EAAe1O,EAAA,GACpCoO,GAA4CrO,EAAAA,GAAAA,WAAS,GAAMsO,GAAApO,EAAAA,GAAAA,GAAAmO,EAAA,GAApDE,EAAcD,EAAA,GAAE6D,EAAiB7D,EAAA,GACxCG,GAAoBzO,EAAAA,GAAAA,WAAS,GAAtBoO,GAA4BlO,EAAAA,GAAAA,GAAAuO,EAAA,GAAnB,GAMV2D,EAAiB,WACrBD,GAAmB5D,EACrB,EAGKvQ,GAAWC,EAAAA,GAAAA,MAUXoU,EAAmB,SAACvE,GAGzB,OAAIc,EAAQd,GACJ,UAAN1M,QAAiB+N,EAAAA,GAAAA,IAAOrB,EAAM,YAEzBqB,EAAAA,GAAAA,IAAOrB,EAAM,eACtB,EAEMc,EAAU,SAACd,GACf,IAAMe,EAAQ,IAAIV,KAClB,OACEL,EAAKgB,YAAcD,EAAMC,WACzBhB,EAAKiB,aAAeF,EAAME,YAC1BjB,EAAKkB,gBAAkBH,EAAMG,aAEjC,EAEMC,EAAc,IAAId,KAClBe,EAAgBmD,EAAiBpD,GAgBvC,OACEvR,EAAAA,GAAAA,KAACU,GAAAA,GAAM,CACLF,cAAe,CACbyB,MAAO,GACPsO,YAAa,GACbhR,SAAgB,UAChBiR,SAAS,GAAD9M,OAAKgN,IAEf1I,SAAU,SAAC0J,EAAMkD,GAAqB,IAAjBC,EAASD,EAATC,UACbC,EAAU,CACd7S,MAAOyP,EAAOzP,MACdsO,YAAamB,EAAOnB,YACpBhR,SAAUmS,EAAOnS,SACjBiR,SAAUkB,EAAOlB,SACjBoD,SAAU9S,GAGZ+Q,QAAQC,IAAIgD,GACZxU,GAASyU,EAAAA,GAAAA,IAAQD,IAEjBD,IACA9M,IA5BJS,GAAAA,GAAAA,QAAc,+BAAgC,CAC5CC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SA2BP,EAAE5I,SAEA,SAAAiV,GAASA,EAANtD,OAAH,IAAWuD,EAAaD,EAAbC,cAAa,OAC1BpU,EAAAA,GAAAA,MAACyJ,GAAc,CAAAvK,SAAA,EAEbC,EAAAA,GAAAA,KAACgS,GAAAA,GAAW,CAACnO,QAASkE,EAAc/G,KAAK,SAAQjB,UAC/CC,EAAAA,GAAAA,KAACkM,GAAe,CAAAnM,UACdC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,wBAI7BlD,EAAAA,GAAAA,MAAC0J,GAAgB,CAAAxK,SAAA,EACfC,EAAAA,GAAAA,KAACwK,GAAa,CAAAzK,SACXoC,EAAE,yCAELtB,EAAAA,GAAAA,MAAC4J,GAAe,CAAA1K,SAAA,EACdC,EAAAA,GAAAA,KAAC0K,GAAY,CACX3J,KAAK,QACLgI,YAAa5G,EAAE,6CAGjBnC,EAAAA,GAAAA,KAAC2K,GAAAA,GAAK,CACJsH,GAAIrH,GACJ7J,KAAK,cACLgI,YAAa5G,EAAE,4CASnBtB,EAAAA,GAAAA,MAAC0K,GAAiB,CAAAxL,SAAA,EAChBc,EAAAA,GAAAA,MAACgK,GAAgB,CAAA9K,SAAA,EACfC,EAAAA,GAAAA,KAACkL,GAAgB,CAAAnL,SACdoC,EAAE,yCAGLtB,EAAAA,GAAAA,MAACuK,GAAe,CAAArL,SAAA,EAChBC,EAAAA,GAAAA,KAACmL,GAAiB,CACZrK,GAAG,cACHE,KAAK,QACLD,KAAK,WACLG,MAAM,SAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,MAAMM,QAAQ,iBAGnDxB,EAAAA,GAAAA,KAACmL,GAAiB,CACdrK,GAAG,iBACHE,KAAK,QACLD,KAAK,WACLG,MAAM,YAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,SAASM,QAAQ,oBAGtDxB,EAAAA,GAAAA,KAACmL,GAAiB,CACdrK,GAAG,eACHE,KAAK,QACLD,KAAK,WACLG,MAAM,UAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,OAAOM,QAAQ,kBAGpDxB,EAAAA,GAAAA,KAACmL,GAAiB,CACdrK,GAAG,kBACHE,KAAK,QACLD,KAAK,WACLG,MAAM,aAEVlB,EAAAA,GAAAA,KAAA,SAAOyB,UAAU,cAAcP,MAAM,UAAUM,QAAQ,2BAK3DX,EAAAA,GAAAA,MAACyK,GAAc,CAAAvL,SAAA,EACbC,EAAAA,GAAAA,KAACwL,GAAc,CAAAzL,SACZoC,EAAE,4CAGLtB,EAAAA,GAAAA,MAACuL,GAAiB,CAAArM,SAAA,EACpBC,EAAAA,GAAAA,KAACwM,GAAU,CACTxL,KAAK,SACLS,UAAU,mBACVoC,QAAS6Q,EAAe3U,UAExBC,EAAAA,GAAAA,KAACsM,GAAO,CAAAvM,SAAEyR,MAEXX,IACC7Q,EAAAA,GAAAA,KAAC0M,GAAuB,CAACjL,UAAU,4BAA2B1B,UAC5DC,EAAAA,GAAAA,KAACgQ,GAAa,CACXkC,SAAUjC,EACV7O,SAAU,SAACgP,GACTa,EAAgBb,GAChB6E,EAAc,WAAYN,EAAiBvE,GAC7C,EACA+B,WAAW,8BAWtBtR,EAAAA,GAAAA,MAACwK,GAAU,CAACrK,KAAK,SAAQjB,SAAA,EACvBC,EAAAA,GAAAA,KAAC0L,GAAmB,CAAA3L,UAClBC,EAAAA,GAAAA,KAAC4L,GAAgB,CAAA7L,UACfC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,qBAG7B/D,EAAAA,GAAAA,KAAC8L,GAAoB,CAAA/L,SAClBoC,EAAE,oCAGQ,GAIvB,EC1Oa+S,GAAkB,SAAHpV,GAAkC,IAA5BiI,EAAYjI,EAAZiI,aAAcmB,EAAMpJ,EAANoJ,OACtC/G,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EACF7B,GAAWC,EAAAA,GAAAA,MAGjB8B,GAA0BC,EAAAA,GAAAA,UAAS4G,EAAOjH,OAAMM,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAzCJ,EAAKM,EAAA,GAAE4S,EAAQ5S,EAAA,GAuCtB,OACE1B,EAAAA,GAAAA,MAAC4F,GAAS,CAAA1G,SAAA,EACRC,EAAAA,GAAAA,KAACgH,GAAc,CAAAjH,SACZoC,EAAE,+CAGLnC,EAAAA,GAAAA,KAACsG,GAAgB,CAACzC,QAASkE,EAAahI,UACtCC,EAAAA,GAAAA,KAACwG,GAAc,CAAAzG,UACbC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,wBAG7BlD,EAAAA,GAAAA,MAAA,QAAMmH,SAhCgB,SAAAC,GACxBA,EAAIC,iBAEJ,IACE,IAAMC,EAAaF,EAAI1G,OAAOU,MAAMf,MAAMkH,OAE1C,GAAmB,KAAfD,EAAmB,CACrB,IAAMiN,EAAW,CACfnT,MAAO,CAAEA,MAAOkG,GAChBrH,GAAIoI,EAAOlH,KAGb1B,GAAS+U,EAAAA,GAAAA,IAAWD,IACpBrN,IA5BJS,GAAAA,GAAAA,QAAc,kCAAmC,CAC/CC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SA2BP,CAGF,CAFE,MAAOC,IAxBU,SAAAA,GACnBJ,GAAAA,GAAAA,MAAY,8BAAD9E,OAA+BkF,EAAK,UAAU,CACvDH,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,OAEX,CAmBIE,CAAaD,EAAME,QACrB,CACF,EAasC/I,SAAA,EAChCC,EAAAA,GAAAA,KAACiH,GAAc,CACbjG,KAAK,OACLD,KAAK,QACLG,MAAOe,EACPb,SAAY,SAACkU,GAAK,OAAKH,EAASG,EAAM/T,OAAOL,MAAM,EACnD6H,YAAa5G,EAAE,wCACf6G,WAAS,KAGXnI,EAAAA,GAAAA,MAACuG,GAAY,CAACpG,KAAK,SAAQjB,SAAA,EACzBC,EAAAA,GAAAA,KAACwH,GAAa,CAAAzH,UACZC,EAAAA,GAAAA,KAAC4H,GAAiB,CAAA7H,UAChBC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,oBAG5B5B,EAAE,gDAKb,EC/FaiI,GAAUvN,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,0HACrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAayB,UAAU,IACtC,SAAA3B,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,IAK7B,SAAA9M,GAAC,OAAIA,EAAEC,MAAMC,aAAaW,MAAM,IAGjCoM,GAAatN,GAAAA,GAAAA,OAAaI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,8GAIjB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,aAAa4M,OAAO,ICP1CuL,GAAmB,SAAHzV,GAAoB,IAAdoJ,EAAMpJ,EAANoJ,OACjC7G,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9C8G,EAAW5G,EAAA,GAAE6G,EAAc7G,EAAA,GAM5B8G,EAAa,WACjBD,GAAe,EACjB,EAEA,OACEvI,EAAAA,GAAAA,MAAAyI,GAAAA,SAAA,CAAAvJ,SAAA,EACEC,EAAAA,GAAAA,KAACmK,GAAU,CAACnJ,KAAK,SAAS6C,QAVZ,WAChBuF,GAAe,EACjB,EAQiDrJ,UAC3CC,EAAAA,GAAAA,KAACoK,GAAO,CAAArK,UACNC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,0BAI7B/D,EAAAA,GAAAA,KAACgE,KAAK,CACJC,OAAQkF,EACRjF,eAAgBmF,EAChBE,iBAAkB,gBAClB9H,UAAW,gBACX+H,eAAgB,IAAIzJ,UAEpBC,EAAAA,GAAAA,KAACkV,GAAe,CAACnN,aAAcsB,EAAYH,OAAQA,QAI3D,ECVAlF,KAAAA,cAAoB,SACb,IAAMwR,GAAiB,SAAH1V,GAA6B,IAAvBoJ,EAAMpJ,EAANoJ,OAAQhD,EAAOpG,EAAPoG,QAC/B/D,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EACRE,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9C8G,EAAW5G,EAAA,GAAE6G,EAAc7G,EAAA,GAC1BP,EAAQkH,EAARlH,IAEF1B,GAAWC,EAAAA,GAAAA,MAMX8I,EAAa,WACjBD,GAAe,EACjB,GAEA8K,EAAAA,GAAAA,YAAU,WACR5T,GAAS6T,EAAAA,GAAAA,MACX,GAAG,CAAC7T,IA6BJ,OACEO,EAAAA,GAAAA,MAACiJ,GAAa,CAAA/J,SAAA,EACZc,EAAAA,GAAAA,MAACkJ,GAAY,CAAAhK,SAAA,EACXC,EAAAA,GAAAA,KAACiK,GAAW,CAAAlK,SAAEmJ,EAAOjH,SACrBpB,EAAAA,GAAAA,MAACqJ,GAAS,CAAAnK,SAAA,EACRC,EAAAA,GAAAA,KAACuV,GAAgB,CAACrM,OAAQA,KAE1BlJ,EAAAA,GAAAA,KAACmK,GAAU,CAACnJ,KAAK,SAAS6C,QAlBN,WAC1B,IACE,IAAM+P,EAAW5R,EAEjB1B,GAASmV,EAAAA,GAAAA,IAAa7B,IAnBxBpL,GAAAA,GAAAA,QAAc,mCAAoC,CAChDC,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,SAoBT,CAFE,MAAOC,IAdU,SAAAA,GACnBJ,GAAAA,GAAAA,MAAY,8BAAD9E,OAA+BkF,EAAK,UAAU,CACvDH,KAAM,eACNC,SAAU,IACVvE,MAAOwE,GAAAA,EAAAA,OAEX,CASIE,CAAaD,EAAME,QACrB,CACF,EAS+D/I,UACrDC,EAAAA,GAAAA,KAACoK,GAAO,CAAArK,UACNC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,+BAKjC/D,EAAAA,GAAAA,KAAC2T,GAAQ,CAACC,SAAU1K,EAAOlH,IAAK6R,YAAa3N,KAC7CrF,EAAAA,GAAAA,MAACmL,GAAc,CAACnI,QAtDF,WAChBuF,GAAe,EACjB,EAoDwCpI,KAAK,SAAQjB,SAAA,EAC/CC,EAAAA,GAAAA,KAAC0L,GAAmB,CAAA3L,UAClBC,EAAAA,GAAAA,KAAC4L,GAAgB,CAAA7L,UACfC,EAAAA,GAAAA,KAAA,OAAK8D,UAAS,GAAAJ,OAAKK,GAAAA,EAAM,qBAG7B/D,EAAAA,GAAAA,KAAC8L,GAAoB,CAAA/L,SAClBoC,EAAE,mCAIPnC,EAAAA,GAAAA,KAACgE,KAAK,CACJC,OAAQkF,EACRjF,eAAgBmF,EAChBE,iBAAkB,gBAClB9H,UAAW,gBACX+H,eAAgB,IAAIzJ,UAEpBC,EAAAA,GAAAA,KAACwU,GAAO,CAACzM,aAAcsB,EAAYvI,GAAIoI,EAAOlH,UAItD,ECzGa0T,GAAa,SAAH5V,GAAqB,IAAfoG,EAAOpG,EAAPoG,QAC3B,OACErF,EAAAA,GAAAA,MAAC4I,GAAiB,CAAA1J,SAAA,EAChBC,EAAAA,GAAAA,KAAC4J,GAAgB,CAAA7J,SACdmG,EAAQvF,KAAI,SAAAuI,GAAM,OACjBlJ,EAAAA,GAAAA,KAAA,MAAAD,UACEC,EAAAA,GAAAA,KAACwV,GAAc,CAACtM,OAAQA,EAAQhD,QAASA,KADlCgD,EAAOlH,IAEX,OAGThC,EAAAA,GAAAA,KAAC6J,GAAmB,CAAA9J,UAClBC,EAAAA,GAAAA,KAACiJ,GAAe,QAIxB,ECgBA,GA7BkB,WAChB,IAAQvH,GAAYmB,EAAAA,GAAAA,MAAZnB,QAEFpB,GAAWC,EAAAA,GAAAA,MACX2F,GAAUtE,EAAAA,GAAAA,IAAYqE,KAE5BiO,EAAAA,GAAAA,YAAU,WACR5T,GAASqV,EAAAA,GAAAA,MACX,GAAG,CAACrV,EAAUoB,IAEd,IAAQS,GAAMC,EAAAA,GAAAA,IAAe,UAArBD,EAEFwQ,EAAkBzM,EAAQgH,QAAO,SAAAhE,GAAM,OAAIA,EAAO0J,QAAUlR,CAAO,IAEzE,OACE1B,EAAAA,GAAAA,KAACmG,GAAgB,CAAApG,SACb2B,GAOA1B,EAAAA,GAAAA,KAAC0V,GAAU,CAACxP,QAASyM,KANrB9R,EAAAA,GAAAA,MAAClD,GAAI,CAAAoC,SAAA,CACFoC,EAAE,+BACHnC,EAAAA,GAAAA,KAACqG,GAAU,CAAAtG,SAAEoC,EAAE,gCACdA,EAAE,kCAOb,EC9Be,SAASyT,KACtB,IAAMhD,GAAQhR,EAAAA,GAAAA,IAAYiU,GAAAA,IAE1B,OACEhV,EAAAA,GAAAA,MAACiF,GAAkB,CAACE,KAAM4M,EAAMkD,cAAc/V,SAAA,EAC5CC,EAAAA,GAAAA,KAACkC,GAAe,KAChBlC,EAAAA,GAAAA,KAAC+V,GAAS,MAIhB,C,uhBCdatP,EAAY5J,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sRAEhB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAMuJ,OAAOC,CAAC,IAGnC,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAWvBoL,EAAcnV,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8OAgB3BiZ,EAAYnZ,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qHAMvB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO+D,aAAa,IAIxCgL,EAAapZ,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0IAKxB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO+D,aAAa,IACjC,SAAA/N,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAG7BsP,EAAiBrZ,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,2FAIrB,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAI/BuP,EAAQtZ,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uFAGZ,SAAAG,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,EAAE,IAG7BwP,EAAcvZ,EAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,+FAOxBsZ,EAAYxZ,EAAAA,GAAAA,OAAasB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,gRAKnB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAMuJ,OAAO4P,CAAC,IAanCC,EAAW1Z,EAAAA,GAAAA,IAAUwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yGAKpB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO6I,KAAK,IAGlCyG,EAAe3Z,EAAAA,GAAAA,IAAU0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,yGAKxB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO6I,KAAK,IAWlC0G,GARY5Z,EAAAA,GAAAA,IAAU6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,2FAQXF,EAAAA,GAAAA,IAAU+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,6DAItB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO+D,aAAa,KAGxCyL,GAAa7Z,EAAAA,EAAAA,IAAOqC,EAAAA,GAAPrC,CAAYkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,wGAQzB4Z,EAAc9Z,EAAAA,GAAAA,MAAYsC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,iCAI1B6Z,GAAc/Z,EAAAA,EAAAA,IAAO8N,EAAAA,GAAP9N,CAAawC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,oSAClB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM2N,aAAaC,WAAW,IAChD,SAAAzL,GAAK,OAAIA,EAAMnC,MAAMuJ,OAAOC,CAAC,IACnC,SAAAzJ,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAAI,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAC7D,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAAI,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAOjD,SAAAtH,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO+D,aAAa,IASvCpN,EAAShB,EAAAA,GAAAA,OAAa4O,IAAAA,GAAA1O,EAAAA,EAAAA,GAAA,8RAEhB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAMuJ,OAAOC,CAAC,IAE1B,SAAArH,GAAK,OAAIA,EAAMnC,MAAM2N,aAAaC,WAAW,IACxD,SAAAzL,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO6I,KAAK,IAI/B,SAAA7S,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAAI,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IACnD,SAAA1J,GAAC,OAAIA,EAAEC,MAAMyJ,QAAQ,IAAI,IAIjB,SAAAtH,GAAK,OAAIA,EAAMnC,MAAM2N,aAAa+L,WAAW,IAIxDC,GAAaja,EAAAA,EAAAA,IAAOka,EAAAA,GAAPla,CAAoB8O,IAAAA,GAAA5O,EAAAA,EAAAA,GAAA,qIAUjCia,EAAUna,EAAAA,GAAAA,OAAagP,IAAAA,GAAA9O,EAAAA,EAAAA,GAAA,+KAYvBka,EAAUpa,EAAAA,GAAAA,IAAUkP,IAAAA,GAAAhP,EAAAA,EAAAA,GAAA,sNAIrB,SAAAuC,GAAK,OAAIA,EAAMnC,MAAM+J,OAAO+D,aAAa,IAMvC,SAAA3L,GAAK,OAAIA,EAAMnC,MAAM2N,aAAa+L,WAAW,G,gFC9MpD,IACMK,EAAkB,SAAArV,GAAK,OAAIA,EAAMC,OAAOA,MAAM,EAC9C+T,EAAkB,SAAAhU,GAAK,OAAIA,EAAMC,OAAOqV,YAAY,C","sources":["images/icons.svg","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/StyledComponentsWrapper.js","components/HeaderDashboard/ui/PriorityCheckboxForm.jsx","components/HeaderDashboard/ui/ProjectTitle.jsx","components/HeaderDashboard/HeaderDashboard.jsx","images/mobile_1x/index.js","images/mobile_2x/index.js","images/tablet_1x/index.js","images/tablet_2x/index.js","images/desktop_1x/index.js","images/desktop_2x/index.js","Pages/ScreensPage.styled.js","redux/columns/selectors.js","components/DashBoard/DashBoard.styled.jsx","components/ColumnModal/ColumnModal.styled.js","components/EditColumnButtons/AddColumnButton/AddColumnButton.styled.js","components/EditColumnButtons/Button.jsx","components/ColumnModal/AddColumnModal/AddColumnModal.jsx","components/EditColumnButtons/AddColumnButton/AddColumnButton.jsx","components/ColumnList/ColumnList.styled.js","components/ColumnListItem/ColumnListItem.styled.js","components/AddCard/AddCard.styled.js","components/CardList/CardList.styled.js","redux/tasks/selectors.js","components/TaskCard/TaskCard.styled.js","components/EditCard/EditCard.styled.js","components/DatePicker/DatePicker.styled.js","components/DatePicker/DatePicker.jsx","components/EditCard/EditCard.js","components/ChangeColumn/ChangeColumn.styled.js","components/ChangeColumn/ChangeColumnModal.jsx","components/ChangeColumn/ChangeColumnButton.jsx","components/TaskCard/TaskCard.jsx","redux/filters/selectors.js","components/CardList/CardList.jsx","components/AddCard/AddCard.js","components/ColumnModal/EditColumnModal/EditColumnModal.jsx","components/EditColumnButtons/EditColumnButton/EditColumnButton.styled.js","components/EditColumnButtons/EditColumnButton/EditColumnButton.jsx","components/ColumnListItem/ColumnListItem.jsx","components/ColumnList/ColumnList.jsx","components/DashBoard/DashBoard.jsx","Pages/ScreensPage.jsx","components/EditProfileModal/EditProfileModal.styled.js","redux/boards/selectors.js"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13, _symbol14, _symbol15, _symbol16, _symbol17, _symbol18, _symbol19, _symbol20, _symbol21, _symbol22, _symbol23;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-active\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"M4.45 9.333A13.328 13.328 0 0 1 16 2.666c7.364 0 13.333 5.97 13.333 13.333S23.363 29.332 16 29.332a13.329 13.329 0 0 1-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"M16 21.333 21.333 16 16 10.667M2.667 16h18.667\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-bell-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3,\n    d: \"M12.472 28c.94.83 2.175 1.333 3.528 1.333s2.588-.503 3.528-1.333M24 10.667a8 8 0 1 0-16 0c0 4.12-1.039 6.941-2.2 8.807-.979 1.574-1.469 2.361-1.451 2.581.02.243.071.336.267.481.177.131.974.131 2.569.131h17.63c1.595 0 2.392 0 2.569-.131.196-.145.247-.238.267-.481.018-.22-.472-1.007-1.451-2.581-1.161-1.866-2.2-4.687-2.2-8.807z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3.368,\n    d: \"M8.421 12.211 16 19.79l7.579-7.579\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-colors\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 27.296a8 8 0 1 0 7.44-13.683m-14.88.001a8 8 0 1 0 9.546 4.773M24 10.667a8 8 0 1 1-16 0 8 8 0 0 1 16 0z\"\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-container\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M27.333 9.704 16 16m0 0L4.667 9.704M16 16v12.667m12-7.256V10.588c0-.457 0-.685-.067-.889a1.343 1.343 0 0 0-.285-.485c-.145-.158-.345-.269-.744-.491l-9.867-5.481c-.378-.21-.567-.315-.767-.356a1.349 1.349 0 0 0-.537 0c-.2.041-.389.146-.767.356L5.099 8.723c-.399.222-.599.333-.744.491a1.34 1.34 0 0 0-.286.485c-.067.204-.067.432-.067.889v10.823c0 .457 0 .685.067.889.06.18.157.346.286.485.145.158.345.269.744.491l9.867 5.481c.378.21.567.315.767.356.177.036.36.036.537 0 .2-.041.389-.146.767-.356l9.867-5.481c.399-.222.599-.333.744-.491.129-.14.226-.305.285-.485.067-.204.067-.432.067-.889z\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.311,\n    d: \"M1.333 16S6.666 5.333 16 5.333 30.667 16 30.667 16 25.334 26.667 16 26.667 1.333 16 1.333 16z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.311,\n    d: \"M16 20a4 4 0 1 0 0-8 4 4 0 0 0 0 8z\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filter\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3,\n    d: \"M29.334 4H2.667l10.667 12.613v8.72L18.667 28V16.613L29.334 4z\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-help-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 29.333c7.364 0 13.333-5.97 13.333-13.333S23.363 2.667 16 2.667C8.636 2.667 2.667 8.637 2.667 16S8.637 29.333 16 29.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.88,\n    d: \"M12.12 12a4.003 4.003 0 0 1 6.834-1.249c.608.722.941 1.637.94 2.582 0 2.667-4 4-4 4M16 22.666h.02\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-hexagon-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M14.964 3.242c.378-.21.567-.315.767-.356.177-.036.36-.036.537 0 .2.041.389.146.767.356l9.867 5.481c.399.222.599.333.744.491.129.14.226.305.285.485.067.204.067.432.067.889v10.823c0 .457 0 .685-.067.889-.06.18-.157.346-.285.485-.145.158-.345.269-.744.491l-9.867 5.481c-.378.21-.567.315-.767.356-.177.036-.36.036-.537 0-.2-.041-.389-.146-.767-.356l-9.867-5.481c-.399-.222-.599-.333-.744-.491a1.34 1.34 0 0 1-.286-.485C4 22.096 4 21.868 4 21.411V10.588c0-.457 0-.685.067-.889.06-.18.157-.346.286-.485.145-.158.345-.269.744-.491l9.867-5.481z\"\n  }))), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-lightning-02\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M18.999 2.667h-7.674c-.239 0-.359 0-.465.036a.672.672 0 0 0-.249.154c-.08.078-.133.185-.24.399l-5.6 11.2c-.256.511-.383.767-.353.974a.669.669 0 0 0 .277.449c.172.12.458.12 1.029.12h8.274l-4 13.333 16.258-16.86c.548-.569.823-.853.839-1.097a.665.665 0 0 0-.235-.553c-.186-.157-.581-.157-1.372-.157h-9.49l3-8z\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-loading-03\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M4.454 22.666a6.364 6.364 0 0 1 1.944-8.453l.003-.003a6.37 6.37 0 0 1 7.312.126l4.576 3.327a6.37 6.37 0 0 0 7.312.126l.003-.003a6.36 6.36 0 0 0 1.943-8.453m-4.878 18.213a6.365 6.365 0 0 1-8.453-1.944l-.003-.003a6.37 6.37 0 0 1 .126-7.312l3.327-4.576a6.37 6.37 0 0 0 .126-7.312l-.006-.003a6.363 6.363 0 0 0-8.453-1.942m16.094 2.118c5.207 5.207 5.207 13.648 0 18.855s-13.648 5.207-18.855 0c-5.207-5.207-5.207-13.648 0-18.855s13.648-5.207 18.855 0z\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-login\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.867 10.08c.413-4.8 2.88-6.76 8.28-6.76h.173c5.96 0 8.347 2.387 8.347 8.347v8.693c0 5.96-2.387 8.347-8.347 8.347h-.173c-5.36 0-7.827-1.933-8.267-6.653M2.667 16H19.84\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M16.867 11.533 21.334 16l-4.467 4.467\"\n  }))), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-logo\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 0H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.331 23.027c.245-1.272.453-2.61.747-3.949.145-.701-.032-.999-.815-.946s-1.657.027-2.49 0c-.833-.027-.982-.446-.502-1.044 2.363-2.918 4.753-5.8 7.134-8.674.267-.326.575-.558 1.014-.312s.349.549.276.915c-.263 1.339-.48 2.677-.77 3.989-.149.678.045.919.751.892a20.959 20.959 0 0 1 2.127 0c.403 0 .933-.21 1.141.339s-.231.781-.453 1.107a315.559 315.559 0 0 1-2.752 3.342 1579.8 1579.8 0 0 0-4.051 4.854c-.263.317-.557.571-1.005.41s-.353-.54-.353-.924z\"\n  }))), _symbol14 || (_symbol14 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-logo2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.332 23.027c0.244-1.272 0.453-2.61 0.747-3.949 0.145-0.701-0.032-0.999-0.814-0.946s-1.657 0.027-2.49 0c-0.833-0.027-0.982-0.446-0.502-1.044 2.363-2.918 4.753-5.8 7.134-8.674 0.267-0.326 0.575-0.558 1.014-0.312s0.348 0.549 0.276 0.915c-0.263 1.339-0.48 2.677-0.77 3.989-0.149 0.678 0.045 0.919 0.751 0.892 0.709-0.036 1.419-0.036 2.128 0 0.403 0 0.933-0.21 1.141 0.339s-0.231 0.781-0.453 1.107c-0.905 1.115-1.823 2.229-2.752 3.342-1.361 1.624-2.711 3.242-4.051 4.854-0.263 0.317-0.557 0.571-1.005 0.41s-0.353-0.54-0.353-0.924z\"\n  }))), _symbol15 || (_symbol15 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-menu-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.5,\n    d: \"M4 16h24M4 8h24M4 24h24\"\n  }))), _symbol16 || (_symbol16 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.334 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.199-.154.378-.333.736-.692L28 9.333A3.77 3.77 0 1 0 22.667 4L7.627 19.04c-.359.359-.538.538-.692.736a3.948 3.948 0 0 0-.364.56c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  }))), _symbol17 || (_symbol17 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 6.667v18.667M6.666 16h18.667\"\n  }))), _symbol18 || (_symbol18 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Project\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeWidth: 2.667,\n    d: \"M4.396 6.978a3.465 3.465 0 0 1 2.582-2.582 7.408 7.408 0 0 1 3.377 0 3.465 3.465 0 0 1 2.582 2.582c.26 1.11.26 2.266 0 3.377a3.465 3.465 0 0 1-2.582 2.582c-1.11.26-2.266.26-3.377 0a3.465 3.465 0 0 1-2.582-2.582 7.408 7.408 0 0 1 0-3.377zM4.396 21.645a3.465 3.465 0 0 1 2.582-2.582 7.38 7.38 0 0 1 3.377 0 3.464 3.464 0 0 1 2.582 2.582 7.408 7.408 0 0 1 0 3.377 3.465 3.465 0 0 1-2.582 2.582 7.38 7.38 0 0 1-3.377 0 3.464 3.464 0 0 1-2.582-2.582 7.408 7.408 0 0 1 0-3.377zM19.063 6.978a3.464 3.464 0 0 1 2.582-2.582 7.408 7.408 0 0 1 3.377 0 3.465 3.465 0 0 1 2.582 2.582 7.38 7.38 0 0 1 0 3.377 3.464 3.464 0 0 1-2.582 2.582 7.408 7.408 0 0 1-3.377 0 3.465 3.465 0 0 1-2.582-2.582 7.38 7.38 0 0 1 0-3.377zM19.063 21.645a3.464 3.464 0 0 1 2.582-2.582 7.38 7.38 0 0 1 3.377 0 3.464 3.464 0 0 1 2.582 2.582 7.38 7.38 0 0 1 0 3.377 3.464 3.464 0 0 1-2.582 2.582 7.38 7.38 0 0 1-3.377 0 3.464 3.464 0 0 1-2.582-2.582 7.38 7.38 0 0 1 0-3.377z\"\n  }))), _symbol19 || (_symbol19 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-puzzle-piece-02\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 4.8 4.8C24-.933 32.933 8 24.533 11.2l4.8 4.8-4.8 4.8c-3.2-8.4-12.133.533-3.733 3.733l-4.8 4.8-4.8-4.8C8 32.933-.933 24 7.467 20.8l-4.8-4.8 4.8-4.8c3.2 8.4 12.133-.533 3.733-3.733l4.8-4.8z\"\n  }))), _symbol20 || (_symbol20 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-star-04\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 2.683 6.975c.376.978.564 1.466.856 1.878.259.364.577.683.942.942.411.292.9.48 1.878.856l6.975 2.683-6.975 2.683c-.978.376-1.466.564-1.878.856a3.993 3.993 0 0 0-.942.942c-.292.411-.48.9-.856 1.878L16 29.335l-2.683-6.975c-.376-.978-.564-1.466-.856-1.878a4.012 4.012 0 0 0-.942-.942c-.411-.292-.9-.48-1.878-.856l-6.975-2.683 6.975-2.683c.978-.376 1.466-.564 1.878-.856.364-.259.683-.578.942-.942.292-.411.48-.9.856-1.878L16 2.667z\"\n  }))), _symbol21 || (_symbol21 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash-04\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a6 6 0 0 0 3.672-3.435c.365-.896.439-2.012.588-4.243L25.335 8\"\n  }))), _symbol22 || (_symbol22 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M24 8 8 24M8 8l16 16\"\n  }))), _symbol23 || (_symbol23 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down1\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3.556,\n    d: \"m8 12 8 8 8-8\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ecedfd\",\n    style: {\n      fill: \"var(--color1, #ecedfd)\"\n    },\n    d: \"M3.765 0h24.471c2.079 0 3.765 1.686 3.765 3.765v24.471c0 2.079-1.686 3.765-3.765 3.765h-24.471c-2.079 0-3.765-1.686-3.765-3.765v-24.471c0-2.079 1.686-3.765 3.765-3.765z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color2, #fff)\"\n    },\n    d: \"M21.49 14.745c0 2.946-2.388 5.333-5.333 5.333s-5.333-2.388-5.333-5.333c0-2.946 2.388-5.333 5.333-5.333s5.333 2.388 5.333 5.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color2, #fff)\"\n    },\n    d: \"M29.060 32.853c0-1.723-0.339-3.429-0.999-5.020s-1.626-3.038-2.844-4.256c-1.218-1.218-2.664-2.184-4.256-2.844s-3.297-0.999-5.020-0.999c-1.723 0-3.429 0.339-5.020 0.999s-3.038 1.626-4.256 2.844c-1.218 1.218-2.184 2.664-2.844 4.256s-0.999 3.297-0.999 5.020h26.237z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.d2e1021fcf4687730adfca29d9de45b5.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const HdWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 24px;\n  padding-right: 24px;\n`;\n\nexport const ProjectName = styled.div`\n  color: ${p => p.theme.currentTheme.mainText};\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  padding-top: 10px;\n`;\n\nexport const IconTextContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg`\n  stroke: ${p => p.theme.currentTheme.filterText};\n  width: 16px;\n  height: 16px;\n  stroke-width: 1.5px;\n  transition: all 250ms linear;\n  fill: transparent;\n  margin-right: 8px;\n`;\n\nexport const Text = styled.span`\n  color: ${p => p.theme.currentTheme.filterText};\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  outline: none;\n  padding: 0px;\n  height: 100%;\n  margin-top: 14px;\n\n  &:hover {\n    opacity: 0.8;\n    transform: scale(1.2);\n    transition: all 250ms ease-in-out;\n    stroke: ${p => p.theme.currentTheme.accent};\n\n    ${Icon} {\n      stroke: ${p => p.theme.currentTheme.accent};\n    }\n\n    ${Text} {\n      color: ${p => p.theme.currentTheme.accent};\n    }\n  }\n`;\n\nexport const Section = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n  \n`;\n\nexport const CloseModal = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  transition: all 250ms linear;\n  stroke: ${p => p.theme.currentTheme.mainText};\n  stroke-width: 1.5px;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\n\nexport const SectionTitle = styled.h4`\n  color: ${p => p.theme.currentTheme.mainText};\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.div`\n  border-top: 1px solid ${p => p.theme.currentTheme.line};\n  margin-bottom: 14px;\n`;\n\nexport const FormWraper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const FormTitle = styled.span`\n  color: ${p => p.theme.currentTheme.iconStroke};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n`;\n\nexport const ShowAllLabel = styled.p`\n  color: ${p => p.theme.currentTheme.grayText};\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-decoration-skip-ink: none;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\n\nexport const RadioBtnWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 8px;\n`;\n\nexport const CheckboxContainer = styled.div`\n  $priority: ${props => props.priority};\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  input[type='checkbox'] {\n    position: absolute;\n    opacity: 0;\n    + .radio-label {\n      &:before {\n        content: '';\n        background-color: ${p => {\n          if (p.priority === 'without') {\n            return p.theme.priorityColors.without;\n          }\n          if (p.priority === 'low') {\n            return p.theme.priorityColors.low;\n          }\n          if (p.priority === 'medium') {\n            return p.theme.priorityColors.medium;\n          }\n          if (p.priority === 'high') {\n            return p.theme.priorityColors.high;\n          }\n        }};\n        border-radius: 100%;\n        border: 1px solid\n          ${p => {\n            if (p.priority === 'without') {\n              return p.theme.priorityColors.without;\n            }\n            if (p.priority === 'low') {\n              return p.theme.priorityColors.low;\n            }\n            if (p.priority === 'medium') {\n              return p.theme.priorityColors.medium;\n            }\n            if (p.priority === 'high') {\n              return p.theme.priorityColors.high;\n            }\n          }};\n        display: inline-block;\n        width: 1.4em;\n        height: 1.4em;\n        position: relative;\n        top: -0.2em;\n        margin-right: 1em;\n        vertical-align: top;\n        cursor: pointer;\n        text-align: center;\n        transition: all 250ms ease;\n      }\n    }\n    &:checked {\n      + .radio-label {\n        &:before {\n          background-color: ${p => {\n            if (p.priority === 'without') {\n              return p.theme.priorityColors.without;\n            }\n            if (p.priority === 'low') {\n              return p.theme.priorityColors.low;\n            }\n            if (p.priority === 'medium') {\n              return p.theme.priorityColors.medium;\n            }\n            if (p.priority === 'high') {\n              return p.theme.priorityColors.high;\n            }\n          }};\n          box-shadow: inset 0 0 0 4px white;\n        }\n      }\n    }\n    &:checked + .radio-label {\n      color: ${p => p.theme.currentTheme.mainText};\n    }\n    &:focus {\n      + .radio-label {\n        &:before {\n          outline: none;\n          border-color: ${p => {\n            if (p.priority === 'without') {\n              return p.theme.priorityColors.without;\n            }\n            if (p.priority === 'low') {\n              return p.theme.priorityColors.low;\n            }\n            if (p.priority === 'medium') {\n              return p.theme.priorityColors.medium;\n            }\n            if (p.priority === 'high') {\n              return p.theme.priorityColors.high;\n            }\n          }};\n        }\n      }\n    }\n\n    + .radio-label {\n      color: ${p => p.theme.currentTheme.grayText};\n\n      &:empty {\n        &:before {\n          margin-right: 0;\n        }\n      }\n    }\n  }\n`;\n","import { StyleSheetManager } from 'styled-components';\n\nexport const StyledComponentsWrapper = ({ children }) => (\n  <StyleSheetManager shouldForwardProp={prop => prop !== 'priority'}>\n    {children}\n  </StyleSheetManager>\n);\n","import { Formik } from 'formik';\nimport { CheckboxContainer, RadioBtnWrapper } from '../HeaderDashboard.styled';\nimport { useDispatch } from 'react-redux';\nimport { togglePriority } from 'redux/filters/filtersSlice';\nimport { StyledComponentsWrapper } from '../StyledComponentsWrapper';\n\nconst options = ['without', 'low', 'medium', 'high'];\n\nconst PriorityCheckboxForm = ({ filtersPriority }) => {\n  const dispatch = useDispatch();\n  const initialValues = {\n    label: filtersPriority,\n  };\n  const isCheked = value => {\n    return filtersPriority.includes(value);\n  };\n\n  return (\n    <StyledComponentsWrapper>\n      <Formik initialValues={initialValues}>\n        <RadioBtnWrapper>\n          {options.map(el => (\n            <CheckboxContainer key={el} priority={el}>\n              <input\n                id={el}\n                name=\"radio\"\n                type=\"checkbox\"\n                checked={isCheked(el)}\n                onChange={e => {\n                  dispatch(togglePriority(e.target.id));\n                }}\n              />\n              <label htmlFor={el} className=\"radio-label\">\n                {el}\n              </label>\n            </CheckboxContainer>\n          ))}\n        </RadioBtnWrapper>\n      </Formik>\n    </StyledComponentsWrapper>\n  );\n};\n\nexport default PriorityCheckboxForm;\n","import { useSelector } from 'react-redux';\nimport { ProjectName } from '../HeaderDashboard.styled';\n\nconst ProjectTitle = ({ boardId }) => {\n  const boards = useSelector(state => state.boards.boards);\n  const project = boards.find(el => el._id === boardId);\n\n  return <ProjectName>{project ? project.title : ''}</ProjectName>;\n};\n\nexport default ProjectTitle;\n","import sprite from '../../images/icons.svg';\nimport { useState } from 'react';\nimport {\n  Button,\n  CloseModal,\n  FormTitle,\n  FormWraper,\n  HdWrapper,\n  Icon,\n  IconTextContainer,\n  Line,\n  Section,\n  SectionTitle,\n  ShowAllLabel,\n  Text,\n} from './HeaderDashboard.styled';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showAll } from 'redux/filters/filtersSlice';\nimport PriorityCheckboxForm from './ui/PriorityCheckboxForm';\nimport ProjectTitle from './ui/ProjectTitle';\nimport { useParams } from 'react-router-dom';\nimport { StyledComponentsWrapper } from './StyledComponentsWrapper';\nimport { useTranslation } from 'react-i18next';\n\nexport const HeaderDashboard = () => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const filtersPriority = useSelector(state => state.filters.filtersPriority);\n  const { boardId } = useParams();\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: 'transparent',\n    },\n    content: {\n      width: '300px',\n      height: '234px',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: `${p => p.theme.currentTheme.modalBgn}`,\n    },\n  };\n\n  return (\n    <div>\n      <StyledComponentsWrapper>\n        <HdWrapper>\n          <ProjectTitle boardId={boardId} />\n          <Button onClick={handleOpen}>\n            <IconTextContainer>\n              <Icon>\n                <use xlinkHref={`${sprite}#icon-filter`}></use>\n              </Icon>\n              <Text>{t('screenPage.static.filters')}</Text>\n            </IconTextContainer>\n          </Button>\n        </HdWrapper>\n        <Modal\n          isOpen={open}\n          onRequestClose={handleClose}\n          style={customStyles}\n          appElement={document.getElementById('root')}\n        >\n          <CloseModal onClick={handleClose} type=\"button\">\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </CloseModal>\n          <Section>\n            <div>\n              <SectionTitle>{t('screenPage.render.modal.filter.title')}</SectionTitle>\n              <Line />\n              <FormWraper>\n                <FormTitle>{t('screenPage.render.modal.filter.title2')}</FormTitle>\n                <ShowAllLabel\n                  onClick={() => {\n                    dispatch(showAll());\n                  }}\n                >\n                  {t('screenPage.render.modal.filter.show')}\n                </ShowAllLabel>\n              </FormWraper>\n              <PriorityCheckboxForm filtersPriority={filtersPriority} />\n            </div>\n          </Section>\n        </Modal>\n      </StyledComponentsWrapper>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import p1 from './mobile_1.webp'\nimport p2 from './mobile_2.webp'\nimport p3 from './mobile_3.webp'\nimport p4 from './mobile_4.webp'\nimport p5 from './mobile_5.webp'\nimport p6 from './mobile_6.webp'\nimport p7 from './mobile_7.webp'\nimport p8 from './mobile_8.webp'\nimport p9 from './mobile_9.webp'\nimport p10 from './mobile_10.webp'\nimport p11 from './mobile_11.webp'\nimport p12 from './mobile_12.webp'\nimport p13 from './mobile_13.webp'\nimport p14 from './mobile_14.webp'\nimport p15 from './mobile_15.webp'\n\nexport const pictures_mobile_1x = { p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import p1 from './mobile_1@2x.webp'\nimport p2 from './mobile_2@2x.webp'\nimport p3 from './mobile_3@2x.webp'\nimport p4 from './mobile_4@2x.webp'\nimport p5 from './mobile_5@2x.webp'\nimport p6 from './mobile_6@2x.webp'\nimport p7 from './mobile_7@2x.webp'\nimport p8 from './mobile_8@2x.webp'\nimport p9 from './mobile_9@2x.webp'\nimport p10 from './mobile_10@2x.webp'\nimport p11 from './mobile_11@2x.webp'\nimport p12 from './mobile_12@2x.webp'\nimport p13 from './mobile_13@2x.webp'\nimport p14 from './mobile_14@2x.webp'\nimport p15 from './mobile_15@2x.webp'\n\nexport const pictures_mobile_2x = { p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import p1 from './tablet_1.webp'\nimport p2 from './tablet_2.webp'\nimport p3 from './tablet_3.webp'\nimport p4 from './tablet_4.webp'\nimport p5 from './tablet_5.webp'\nimport p6 from './tablet_6.webp'\nimport p7 from './tablet_7.webp'\nimport p8 from './tablet_8.webp'\nimport p9 from './tablet_9.webp'\nimport p10 from './tablet_10.webp'\nimport p11 from './tablet_11.webp'\nimport p12 from './tablet_12.webp'\nimport p13 from './tablet_13.webp'\nimport p14 from './tablet_14.webp'\nimport p15 from './tablet_15.webp'\n\nexport const pictures_tablet_1x = { p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import p1 from './tablet_1@2x.webp'\nimport p2 from './tablet_2@2x.webp'\nimport p3 from './tablet_3@2x.webp'\nimport p4 from './tablet_4@2x.webp'\nimport p5 from './tablet_5@2x.webp'\nimport p6 from './tablet_6@2x.webp'\nimport p7 from './tablet_7@2x.webp'\nimport p8 from './tablet_8@2x.webp'\nimport p9 from './tablet_9@2x.webp'\nimport p10 from './tablet_10@2x.webp'\nimport p11 from './tablet_11@2x.webp'\nimport p12 from './tablet_12@2x.webp'\nimport p13 from './tablet_13@2x.webp'\nimport p14 from './tablet_14@2x.webp'\nimport p15 from './tablet_15@2x.webp'\n\nexport const pictures_tablet_2x = { p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import p1 from './desktop_1.webp'\nimport p2 from './desktop_2.webp'\nimport p3 from './desktop_3.webp'\nimport p4 from './desktop_4.webp'\nimport p5 from './desktop_5.webp'\nimport p6 from './desktop_6.webp'\nimport p7 from './desktop_7.webp'\nimport p8 from './desktop_8.webp'\nimport p9 from './desktop_9.webp'\nimport p10 from './desktop_10.webp'\nimport p11 from './desktop_11.webp'\nimport p12 from './desktop_12.webp'\nimport p13 from './desktop_13.webp'\nimport p14 from './desktop_14.webp'\nimport p15 from './desktop_15.webp'\n\nexport const pictures_desktop_1x = { p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import p1 from './desktop_1@2x.webp'\nimport p2 from './desktop_2@2x.webp'\nimport p3 from './desktop_3@2x.webp'\nimport p4 from './desktop_4@2x.webp'\nimport p5 from './desktop_5@2x.webp'\nimport p6 from './desktop_6@2x.webp'\nimport p7 from './desktop_7@2x.webp'\nimport p8 from './desktop_8@2x.webp'\nimport p9 from './desktop_9@2x.webp'\nimport p10 from './desktop_10@2x.webp'\nimport p11 from './desktop_11@2x.webp'\nimport p12 from './desktop_12@2x.webp'\nimport p13 from './desktop_13@2x.webp'\nimport p14 from './desktop_14@2x.webp'\nimport p15 from './desktop_15@2x.webp'\n\nexport const pictures_desktop_2x = { p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import styled from 'styled-components';\nimport { pictures_mobile_1x } from 'images/mobile_1x/index';\nimport { pictures_mobile_2x } from 'images/mobile_2x/index';\nimport { pictures_tablet_1x } from 'images/tablet_1x/index';\nimport { pictures_tablet_2x } from 'images/tablet_2x/index';\nimport { pictures_desktop_1x } from 'images/desktop_1x/index';\nimport { pictures_desktop_2x } from 'images/desktop_2x/index';\n\nexport const ScreensPageWrapper = styled.div`\n  background-color: ${p => p.theme.currentTheme.screensBgn};\n  background-size: cover;\n  background-image: url(${props => pictures_mobile_1x[props.back]});\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => pictures_mobile_2x[props.back]});\n  }\n\n  @media only screen and (min-width: 768px) {\n    background-image: url(${props => pictures_tablet_1x[props.back]});\n\n    @media only screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => pictures_tablet_2x[props.back]});\n    }\n  }\n\n  @media only screen and (min-width: 1440px) {\n    background-image: url(${props => pictures_desktop_1x[props.back]});\n\n    @media only screen and (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => pictures_desktop_2x[props.back]});\n    }\n  }\n`;\n","export const selectColumns = state => state.columns.columns;\nexport const selectIsLoading = state => state.columns.isLoading;\nexport const selectError = state => state.columns.error;\nexport const selectBoardId =state => state.columns.board;\n","import styled from \"styled-components\";\n\nexport const DashBoardWrapper = styled.div`\n  padding: 46px 20px 24px ;\n  max-width: 310px;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 375px) {    \n    max-width: 375px;\n  }\n  \n  @media only screen and (min-width: 768px) {\n    padding: 26px 32px 32px;\n    max-width: 768px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n   padding: 10px 24px 8px ;\n    max-width: 1132px;\n  }\n`;\nexport const Text = styled.p`  \n  margin-top: 258px;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: ${p => p.theme.currentTheme.homeText};\n\n  @media only screen and (min-width: 375px) and (max-width: 767px) {\n    margin-top: 258px;\n    max-width: 335px;    \n  }\n  @media only screen and (min-width: 768px) {\n    margin-top: 368px;\n    max-width:486px;\n    font-size: 14px;    \n  }\n  @media only screen and (min-width: 1440px) {\n    margin-top: 247px;\n    \n  }\n`;\nexport const ButtonText= styled.button`\n    padding: 0;\n    font-size: 12px;\n    border :none;\n    background-color: inherit;\n    color: ${p => p.theme.currentTheme.accent};\n\n    @media only screen and (min-width: 768px) {      \n      font-size: 14px;\n    }\n`;","import styled from 'styled-components';\n\nexport const ModalCloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  border-color: transparent;\n  background-color: ${p => p.theme.currentTheme.inputBgn};\n  transition: stroke 0.3s;\n`;\nexport const StyledSvgClose = styled.svg`\n  fill: ${p => p.theme.currentTheme.mainText};\n  stroke: ${p => p.theme.currentTheme.mainText};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n`;\n\nexport const ModalWrap = styled.div`\n  width: 335px;\n  padding: 24px;\n  background-color: #fcfcfc;\n\n  box-sizing: border-box;\n  border-radius: ${p => p.theme.radius.m};\n\n  width: 335px;\n  padding: ${p => p.theme.spacing(6)};\n\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  position: relative;\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    padding: 24px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Button } from '../Button';\n\nexport const ModalShowButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 334px;\n  height: 56px;\n  gap: 8px;\n  padding: 14px 0;\n  margin-bottom: 24px;\n  font-family: Poppins;\n  font-size: 14px;\n  letter-spacing: -0.02px;\n  background-color: ${p => p.theme.currentTheme.horizontScrollBgn};\n  color: ${p => p.theme.currentTheme.mainText};\n  border-radius: ${p => p.theme.radius.m};\n  border: 0;\n  border-color: ${p => p.theme.currentTheme.btnPlusStroke};\n  filter: drop-shadow(0 0 7px rgba(22, 22, 22, 0.08));\n  transition: background-color 0.3s;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const AddColumnTitle = styled.p`\n  color: ${p => p.theme.currentTheme.mainText};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.32px;\n  margin-bottom: 24px;\n`;\n\nexport const AddColumnInput = styled.input`\n  display: block;\n  width: 249px;\n  height: 21px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  margin-top: 24px;\n  opacity: 0.4;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.currentTheme.accent};\n  box-shadow: 0 4px 16px 0 ${p => p.theme.colors.shadowColor};\n  background-color: transparent;\n  color: ${p => p.theme.currentTheme.mainText};\n  letter-spacing: -0.32px;\n  &:focus {\n    opacity: 1;\n    outline: 1px solid ${p => p.theme.currentTheme.accent};\n  }\n  @media screen and (min-width: 768px) {\n    width: 264px;\n  }\n`;\n\nexport const AddColumnBtn = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: Poppins;\n  font-size: 14px;\n  letter-spacing: -0.32px;\n  gap: 8px;\n  width: 100%;\n  width: 287px;\n  height: 49px;\n\n  padding: 10px 0;\n  background-color: ${p => p.theme.currentTheme.accent};\n  color: ${p => p.theme.currentTheme.btnPlusStroke};\n  border-radius: 8px;\n  border-color: transparent;\n\n  &:hover {\n    background-color: ${p => p.theme.currentTheme.hoverButton};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const IconWhiteWrap = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${p => p.theme.currentTheme.btnPlusStroke};\n  border-radius: ${p => p.theme.radius.m};\n`;\n\nexport const IconVioletWrap = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${p => p.theme.currentTheme.hoverButton};\n  border-radius: ${p => p.theme.radius.m};\n`;\n\nexport const StyledSvgWhitePlus = styled.svg`\n  fill: ${p => p.theme.currentTheme.plusIconFill};\n  stroke: ${p => p.theme.currentTheme.plusIconFill};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  height: 14px;\n  border: none;\n`;\n\nexport const StyledSvgDarkPlus = styled.svg`\n  fill: ${p => p.theme.currentTheme.plusIconStroke};\n  stroke: ${p => p.theme.currentTheme.plusIconStroke};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  height: 14px;\n  border: none;\n`;\n","export const Button = ({\n  children,\n  type = 'click',\n  className,\n  handlerClick,\n  label,\n}) => {\n  return (\n    <button\n      type={type}\n      className={className}\n      onClick={handlerClick}\n      aria-label={label}\n    >\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport toast from 'react-hot-toast';\nimport { toastStyles } from '../../../ToasterOptions';\n\nimport sprite from '../../../images/icons.svg';\n\nimport {\n  ModalCloseButton,\n  ModalWrap,\n  StyledSvgClose,\n} from '../ColumnModal.styled';\nimport {\n  AddColumnBtn,\n  AddColumnInput,\n  AddColumnTitle,\n  IconWhiteWrap,\n  StyledSvgDarkPlus,\n} from 'components/EditColumnButtons/AddColumnButton/AddColumnButton.styled';\nimport { addColumn } from 'redux/columns/operations';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddColumnModal = ({ onCloseModal }) => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n\n  const successToaster = () => {\n    toast.success('You successfully added new column!', {\n      icon: '👏',\n      duration: 4000,\n      style: toastStyles.success,\n    });\n  };\n\n  const warningToaster = () => {\n    toast.success('Column title cannot be empty!', {\n      icon: '🔊',\n      duration: 4000,\n      style: toastStyles.warning,\n    });\n  };\n\n  const errorToaster = error => {\n    toast.error(`Something went wrong! It's ${error} error`, {\n      icon: '🤔',\n      duration: 4000,\n      style: toastStyles.error,\n    });\n  };\n\n  const handlerAddColumn = evt => {\n    evt.preventDefault();\n\n    try {\n      const inputValue = evt.target.title.value.trim();\n\n      if (inputValue !== '') {\n        const newColumn = {\n          title: inputValue,\n          dashboardId: boardId,\n        };\n        dispatch(addColumn(newColumn));\n        onCloseModal();\n        successToaster();\n      } else {\n        warningToaster();\n      }\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  return (\n    <ModalWrap>\n      <AddColumnTitle>\n        {t('screenPage.render.modal.column.addTitle')}\n      </AddColumnTitle>\n\n      <ModalCloseButton onClick={onCloseModal}>\n        <StyledSvgClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </StyledSvgClose>\n      </ModalCloseButton>\n\n      <form onSubmit={handlerAddColumn}>\n        <AddColumnInput\n          type=\"text\"\n          name=\"title\"\n          placeholder={t('screenPage.render.modal.column.input')}\n          autoFocus\n        />\n\n        <AddColumnBtn type=\"submit\">\n          <IconWhiteWrap>\n            <StyledSvgDarkPlus>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </StyledSvgDarkPlus>\n          </IconWhiteWrap>\n          {t('screenPage.render.modal.column.btn')}\n        </AddColumnBtn>\n      </form>\n    </ModalWrap>\n  );\n};\n","import React, { useState } from 'react';\nimport { AddColumnModal } from '../../ColumnModal/AddColumnModal/AddColumnModal';\n\nimport Modal from 'react-modal';\nimport '../ColumnModal.css';\n\nimport sprite from '../../../images/icons.svg';\nimport {\n  ModalShowButton,\n  IconVioletWrap,\n  StyledSvgWhitePlus,\n} from './AddColumnButton.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddColumnButton = ({ column }) => {\n  const { t } = useTranslation('global');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <ModalShowButton type=\"submit\" onClick={openModal}>\n        <IconVioletWrap>\n          <StyledSvgWhitePlus>\n            <use xlinkHref={`${sprite}#icon-plus`}></use>\n          </StyledSvgWhitePlus>\n        </IconVioletWrap>\n        {t('screenPage.render.addColumn')}\n      </ModalShowButton>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <AddColumnModal onCloseModal={closeModal} column={column} />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnListWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: ${p => p.theme.spacing(7.5)};\n  width: 310px;\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 1132px;\n  }\n\n  overflow-y: hidden;\n  overflow-x: auto;\n\n  &::-webkit-scrollbar {\n    width: 12px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p =>\n      p.theme.currentTheme.horizontScroll}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${p =>\n      p.theme.currentTheme.horizontScrollBgn}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};\n  }\n`;\n\nexport const ColumnListStyled = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: ${p => p.theme.spacing(4.5)};\n`;\nexport const ColumnButtonwrapper = styled.div`\n  width: 334px;\n`;\n","import styled from 'styled-components';\n\nexport const ColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const ColumnHeader = styled.div`\n  width: 335px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p => p.theme.spacing(4.5)} 0;\n\n  border-radius: ${p => p.theme.radius.m};\n  background-color: ${p => p.theme.currentTheme.taskBgn};\n`;\nexport const ColumnTitle = styled.h3`\n  margin-left: ${p => p.theme.spacing(5)};\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${p => p.theme.currentTheme.mainText};\n`;\nexport const EditBlock = styled.div`\n  margin-right: ${p => p.theme.spacing(5)};\n  display: flex;\n  flex-direction: row;\n  gap: ${p => p.theme.spacing(2)};\n`;\nexport const EditButton = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  background-color: ${p => p.theme.currentTheme.taskBgn};\n  border: none;\n`;\nexport const EditSVG = styled.svg`\n  stroke: ${p => p.theme.currentTheme.iconStroke};\n  fill: ${p => p.theme.currentTheme.taskBgn};\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n","import { Field, Form } from \"formik\";\n\n  import { styled } from \"styled-components\";\n  // import DatePicker from 'react-datepicker';\n  // import 'react-datepicker/dist/react-datepicker.css';\n\n  const getColor = (props) => {\n    switch (props.value) {\n      case 'Low':\n        return props.theme.priorityColors.low;\n      case 'Medium':\n        return props.theme.priorityColors.medium;\n      case 'High':\n        return props.theme.priorityColors.high;\n      default:\n        return props.theme.priorityColors.without;\n    }\n  };\n\n  export const AddCardWrapper = styled(Form)`\n  padding: 24px;\n  display:flex;\n  flex-direction: column;\n\n  width: 287px;\n  background-color: ${p => p.theme.currentTheme.taskBgn};\n\n  `\n  export const AddCardContainer = styled.div`\n\n  display:flex;\n  flex-direction: column;\n  gap:24px;\n\n\n  `\n  export const AddCardHeader = styled.h3`\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: ${p=> p.theme.currentTheme.mainText};\n  width: 100%;\n\n  `\n\n  export const AddCardTextCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap:14px;\n\n\n  `\n  export const AddCardTitle = styled(Field)`\n    width: 100%;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    padding: 14px 18px;\n    border-radius: ${p => p.theme.radius.m};\n    border: 1px solid ${p => p.theme.currentTheme.accent};\n    background: ${p => p.theme.currentTheme.inputBgn};\n    color: ${p => p.theme.currentTheme.mainText};\n    opacity: 0.4;\n    outline: none;\n    box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n    box-sizing: border-box;\n    &::placeholder {\n      font-size: 14px;\n      color: ${p => p.theme.currentTheme.mainText};\n      letter-spacing: -0.02em;\n    }\n    &:focus {\n      opacity: 1;\n    }\n  `\n  export const AddCardDescription = styled.textarea`\n  width: 100%;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    padding: 14px 18px;\n    border-radius: ${p => p.theme.radius.m};\n    border: 1px solid ${p => p.theme.currentTheme.accent};\n    background: ${p => p.theme.currentTheme.inputBgn};\n    color: ${p => p.theme.currentTheme.mainText};\n    opacity: 0.4;\n    outline: none;\n    box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n    box-sizing: border-box;\n    resize:none;\n    &::placeholder {\n      font-size: 14px;\n      color: ${p => p.theme.currentTheme.mainText};\n    }\n    &:focus {\n      opacity: 1;\n    }\n\n  `\n  export const AddCardDesc = styled(Field)`\n  /* width: 100%; */\n    /* font-size: 14px;\n    line-height: 21px;\n    letter-spacing: -0.02em;\n    padding: 14px 18px;\n    border-radius: ${p => p.theme.radius.m};\n    border: 1px solid ${p => p.theme.violetColors.accentColor};\n    background: ${p => p.theme.violetColors.bgColor};\n    color: ${p => p.theme.colors.darkTextColor}; */\n\n\n  `\n\n  export const AddCardColorCont = styled.div`\n  display: flex;\n  flex-direction:column;\n  gap:4px;\n\n  `\n  export const AddCardLabelText = styled.p`\n  padding: 0;\n  margin: 0;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: ${p => p.theme.currentTheme.grayText};\n\n\n  `\n  export const AddCardInputColor = styled(Field)`\n    position: absolute;\n    opacity: 0;\n    left:90%;\n    \n    + .radio-label {\n      &:before {\n        content: '';\n        background-color: ${(props) => getColor(props)\n        };\n        border-radius: 100%;\n        border: 1px solid\n          ${(props) => getColor(props)};\n        display: inline-block;\n        width: 14px;\n        height: 14px;\n        position: relative;\n       \n        cursor: pointer;\n        text-align: center;\n        transition: all 250ms ease;\n      }\n    }\n    &:checked {\n      + .radio-label {\n        &:before {\n          background-color: ${(props) => getColor(props)};\n          box-shadow: inset 0 0 0 4px white;\n        }}}\n  `\n \n export const AddCardLabelColor = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    cursor: pointer;\n    transform: translate(-50%, -50%);\n    background-color: ${(props) => getColor(props)};\n    transition: all 250ms ease;\n    border: 1px solid ${(props) => getColor(props)};\n  }\n\n  &:checked + &::before {\n    background-color: ${(props) => getColor(props)};\n    box-shadow: inset 0 0 0 4px white;\n   \n  }\n`;\n  export const AddCardContMark = styled.div`\n  display: flex;\n  gap:8px;\n  `\n  export const AddCardBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n  width: 100%;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: ${p => p.theme.currentTheme.accent};\n  border-radius:8px;\n  border-color:transparent;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 21px;\n  letter-spacing: -2%;\n  `\n  export const AddCardContCal = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap:4px;\n  `\n  export const AddCardOptionCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap:14px;\n  margin-bottom: 40px;\n  `\n  export const AddCardTextCal = styled.p`\n  padding:0;\n  margin: 0;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color:${p => p.theme.currentTheme.grayText};\n  `\n  export const AddCardSvgContainer = styled.span`\n  display: flex;\n  align-items: 'center';\n  justify-content: center;\n  border-radius: 4px; \n\n  width: 28px;\n  height: 28px;\n  background-color:${p => p.theme.currentTheme.plusIconFill};\n\n\n\n\n  `\n\n\n  export const AddCardButtonSvg = styled.svg`\n\n    fill: ${p => p.theme.currentTheme.plusIconFill};\n    stroke: ${p => p.theme.currentTheme.plusIconStroke};\n  \n    width: 14px;\n    height: 14px;\n    margin:auto;\n    `\n  export const AddCardSvgButtonText = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: ${p => p.theme.currentTheme.plusIconFill};\n  padding: 0;\n  margin: 0;\n  `\n  export const AddAnotherCard = styled.button`\n  margin-bottom:24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap:8px;\n  width: 334px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: ${p => p.theme.currentTheme.accent};\n  border-radius:8px;\n  border-color:transparent;\n  font-weight: 500;\n  line-height: 21px;\n  letter-spacing: -2%;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 52px;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 16px;\n  }\n  `\n\n  export const AddCardSvgClose = styled.svg`\n  fill: ${p => p.theme.currentTheme.mainText};\n    stroke: ${p => p.theme.currentTheme.mainText};\n    width: 18px;\n    height: 18px;\n  `\nexport const CalendarContainer = styled.div`\ndisplay: flex;\ngap: 4px;\nposition: relative;\n\n`;\n\nexport const DayText = styled.p`\nfont-weight: 500;\nletter-spacing: -0.02em;\ncolor:  ${p => p.theme.currentTheme.accent};\n`;\n\nexport const BtnOpenCal = styled.button`\ndisplay: flex;\nalign-items: flex-start;\ngap: 4px;\nposition: relative;\nwidth: 100%;\nheight: 18px;\ncursor: pointer;\nbackground:transparent;\nborder: none;\n\nsvg {\n  width: 18px;\n  height: 18px;\n  fill:  ${p => p.theme.currentTheme.plusIconFill};\n  stroke-width: 2px;\n  stroke:  ${p => p.theme.currentTheme.accent};\n}\n`;\n\n export const CustomCalendarContainer = styled.div`\n .custom-calendar-container {\n  position: absolute;\n  z-index: 1000;\n  top: auto; \n  bottom: 80px;\n  left: 0;\n  display: none;\n}\n\n.custom-calendar-container--open {\n  display: block;\n}\n `","import styled from 'styled-components';\n\nexport const CardListStyled = styled.ul`\n  padding-right: ${p => p.theme.spacing(1)};\n  margin: ${p => p.theme.spacing(3.5)} 0;\n  width: 347px;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n  max-height: 154px;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media only screen and (min-width: 768px) {\n    padding-right: ${p => p.theme.spacing(2)};\n    max-height: 640px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    max-height: 478px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px; /* Ширина скроллбару */\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.currentTheme.verticalScroll}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.currentTheme.verticalScrollBgn}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectTasks = state => state.tasks.tasks;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.tasks.isLoading;\nexport const selectError = state => state.tasks.error;\n\n\nexport const selectVisibleTasks = createSelector(\n  [selectTasks],\n  (tasks, filter) => {\n    return tasks.filter(tasks =>\n      tasks.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nconst getColor = props => {\n  switch (props.value) {\n    case 'Low':\n      return props.theme.priorityColors.low;\n    case 'Medium':\n      return props.theme.priorityColors.medium;\n    case 'High':\n      return props.theme.priorityColors.high;\n    default:\n    \n      return props.theme.currentTheme.without;\n  }\n};\n\nexport const TaskContainer = styled.div`\n  display: grid;\n  grid-template-columns: 4px 1fr;\n  gap: ${p => p.theme.spacing(3.5)};\n  width: 335px;\n  height: 154px;\n  margin: 0;\n  background-color: ${p => p.theme.currentTheme.taskBgn};\n  border-radius: ${p => p.theme.radius.m};\n`;\n\nexport const PrioritySeeContainer = styled.div`\n  height: 154px;\n  width: 4px;\n  padding: 0;\n  border-radius: 8px 0px 0px 8px;\n  background-color: ${getColor};\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3.5)};\n  padding: ${p => p.theme.spacing(3.5)} 0;\n  padding-right: ${p => p.theme.spacing(5)};\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  margin-bottom: ${p => p.theme.spacing(2)};\n  font-weight: 600;\n  font-size: 14px;\n  color: ${p => p.theme.currentTheme.mainText};\n`;\n\nexport const TextContainer = styled.div`\n  width: 290px;\n  height: 67px;\n  margin: 0;\n`;\n\nexport const DescriptionContainer = styled.div`\n  max-height: 38px;\n  overflow: hidden;\n  line-height: 1.3;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nexport const Text = styled.p`\n  width: 290px;\n  height: 34px;\n  margin: 0;\n\n  font-weight: 300;\n  font-size: 12px;\n  line-height: 1.3;\n  color: ${p => p.theme.currentTheme.homeText};\n`;\n\nexport const Line = styled.div`\n  width: 291px;\n  height: 1px;\n  border-top: 1px solid ${p => p.theme.currentTheme.line};\n`;\n\nexport const MenuCard = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(1)};\n  justify-content: space-between;\n`;\n\nexport const CardPriorityDeadline = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(3.5)};\n`;\n\nexport const ToDoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const SubTitle = styled.h3`\n  font-size: 8px;\n  line-height: 1.3;\n  margin: 0;\n  color: ${p => p.theme.currentTheme.greySubtitle};\n`;\n\nexport const PriorityContainer = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(1)};\n  height: 15px;\n  width: auto;\n`;\n\nexport const CirclePriority = styled.div`\n  height: 12px;\n  width: 12px;\n  border-radius: 50%;\n  background-color: ${getColor};\n`;\n\nexport const TextPriority = styled.p`\n  font-size: 10px;\n  line-height: 1.3;\n  color: ${p => p.theme.currentTheme.mainText};\n  margin: 0;\n`;\n\nexport const DeadlineContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const TextDate = styled.p`\n  font-size: 10px;\n  line-height: 1.3;\n  color: ${p => p.theme.currentTheme.mainText};\n  margin: 0;\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: ${p => p.theme.spacing(3)};\n`;\n\nexport const Bell = styled.div`\n    /* display: none; */\n`;\n\nexport const SvgBell = styled.svg`\n  height: 16px;\n  width: 16px;\n  fill: ${p => p.theme.currentTheme.modalBgn};\n  stroke: ${p => p.theme.currentTheme.accent};\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const Btn = styled.button`\n  background: transparent;\n  border: transparent;\n  border-radius: 50%;\n  height: 16px;\n  width: 16px;\n`;\n\nexport const Svg = styled.svg`\n  height: 16px;\n  width: 16px;\n  fill: ${p => p.theme.currentTheme.modalBgn};\n  stroke: ${p => p.theme.currentTheme.iconStroke};\n  transition: 200ms ease-out;\n\n  :hover,\n  :focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n","import { Field, Form } from \"formik\";\n\nimport { styled } from \"styled-components\";\n\nconst getColor = (props) => {\n  switch (props.value) {\n    case 'Low':\n      return props.theme.priorityColors.low;\n    case 'Medium':\n      return props.theme.priorityColors.medium;\n    case 'High':\n      return props.theme.priorityColors.high;\n    default:\n      return props.theme.priorityColors.without;\n  }\n};\n\nexport const EditCardWrapper = styled(Form)`\npadding: 24px;\ndisplay:flex;\nflex-direction: column;\n\nwidth: 287px;\nbackground-color: ${p => p.theme.currentTheme.taskBgn};\n\n`\nexport const EditCardContainer = styled.div`\n\ndisplay:flex;\nflex-direction: column;\ngap:24px;\n\n\n`\nexport const EditCardHeader = styled.h3`\nfont-weight: 500;\nfont-size: 18px;\nletter-spacing: -0.02em;\ncolor: ${p=> p.theme.currentTheme.mainText};\nwidth: 100%;\n`\n\nexport const EditCardTextCont = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap:14px;\n`\nexport const EditCardTitle = styled(Field)`\n width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.currentTheme.accent};\n  background: ${p => p.theme.currentTheme.inputBgn};\n  color: ${p => p.theme.currentTheme.mainText};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p =>p.theme.currentTheme.mainText};\n    letter-spacing: -0.02em;\n  }\n  &:focus {\n    opacity: 1;\n  }\n`\nexport const EditCardDescription = styled.textarea`\n width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p =>  p.theme.currentTheme.accent};\n  background: ${p =>  p.theme.currentTheme.inputBgn};\n  color: ${p => p.theme.currentTheme.mainText};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  resize:none;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.currentTheme.mainText};\n  }\n  &:focus {\n    opacity: 1;\n  }\n`\nexport const EditCardColorCont = styled.div`\ndisplay: flex;\nflex-direction:column;\ngap:4px;\n\n`\nexport const EditCardLabelText = styled.p`\npadding: 0;\nmargin: 0;\nfont-size: 12px;\nletter-spacing: -0.02em;\ncolor: ${p => p.theme.currentTheme.grayText};\n`\nexport const EditCardInputColor = styled(Field)`\n\nposition: absolute;\n    opacity: 0;\n    left:90%;\n    \n    + .radio-label {\n      &:before {\n        content: '';\n        background-color: ${(props) => getColor(props)\n        };\n        border-radius: 100%;\n        border: 1px solid\n          ${(props) => getColor(props)};\n        display: inline-block;\n        width: 14px;\n        height: 14px;\n        position: relative;\n       \n        cursor: pointer;\n        text-align: center;\n        transition: all 250ms ease;\n      }\n    }\n    &:checked {\n      + .radio-label {\n        &:before {\n          background-color: ${(props) => getColor(props)};\n          box-shadow: inset 0 0 0 4px white;\n        }}}\n`\nexport const EditCardContMark = styled.div`\n\ndisplay: flex;\ngap:8px;\n`\n\n\nexport const EditCardBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap:8px;\nwidth: 100%;\npadding-top: 10px;\npadding-bottom: 10px;\nbackground-color: ${p => p.theme.currentTheme.accent};\nborder-radius:8px;\nborder-color:transparent;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 21px;\nletter-spacing: -2%;\n`\nexport const EditCardContCal = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap:4px;\n`\nexport const EditCardOptionCont = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap:14px;\nmargin-bottom: 40px;\n`\nexport const EditCardTextCal = styled.p`\npadding:0;\nmargin: 0;\nfont-size: 12px;\nletter-spacing: -0.02em;\ncolor:${p => p.theme.currentTheme.grayText};\n\n`\n\nexport const EditCardSvgContainer = styled.span`\ndisplay: flex;\nalign-items: 'center';\njustify-content: center;\nborder-radius: 4px; \n\nwidth: 28px;\nheight: 28px;\nbackground-color:${p => p.theme.currentTheme.plusIconFill};\n`\n\nexport const EditCardButtonSvg = styled.svg`\n\nfill: ${p => p.theme.currentTheme.plusIconFill};\n  stroke: ${p => p.theme.currentTheme.plusIconStroke};\n \n  width: 14px;\n  height: 14px;\n  margin:auto;\n \n\n`\nexport const EditCardSvgButtonText = styled.p`\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: ${p => p.theme.currentTheme.plusIconFill};\npadding: 0;\nmargin: 0;\n\n`\n\nexport const EditCardSvgClose = styled.svg`\nfill: ${p => p.theme.currentTheme.plusIconFill};\n  stroke: ${p => p.theme.currentTheme.plusIconStroke};\n  width: 18px;\n  height: 18px;\n\n\n`","import styled from \"styled-components\";\nimport DatePicker from \"react-date-picker\";\n\n\n// import ReactDatePicker from \"react-datepicker\";\n// import { ReactDatePickerProps } from \"react-datepicker\";\n\nexport const DatePickerCalendar = styled(DatePicker)`\n.react-datepicker-wrapper {\n    display: inline-block;\n  }\n\n  .react-datepicker {\n    position: relative;\n    /* visibility: hidden; */\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  .react-datepicker__triangle {\n    display: none;\n  }\n\n  .react-datepicker-popper {\n    z-index: 1;\n  }\n\n.react-date-picker__calendar {\n  width: 233px; \n  /* height: auto; */\n  height: auto !important;\n  padding: 18px;\n  background-color: ${p => p.theme.currentTheme.headerBgn};\n  border: 1px solid ${p => p.theme.currentTheme.accent}; //#5255bc;\n  border-radius: ${p => p.theme.radius.m};\n  box-shadow: 0 4px 8px ${p => p.theme.colors.grayText}; //rgba(0, 0, 0, 0.1)\n  /* position: absolute; */\n  position: fixed;\n  z-index: 1000;\n  top: auto; \n  bottom: 100px;\n  left: 100;\n  /* right: -100px; */\n  /* display: none; */\n}\n.react-date-picker__clear-button {\n    display: none;\n}\n\n.react-date-picker__calendar-button, .react-date-picker__button {\n    /* background-color:transparent; */\n    background-color: red;\n    border-color: transparent;\n    width: 100%;\nheight: 18px;\ncursor: pointer;\nbackground:transparent;\nborder: none;\n\n/* svg {\n  width: 18px;\n  height: 18px;\n  fill: #fff;\n  stroke-width: 2px;\n  stroke: #5255bc;\n}\n    */\n}\n\n.react-date-picker__calendar-button__icon, \n.react-date-picker__button__icon {\n    /* display:none; */\n    width: 18px;\n  height: 18px;\n  fill: #fff;\n  stroke-width: 2px;\n  stroke: #5255bc;\n}\n/* .react-date-picker__button {\n    background-color:transparent;\n} */\n.react-date-picker__calendar--open {\n  display: block;\n}\n.react-date-picker__inputGroup{\n    display: none;\n}\n.react-calendar {\n  width: 100%;\n}\n\n.react-calendar__navigation {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: ${p => p.theme.spacing(3.5)};\n  margin-bottom: ${p => p.theme.spacing(3.5)};\n  border-color: transparent;\n  border-bottom: 1px solid ${p => p.theme.colors.horizontScroll}; //#16161633;\n}\n\n.react-calendar__navigation__label{\n  background: transparent;\n  border-color: transparent;\n}\n\n.react-calendar__navigation__prev-button, \n.react-calendar__navigation__arrow, \n.react-calendar__navigation__next-button {\n  width: 6px;\n  height: 10px;\n  color: ${p => p.theme.colors.mainText}; //#161616\n  background: transparent;\n  border: none;\n  transition: 200ms ease-out;\n\n  &:hover {\n  color: ${p => p.theme.colors.accent}; //#5255BC\n  }\n}\n\n.react-calendar__navigation__label__labelText, \n.react-calendar__navigation__label__labelText--from {\n\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  color: ${p => p.theme.colors.mainText}; //#161616\n  margin-bottom: ${p => p.theme.spacing(3.5)};\n}\n\n.react-calendar__month-view__weekdays {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${p => p.theme.spacing(2)};\n}\n\n.react-calendar__month-view__weekdays__weekday {\n  flex: 1;\n  text-align: center;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  color: ${p => p.theme.colors.grayText}; //#16161680 || #rgba(225, 225, 225, 0.5);\n\n  abbr{\n    text-decoration: none;\n  }\n}\n\n.react-calendar__decade-view__years__year,  \n.react-calendar__year-view__months__month,\n.react-calendar__month-view__days__day {\n  background: transparent;\n  border-color: transparent;\n  border-radius: 50%;\n}\n\n.react-calendar__month-view__days__day--neighboringMonth {\n  flex: 0 0 14.2857%;  \n  overflow: hidden; \n  margin-inline-end: 0px;\n  color: ${p => p.theme.colors.mainText}; //#161616\n  opacity: 20%;\n  font-size: 14px;\n  line-height: 1.3;\n}\n\n.react-calendar__tile {\n  flex: 1 0 14.2857%;\n  padding: ${p => p.theme.spacing(2)};\n  text-align: center;\n  cursor: pointer;\n  transition: 200ms ease-out;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.accent}; //#5255BC\n    border-radius: 50%;\n    border-color: transparent;\n  }\n\n  &--active,\n  &--range,\n  &--rangeStart,\n  &--rangeEnd,\n  &--rangeBothEnds {\n    background-color: ${p => p.theme.colors.accent}; //#5255BC\n    color: ${p => p.theme.colors.white}; //#fff\n    border-radius: 50%;\n    border-color: transparent;\n  }\n\n  &--neighboringMonth {\n    opacity: 0.4;\n  }\n}\n`;","import React from \"react\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { DatePickerCalendar } from \"./DatePicker.styled\";\n\n\n\nexport const DatePickerNew = ({ selectedDate, handleDateChange }) => {\n    \n  return (\n      <DatePickerCalendar>\n        selected={selectedDate}\n        onChange={handleDateChange}\n        dateFormat=\"dd/MM/yyyy\"\n      </DatePickerCalendar> \n      \n    );\n  };\n\n","import { Field, Formik } from 'formik';\n// import 'react-datepicker/dist/react-datepicker.css';\nimport sprite from '../../images/icons.svg';\nimport { CLoseButton } from '../../components/EditProfileModal/EditProfileModal.styled';\n\nimport {\n  EditCardBtn,\n  EditCardButtonSvg,\n  EditCardColorCont,\n  EditCardContCal,\n  EditCardContMark,\n  EditCardContainer,\n  // EditCardDate,\n  EditCardDescription,\n  EditCardHeader,\n  EditCardInputColor,\n  EditCardLabelText,\n  EditCardOptionCont,\n  EditCardSvgButtonText,\n  EditCardSvgClose,\n  EditCardSvgContainer,\n  EditCardTextCal,\n  EditCardTextCont,\n  EditCardTitle,\n  EditCardWrapper,\n} from './EditCard.styled';\nimport { useState} from 'react';\nimport {  editTask } from 'redux/tasks/operations';\nimport { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { toastStyles } from '../../ToasterOptions';\nimport { useTranslation } from 'react-i18next';\nimport { BtnOpenCal, CalendarContainer, CustomCalendarContainer, DayText } from 'components/AddCard/AddCard.styled';\nimport { DatePickerNew } from 'components/DatePicker/DatePicker';\nimport { format } from 'date-fns';\n\n\n\nexport const EditCard = ({ onCloseModal,task: {  _id, title, description, priority,deadline } }) => {\n  const {t} = useTranslation('global')\n  const [startDate] = useState(new Date());\n  const [isCalendarOpen, setCalendarOpen] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const dispatch = useDispatch();\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    // setIsOpen(false);\n  };\n\n  const getFormattedDate = (date) => {\n    //  const today = new Date();\n   \n     if (isToday(date)) {\n       // Якщо дата - сьогодні\n       return `Today, ${format(date, 'MMMM d')}`;\n     }\n   \n     // Якщо дата не сьогодні\n     return format(date, 'MMMM d, yyyy');\n   };\n   \n   const isToday = (date) => {\n     const today = new Date();\n     return (\n       date.getDate() === today.getDate() &&\n       date.getMonth() === today.getMonth() &&\n       date.getFullYear() === today.getFullYear()\n     );\n   };\n   const currentDate = new Date();\n const formattedDate = getFormattedDate(currentDate);\n  \n  // const formik = useFormik({\n  //   initialValues: {\n  //     title: '',\n  //     description: '',\n  //     priority: '',\n  //     deadline: '',\n  //   },\n   \n  // });\n\n//   const saveCard = ()=>{\n\n//     const newCard = {\n//       title: formik.values.title,\n//       description: formik.values.description,\n//       priority: formik.values.priority,\n//       deadline: formik.values.deadline,\n//     };\n// dispatch(addTask(newCard));\n\n\n//   }\n\n  // const isToday = date => {\n  //   const today = new Date();\n  //   return (\n  //     date.getDate() === today.getDate() &&\n  //     date.getMonth() === today.getMonth() &&\n  //     date.getFullYear() === today.getFullYear()\n  //   );\n  // };\n\n   const successToaster = () => {\n     toast.success('You successfully edited card!', {\n       icon: '👍',\n       duration: 4000,\n       style: toastStyles.success,\n     });\n   };\n\n  return (\n    <Formik\n      initialValues={{\n        title: `${title}`,\n        description: `${description}`,\n        priority: `${priority}`,\n        deadline: `${deadline} ?? ${startDate}`,\n      }}\n      onSubmit={values => {\n        const editCard = {\n          title: values.title,\n          description: values.description,\n          priority: values.priority,\n          deadline: values.deadline,\n          taskId: _id,\n        };\n        console.log(editCard);\n        dispatch(editTask(editCard));\n\n        // resetForm();\n\n        onCloseModal();\n        successToaster();\n      }}\n    >\n      <EditCardWrapper>\n        <CLoseButton onClick={onCloseModal} type=\"button\">\n          <EditCardSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </EditCardSvgClose>\n        </CLoseButton>\n\n        <EditCardContainer>\n          <EditCardHeader>\n            {t('screenPage.render.modal.card.editTitle')}\n          </EditCardHeader>\n          <EditCardTextCont>\n            <EditCardTitle name=\"title\" placeholder=\"Title\" />\n\n            {/* <Field className='AddCardDesc' as='textarea'name=\"description\"></Field> */}\n            <Field\n              as={EditCardDescription}\n              name=\"description\"\n              placeholder={t('screenPage.render.modal.card.descr')}\n              // value={Formik.values.description}\n              // onChange={(e) => {\n              //   AddCardDescription.value = e.target.value;\n              //   console.dir(AddCardDescription.value);\n              // }}\n              // onBlur={Formik.handleBlur}\n            />\n          </EditCardTextCont>\n          <EditCardOptionCont>\n            <EditCardColorCont>\n              <EditCardLabelText>\n                {t('screenPage.render.modal.card.color')}\n              </EditCardLabelText>\n\n              <label>\n                <EditCardContMark>\n                <EditCardInputColor\n                    id=\"priorityLow\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"Low\"\n                  />\n                <label className='radio-label' value=\"Low\" htmlFor=\"priorityLow\">\n                 \n                </label>\n                <EditCardInputColor\n                    id=\"priorityMedium\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"Medium\"\n                  />\n                <label className='radio-label' value=\"Medium\" htmlFor=\"priorityMedium\">\n                \n                </label>\n                <EditCardInputColor\n                    id=\"priorityHigh\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"High\"\n                  />\n                <label className='radio-label' value=\"High\" htmlFor=\"priorityHigh\">\n                  \n                </label>\n                <EditCardInputColor\n                    id=\"priorityWithout\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"Without\"\n                  />\n                <label className='radio-label' value=\"Without\" htmlFor=\"priorityWithout\">\n                 \n                </label>\n                </EditCardContMark>\n              </label>\n            </EditCardColorCont>\n            <EditCardContCal>\n              <EditCardTextCal>\n                {t('screenPage.render.modal.card.deadline')}\n              </EditCardTextCal>\n              <CalendarContainer>\n                    <BtnOpenCal\n                    type=\"button\"\n                    className=\"sc-gHRYGD jSCLHb\"\n                     onClick={() => setCalendarOpen(!isCalendarOpen)}\n                    >\n                      <DayText>{formattedDate}</DayText>\n                    {/* <svg>\n                        <use xlinkHref=\"/task-pro-frontend/static/media/icons.aac6f44bcaee16261ed30d1da75e7958.svg#icon-chevron-down1\"></use>\n                      </svg> */}\n                  </BtnOpenCal>\n                  {isCalendarOpen && (\n                   <CustomCalendarContainer className=\"custom-calendar-container\">\n                      <DatePickerNew\n                         selected={selectedDate}\n                         onChange={handleDateChange}\n                         dateFormat={\n                          isToday(startDate) ? \"'Today,' MMMM d\" : 'EEEE,MMMM d'\n                        }\n                     />\n                   </CustomCalendarContainer>)}\n               </CalendarContainer>\n              {/* <EditCardDate\n                name=\"deadline\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                dateFormat={\n                  isToday(startDate) ? \"'Today,' MMMM d\" : 'EEEE,MMMM d'\n                }\n                showWeekNumbers\n              /> */}\n            </EditCardContCal>\n          </EditCardOptionCont>\n        </EditCardContainer>\n        <EditCardBtn type=\"submit\">\n          <EditCardSvgContainer>\n            <EditCardButtonSvg>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </EditCardButtonSvg>\n          </EditCardSvgContainer>\n          <EditCardSvgButtonText>\n            {t('screenPage.render.modal.card.editBtn')}\n          </EditCardSvgButtonText>\n        </EditCardBtn>\n      </EditCardWrapper>\n    </Formik>\n  );\n              }","import styled from 'styled-components';\n\n// Change button styles\nexport const ChangeButtonCard = styled.button`\n  background: transparent;\n  border: transparent;\n  border-radius: 50%;\n  height: 16px;\n  width: 16px;\n`;\n\nexport const StyledSVGChangeColumn = styled.svg`\n  height: 16px;\n  width: 16px;\n  fill: ${p => p.theme.colors.white};\n  stroke: ${p => p.theme.colors.darkTextColor};\n  opacity: 50%;\n  transition: 200ms ease-out;\n\n  :hover,\n  :focus {\n    stroke: ${p => p.theme.violetColors.accentColor};\n  }\n`;\n\n// Change modal styles\nexport const ChangeWrapper = styled.div`\n  width: 135px;\n  padding: 18px;\n  background: #fcfcfc;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n`;\nexport const ChangeButton = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 100%;\n  text-align: start;\n  color: rgb(22, 22, 22);\n  padding: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:hover,\n  &:focus {\n    color: #5255bc;\n    svg {\n      stroke: #5255bc;\n    }\n  }\n`;\n\nexport const StyledSVGChange = styled.svg`\n  stroke: rgb(22, 22, 22);\n  fill: none;\n  width: 16px;\n  height: 16px;\n`;\n\n","import sprite from '../../images/icons.svg';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  ChangeButton,\n  ChangeWrapper,\n  StyledSVGChange,\n} from './ChangeColumn.styled';\n\nimport { editTask } from 'redux/tasks/operations';\nimport { selectColumns } from 'redux/columns/selectors';\nimport { useParams } from 'react-router-dom';\n\nexport const ChangeColumnModal = props => {\n  const { boardId } = useParams();\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const { Id } = props;\n\n  const filteredColumns = columns.filter(column => column.board === boardId);\n  return (\n    <ChangeWrapper>\n      <ul>\n        {filteredColumns.map(column => (\n          <li key={column._id}>\n            <ChangeButton\n              type=\"button\"\n              onClick={() =>\n                dispatch(editTask({ taskId: Id, column: column._id }))\n              }\n            >\n              {column.title}\n              <StyledSVGChange>\n                <use xlinkHref={`${sprite}#icon-active`}></use>\n              </StyledSVGChange>\n            </ChangeButton>\n          </li>\n        ))}\n      </ul>\n    </ChangeWrapper>\n  );\n};\n","import Modal from 'react-modal';\nimport { useState } from 'react';\nimport sprite from '../../images/icons.svg';\nimport { ChangeColumnModal } from './ChangeColumnModal';\nimport { ChangeButtonCard, StyledSVGChangeColumn } from './ChangeColumn.styled';\n\nModal.setAppElement('#root');\n\nexport const ChangeColumnButton = props => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { taskId } = props;\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <div>\n      <ChangeButtonCard type=\"button\" onClick={openModal}>\n        <StyledSVGChangeColumn>\n          <use xlinkHref={`${sprite}#icon-active`}></use>\n        </StyledSVGChangeColumn>\n      </ChangeButtonCard>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <ChangeColumnModal Id={taskId} />\n      </Modal>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../images/icons.svg';\nimport { deleteTask } from 'redux/tasks/operations';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { toastStyles } from '../../ToasterOptions';\n\nimport {\n  PrioritySeeContainer,\n  CardPriorityDeadline,\n  TaskContainer,\n  Title,\n  Text,\n  Line,\n  ToDoContainer,\n  DeadlineContainer,\n  Bell,\n  Buttons,\n  TextContainer,\n  Svg,\n  Btn,\n  MenuCard,\n  SubTitle,\n  CirclePriority,\n  TextPriority,\n  PriorityContainer,\n  MainContainer,\n  TextDate,\n  ButtonsContainer,\n  SvgBell,\n  DescriptionContainer,\n} from './TaskCard.styled';\nimport { EditCard } from 'components/EditCard/EditCard';\nimport { ChangeColumnButton } from 'components/ChangeColumn/ChangeColumnButton';\nimport { useTranslation } from 'react-i18next';\n\nModal.setAppElement('#root');\n\nexport const TaskCard = ({\n  task: { _id, title, description, priority, deadline },\n  columns,\n}) => {\n  const { t } = useTranslation('global');\n\n  const dispatch = useDispatch();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const isDeadLinePassed = selectedDate && setSelectedDate > new Date();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const formatDeadlineDate = deadline => {\n    const formattedDeadlineDate = new Date(deadline);\n\n    const day = formattedDeadlineDate.getDate();\n    const month = String(formattedDeadlineDate.getMonth() + 1).padStart(2, '0');\n    const year = formattedDeadlineDate.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const successToaster = () => {\n    toast.success('You successfully deleted card!', {\n      icon: '👍',\n      duration: 4000,\n      style: toastStyles.success,\n    });\n  };\n\n  const errorToaster = error => {\n    toast.error(`Something went wrong! It's ${error} error`, {\n      icon: '🤔',\n      duration: 4000,\n      style: toastStyles.error,\n    });\n  };\n\n  const toDeleteTask = taskId => {\n    try {\n      dispatch(deleteTask(taskId));\n      successToaster();\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  return (\n    <TaskContainer>\n      <PrioritySeeContainer value={priority}></PrioritySeeContainer>\n      <MainContainer>\n        <TextContainer>\n          <Title>{title}</Title>\n          <DescriptionContainer>\n            <Text>{description}</Text>\n          </DescriptionContainer>\n        </TextContainer>\n\n        <Line></Line>\n\n        <MenuCard>\n          <CardPriorityDeadline>\n            <ToDoContainer>\n              <SubTitle>Priority</SubTitle>\n              <PriorityContainer>\n                <CirclePriority value={priority} />\n                <TextPriority>{priority}</TextPriority>\n              </PriorityContainer>\n            </ToDoContainer>\n            <DeadlineContainer>\n              <SubTitle>{t('screenPage.render.modal.card.deadline')}</SubTitle>\n              {/* <TextDate> {selectedDate ? selectedDate.toLocaleDateString() : \"No deadline\"}\n</TextDate> */}\n\n              <TextDate>{formatDeadlineDate(deadline)}</TextDate>\n            </DeadlineContainer>\n          </CardPriorityDeadline>\n          <ButtonsContainer>\n            {isDeadLinePassed ? null : (\n              <Bell>\n                <SvgBell>\n                  <use xlinkHref={`${sprite}#icon-bell-01`}></use>\n                </SvgBell>\n              </Bell>\n            )}\n            <Buttons>\n              <ChangeColumnButton taskId={_id} />\n              <Modal\n                isOpen={isModalOpen}\n                onRequestClose={closeModal}\n                overlayClassName={'modal-overlay'}\n                className={'modal-content'}\n                closeTimeoutMS={300}\n              >\n                <EditCard\n                  onCloseModal={closeModal}\n                  task={{ _id, title, description, priority, deadline }}\n                />\n              </Modal>\n              <Btn type=\"button\" onClick={openModal}>\n                <Svg>\n                  <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n                </Svg>\n              </Btn>\n              <Btn type=\"button\" onClick={() => toDeleteTask(_id)}>\n                <Svg>\n                  <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n                </Svg>\n              </Btn>\n            </Buttons>\n          </ButtonsContainer>\n        </MenuCard>\n      </MainContainer>\n\n      <Toaster />\n    </TaskContainer>\n  );\n};\n","export const selectFiltersPriority = state => state.filters.filtersPriority;\n","import { CardListStyled } from './CardList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport { TaskCard } from 'components/TaskCard/TaskCard';\nimport { fetchTitle } from 'redux/tasks/operations';\nimport { useEffect } from 'react';\nimport { selectFiltersPriority } from 'redux/filters/selectors';\n\nexport const CardList = ({ columnId, filtColumns }) => {\n  const dispatch = useDispatch();\n  const selectedPriority = useSelector(selectFiltersPriority);\n  const formattedPriority = selectedPriority.map(\n    priority => priority.charAt(0).toUpperCase() + priority.slice(1)\n  );\n\n  useEffect(() => {\n    dispatch(fetchTitle());\n  }, [dispatch]);\n\n  const tasks = useSelector(selectTasks);\n\n  const filteredTasks = tasks.filter(task => {\n    const priorityCondition =\n      formattedPriority.length === 0 ||\n      formattedPriority.includes(task.priority);\n\n    const columnCondition = task.column === columnId;\n\n    return priorityCondition && columnCondition;\n  });\n  return (\n    <CardListStyled>\n      {filteredTasks.map(task => (\n        <li key={task._id}>\n          <TaskCard task={task} columns={filtColumns} />\n        </li>\n      ))}\n    </CardListStyled>\n  );\n};\n","import { Field, Formik } from 'formik';\nimport sprite from '../../images/icons.svg';\nimport toast from 'react-hot-toast';\nimport { toastStyles } from '../../ToasterOptions';\nimport { format } from 'date-fns';\n// import DatePicker from 'react-date-picker';\n// import { DatePicker } from 'rsuite';\n\nimport {\n  AddCardBtn,\n  AddCardButtonSvg,\n  AddCardColorCont,\n  AddCardContCal,\n  AddCardContMark,\n  AddCardContainer,\n  // AddCardDate,\n  // AddCardDesc,\n  AddCardDescription,\n  AddCardHeader,\n  AddCardInputColor,\n  AddCardLabelText,\n  AddCardOptionCont,\n  AddCardSvgButtonText,\n  AddCardSvgClose,\n  AddCardSvgContainer,\n  AddCardTextCal,\n  AddCardTextCont,\n  AddCardTitle,\n  AddCardWrapper,\n  CalendarContainer,\n\n  DayText,\n  // DatePickerCalendar,\n  BtnOpenCal,\n  CustomCalendarContainer\n  \n} from './AddCard.styled';\nimport { useState } from 'react';\nimport { CLoseButton } from 'components/EditProfileModal/EditProfileModal.styled';\nimport { addTask } from 'redux/tasks/operations';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { DatePickerNew } from 'components/DatePicker/DatePicker';\n// import DatePicker from 'react-date-picker';\n// import { uk } from 'date-fns/locale';\n\n\nexport const AddCard = ({ onCloseModal, id }) => {\n  const { t } = useTranslation('global');\n    // const [fieldValue, setFieldValue] = useState(null);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [isCalendarOpen, setIsCalendarOpen] = useState(false);;\n    const [startDate] = useState(false)\n\n    // const handleDateChange = (date) => {\n    //   setSelectedDate(date);\n    // };\n  \n    const toOpenCalendar = () => {\n      setIsCalendarOpen(!isCalendarOpen);\n    };\n  \n  \n   const dispatch = useDispatch();\n   // const formik = useFormik({\n   //   initialValues: {\n   //     title: '',\n   //     description: '',\n   //     priority: '',\n   //     deadline: '',\n   //   },\n    \n   // });\n   const getFormattedDate = (date) => {\n    // const today = new Date();\n\n    if (isToday(date)) {\n      return `Today, ${format(date, 'MMMM d')}`;\n    }\n    return format(date, 'MMMM d, yyyy');\n  };\n\n  const isToday = (date) => {\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  };\n\n  const currentDate = new Date();\n  const formattedDate = getFormattedDate(currentDate);\n\n \n//  const toggleDatePicker = () => {\n//   setIsDatePickerOpen((prevState) => !prevState);\n// };\n \n\n  const successToaster = () => {\n    toast.success('You successfully added card!', {\n      icon: '👍',\n      duration: 4000,\n      style: toastStyles.success,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        description: '',\n        priority: '' || 'Without',\n        deadline: `${startDate}`,\n      }}\n      onSubmit={(values, { resetForm }) => {\n        const newCard = {\n          title: values.title,\n          description: values.description,\n          priority: values.priority,\n          deadline: values.deadline,\n          columnId: id,\n        };\n     \n        console.log(newCard);\n        dispatch(addTask(newCard));\n       \n        resetForm();\n        onCloseModal();\n        successToaster();\n      }}\n    >\n       {({ values, setFieldValue }) => (\n      <AddCardWrapper>\n\n        <CLoseButton onClick={onCloseModal} type=\"button\">\n          <AddCardSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </AddCardSvgClose>\n          \n        </CLoseButton>\n        <AddCardContainer>\n          <AddCardHeader>\n            {t('screenPage.render.modal.card.title')}\n          </AddCardHeader>\n          <AddCardTextCont>\n            <AddCardTitle\n              name=\"title\"\n              placeholder={t('screenPage.render.modal.card.cardTitle')}\n            />\n            {/* <Field className='AddCardDesc' as='textarea'name=\"description\"></Field> */}\n            <Field\n              as={AddCardDescription}\n              name=\"description\"\n              placeholder={t('screenPage.render.modal.card.descr')}\n              // value={Formik.values.description}\n              // onChange={(e) => {\n              //   AddCardDescription.value = e.target.value;\n              //   console.dir(AddCardDescription.value);\n              // }}\n              // onBlur={Formik.handleBlur}\n            />\n          </AddCardTextCont>\n          <AddCardOptionCont>\n            <AddCardColorCont>\n              <AddCardLabelText>\n                {t('screenPage.render.modal.card.color')}\n              </AddCardLabelText>\n\n              <AddCardContMark>\n              <AddCardInputColor\n                    id=\"priorityLow\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"Low\"\n                  />\n                <label className='radio-label' value=\"Low\" htmlFor=\"priorityLow\">\n                 \n                </label>\n                <AddCardInputColor\n                    id=\"priorityMedium\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"Medium\"\n                  />\n                <label className='radio-label' value=\"Medium\" htmlFor=\"priorityMedium\">\n                \n                </label>\n                <AddCardInputColor\n                    id=\"priorityHigh\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"High\"\n                  />\n                <label className='radio-label' value=\"High\" htmlFor=\"priorityHigh\">\n                  \n                </label>\n                <AddCardInputColor\n                    id=\"priorityWithout\"\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"Without\"\n                  />\n                <label className='radio-label' value=\"Without\" htmlFor=\"priorityWithout\">\n                 \n                </label>\n              </AddCardContMark>\n            </AddCardColorCont>\n            <AddCardContCal>\n              <AddCardTextCal>\n                {t('screenPage.render.modal.card.deadline')}\n              </AddCardTextCal>\n\n              <CalendarContainer>\n            <BtnOpenCal\n              type=\"button\"\n              className=\"sc-gHRYGD jSCLHb\"\n              onClick={toOpenCalendar}\n            >\n              <DayText>{formattedDate}</DayText>\n            </BtnOpenCal>\n            {isCalendarOpen && (\n              <CustomCalendarContainer className=\"custom-calendar-container\">\n                <DatePickerNew\n                   selected={selectedDate}\n                   onChange={(date) => {\n                     setSelectedDate(date);\n                     setFieldValue('deadline', getFormattedDate(date));\n                   }}\n                   dateFormat=\"dd/MM/yyyy\"\n                />\n              </CustomCalendarContainer>\n            )}\n          </CalendarContainer>\n\n             \n        \n            </AddCardContCal>\n          </AddCardOptionCont>\n        </AddCardContainer>\n        <AddCardBtn type=\"submit\">\n          <AddCardSvgContainer>\n            <AddCardButtonSvg>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </AddCardButtonSvg>\n          </AddCardSvgContainer>\n          <AddCardSvgButtonText>\n            {t('screenPage.render.addCard')}\n          </AddCardSvgButtonText>\n        </AddCardBtn>\n      </AddCardWrapper>\n       )}\n    </Formik>\n  );\n};\n","import React, { useState } from 'react';\nimport sprite from '../../../images/icons.svg';\nimport { toastStyles } from '../../../ToasterOptions';\n\nimport {\n  ModalCloseButton,\n  ModalWrap,\n  StyledSvgClose,\n} from '../ColumnModal.styled';\nimport {\n  AddColumnBtn,\n  AddColumnInput,\n  AddColumnTitle,\n  IconWhiteWrap,\n  StyledSvgDarkPlus,\n} from 'components/EditColumnButtons/AddColumnButton/AddColumnButton.styled';\nimport { editColumn } from 'redux/columns/operations';\nimport { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { useTranslation } from 'react-i18next';\n\nexport const EditColumnModal = ({ onCloseModal, column }) => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n \n\n  const [title, setTitle] = useState(column.title);\n\n  const successToaster = () => {\n    toast.success('You successfully edited column!', {\n      icon: '👌',\n      duration: 4000,\n      style: toastStyles.success,\n    });\n  };\n\n  const errorToaster = error => {\n    toast.error(`Something went wrong! It's ${error} error`, {\n      icon: '🤔',\n      duration: 4000,\n      style: toastStyles.error,\n    });\n  };\n\n  const handlerEditColumn = evt => {\n    evt.preventDefault();\n\n    try {\n      const inputValue = evt.target.title.value.trim();\n\n      if (inputValue !== '') {\n        const newTitle = {\n          title: { title: inputValue },\n          id: column._id,\n        };\n\n        dispatch(editColumn(newTitle));\n        onCloseModal();\n        successToaster();\n      }\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  return (\n    <ModalWrap>\n      <AddColumnTitle>\n        {t('screenPage.render.modal.column.editTitle')}\n      </AddColumnTitle>\n\n      <ModalCloseButton onClick={onCloseModal}>\n        <StyledSvgClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </StyledSvgClose>\n      </ModalCloseButton>\n      <form onSubmit={handlerEditColumn}>\n        <AddColumnInput\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange = {(event) => setTitle(event.target.value)}\n          placeholder={t('screenPage.render.modal.column.input')}\n          autoFocus\n        />\n\n        <AddColumnBtn type=\"submit\">\n          <IconWhiteWrap>\n            <StyledSvgDarkPlus>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </StyledSvgDarkPlus>\n          </IconWhiteWrap>\n          {t('screenPage.render.modal.card.editBtn')}\n        </AddColumnBtn>\n      </form>\n    </ModalWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const EditSVG = styled.svg`\n  stroke: ${p => p.theme.currentTheme.iconStroke};\n  fill: ${p => p.theme.currentTheme.taskBgn}; \n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\nexport const EditButton = styled.button`\n  display:flex;\n  align-items: center;\n  padding: 0;\n  background-color: ${p => p.theme.currentTheme.taskBgn };;\n  border: none;\n`;\n","import React, { useState } from 'react';\nimport { EditColumnModal } from 'components/ColumnModal/EditColumnModal/EditColumnModal';\n\nimport Modal from 'react-modal';\nimport '../ColumnModal.css';\n\nimport sprite from '../../../images/icons.svg';\nimport { EditButton, EditSVG } from './EditColumnButton.styled';\n\nexport const EditColumnButton = ({ column }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <EditButton type=\"button\" onClick={openModal}>\n        <EditSVG>\n          <use xlinkHref={`${sprite}#icon-pencil-01`} />\n        </EditSVG>\n      </EditButton>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <EditColumnModal onCloseModal={closeModal} column={column} />\n      </Modal>\n    </>\n  );\n};\n","import sprite from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { toastStyles } from '../../ToasterOptions';\nimport {\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  EditBlock,\n  EditButton,\n  EditSVG,\n} from './ColumnListItem.styled';\n\nimport {\n  AddAnotherCard,\n  AddCardButtonSvg,\n  AddCardSvgButtonText,\n  AddCardSvgContainer,\n} from 'components/AddCard/AddCard.styled';\nimport { CardList } from 'components/CardList/CardList';\nimport { AddCard } from 'components/AddCard/AddCard';\nimport { useDispatch } from 'react-redux';\nimport { fetchTitle } from 'redux/tasks/operations';\nimport { EditColumnButton } from 'components/EditColumnButtons/EditColumnButton/EditColumnButton';\nimport { deleteColumn } from 'redux/columns/operations';\n\nimport { useTranslation } from 'react-i18next';\n\nModal.setAppElement('#root');\nexport const ColumnListItem = ({ column, columns }) => {\n  const { t } = useTranslation('global');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { _id } = column;\n\n  const dispatch = useDispatch();\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchTitle());\n  }, [dispatch]);\n\n  const successToaster = () => {\n    toast.success('You successfully deleted column!', {\n      icon: '👍',\n      duration: 4000,\n      style: toastStyles.success,\n    });\n  };\n\n  const errorToaster = error => {\n    toast.error(`Something went wrong! It's ${error} error`, {\n      icon: '🤔',\n      duration: 4000,\n      style: toastStyles.error,\n    });\n  };\n\n  const handlerDeleteColumn = () => {\n    try {\n      const columnId = _id;\n\n      dispatch(deleteColumn(columnId));\n      successToaster();\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{column.title}</ColumnTitle>\n        <EditBlock>\n          <EditColumnButton column={column} />\n\n          <EditButton type=\"button\" onClick={handlerDeleteColumn}>\n            <EditSVG>\n              <use xlinkHref={`${sprite}#icon-trash-04`} />\n            </EditSVG>\n          </EditButton>\n        </EditBlock>\n      </ColumnHeader>\n      <CardList columnId={column._id} filtColumns={columns} />\n      <AddAnotherCard onClick={openModal} type=\"submit\">\n        <AddCardSvgContainer>\n          <AddCardButtonSvg>\n            <use xlinkHref={`${sprite}#icon-plus`}></use>\n          </AddCardButtonSvg>\n        </AddCardSvgContainer>\n        <AddCardSvgButtonText>\n          {t('screenPage.render.addCard')}\n        </AddCardSvgButtonText>\n      </AddAnotherCard>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <AddCard onCloseModal={closeModal} id={column._id} />\n      </Modal>\n    </ColumnWrapper>\n  );\n};\n","import { AddColumnButton } from 'components/EditColumnButtons/AddColumnButton/AddColumnButton';\nimport {\n  ColumnButtonwrapper,\n  ColumnListStyled,\n  ColumnListWrapper,\n} from './ColumnList.styled';\nimport { ColumnListItem } from 'components/ColumnListItem/ColumnListItem';\n\nexport const ColumnList = ({ columns }) => {\n  return (\n    <ColumnListWrapper>\n      <ColumnListStyled>\n        {columns.map(column => (\n          <li key={column._id}>\n            <ColumnListItem column={column} columns={columns} />\n          </li>\n        ))}\n      </ColumnListStyled>\n      <ColumnButtonwrapper>\n        <AddColumnButton />\n      </ColumnButtonwrapper>\n    </ColumnListWrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getAllColumns } from 'redux/columns/operations';\nimport { selectColumns } from 'redux/columns/selectors';\nimport { ButtonText, DashBoardWrapper, Text } from './DashBoard.styled';\nimport { ColumnList } from 'components/ColumnList/ColumnList';\n\nconst DashBoard = () => {\n  const { boardId } = useParams();\n\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  useEffect(() => {\n    dispatch(getAllColumns());\n  }, [dispatch, boardId]);\n\n  const { t } = useTranslation('global');\n\n  const filteredColumns = columns.filter(column => column.board === boardId);\n\n  return (\n    <DashBoardWrapper>\n      {!boardId ? (\n        <Text>\n          {t('screenPage.static.message1')}\n          <ButtonText>{t('screenPage.static.message2')}</ButtonText>\n          {t('screenPage.static.message3')}\n        </Text>\n      ) : (\n        <ColumnList columns={filteredColumns} />\n      )}\n    </DashBoardWrapper>\n  );\n};\n\nexport default DashBoard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectBoardById } from 'redux/boards/selectors';\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { ScreensPageWrapper } from './ScreensPage.styled';\nimport DashBoard from 'components/DashBoard/DashBoard';\n\nexport default function ScreensPage() {\n  const board = useSelector(selectBoardById);\n\n  return (\n    <ScreensPageWrapper back={board.backgroundURL}>\n      <HeaderDashboard />\n      <DashBoard />\n      {/* {(boards.length === 0 && filteredColumns.length === 0) ? <ColumnList columns={filteredColumns}/> : <AddColumnButton/> } */}\n    </ScreensPageWrapper>\n  );\n}\n","import { ErrorMessage, Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  box-sizing: border-box;\n  border-radius: ${props => props.theme.radius.m};\n\n  width: 335px;\n  padding: ${p => p.theme.spacing(6)};\n\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background-color: #fcfcfc;\n\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\nexport const CLoseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  border: none;\n  padding: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  background-color: transparent;\n`;\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  border: none;\n  padding: 0;\n\n  stroke: ${props => props.theme.colors.darkTextColor};\n  stroke-width: 1.5px;\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.colors.darkTextColor};\n  margin-bottom: ${p => p.theme.spacing(6)};\n`;\n\nexport const ProfileFotoBox = styled.div`\n  width: 68px;\n  height: 78px;\n\n  margin: 0 auto ${p => p.theme.spacing(3.5)};\n  position: relative;\n`;\n\nexport const Thumb = styled.div`\n  width: 68px;\n  height: 68px;\n  border-radius: ${p => p.theme.spacing(2)};\n  overflow: hidden;\n`;\nexport const UploadImage = styled.img`\n     width: 100%;\n    height: 100%;\n    overflow: hidden;\n    object-fit: cover;\n`;\n\nexport const AddButton = styled.button`\n  width: 24px;\n  height: 24px;\n\n  border: 0;\n  border-radius: ${props => props.theme.radius.s};\n  background-color: #ecedfd;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 65%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  stroke-width: 0;\n\n  --color2: ${props => props.theme.colors.white};\n  --color1: #ecedfd;\n`;\nexport const IconUserInfo = styled.svg`\n  width: 32px;\n  height: 32px;\n  stroke-width: 0;\n\n  --color2: ${props => props.theme.colors.white};\n  --color1: #ecedfd;\n`;\nexport const ImageUser = styled.img`\n  width: 68px;\n  height: 68px;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const IconPlus = styled.svg`\n  width: 10px;\n  height: 10px;\n\n  stroke: ${props => props.theme.colors.darkTextColor};\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 14px;\n  margin: 0 auto;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  border: 1px solid ${props => props.theme.violetColors.accentColor};\n  border-radius: ${props => props.theme.radius.m};\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(9.5)}\n    ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(4.5)};\n  opacity: 0.4;\n  outline: none;\n  width: 100%;\n  height: 49px;\n\n  background-color: inherit;\n  color: ${props => props.theme.colors.darkTextColor};\n\n  &:focus {\n    opacity: 1;\n  }\n  box-sizing: border-box;\n  display: inline;\n`;\n\nexport const Button = styled.button`\n  border: 0;\n  border-radius: ${props => props.theme.radius.m};\n\n  background-color: ${props => props.theme.violetColors.accentColor};\n  color: ${props => props.theme.colors.white};\n\n  font-weight: 500;\n  width: 100%;\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(4.5)};\n  margin-top: ${p => p.theme.spacing(2.5)};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${props => props.theme.violetColors.hoverViolet};\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n  position: absolute;\n  left: 18px;\n  top: 50px;\n  color: #c04d4d;\n  z-index: 100;\n`;\n\nexport const HideBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  bottom: 18%;\n  right: 18px;\n  appearance: none;\n\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const IconEye = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: #fcfcfc;\n  stroke: ${props => props.theme.colors.darkTextColor};\n  opacity: 0.4;\n  stroke-width: 1.3px;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    stroke: ${props => props.theme.violetColors.hoverViolet};\n  }\n`;\n","export const selectLoading = state => state.boards.isLoading\nexport const selectAllBoards = state => state.boards.boards\nexport const selectBoardById = state => state.boards.currentBoard"],"names":["HdWrapper","styled","_templateObject","_taggedTemplateLiteral","ProjectName","_templateObject2","p","theme","currentTheme","mainText","IconTextContainer","_templateObject3","Icon","_templateObject4","filterText","Text","_templateObject5","Button","_templateObject6","accent","Section","_templateObject7","CloseModal","_templateObject8","SectionTitle","_templateObject9","Line","_templateObject10","line","FormWraper","_templateObject11","FormTitle","_templateObject12","iconStroke","ShowAllLabel","_templateObject13","grayText","RadioBtnWrapper","Form","_templateObject14","CheckboxContainer","_templateObject15","props","priority","priorityColors","without","low","medium","high","StyledComponentsWrapper","_ref","children","_jsx","StyleSheetManager","shouldForwardProp","prop","options","filtersPriority","dispatch","useDispatch","initialValues","label","Formik","map","el","_jsxs","id","name","type","checked","value","includes","onChange","e","togglePriority","target","htmlFor","className","boardId","project","useSelector","state","boards","find","_id","title","HeaderDashboard","t","useTranslation","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","filters","useParams","customStyles","overlay","backgroundColor","content","width","height","top","left","right","bottom","marginRight","transform","concat","modalBgn","ProjectTitle","onClick","xlinkHref","sprite","Modal","isOpen","onRequestClose","style","appElement","document","getElementById","showAll","PriorityCheckboxForm","pictures_mobile_1x","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","pictures_mobile_2x","pictures_tablet_1x","pictures_tablet_2x","pictures_desktop_1x","pictures_desktop_2x","ScreensPageWrapper","screensBgn","back","selectColumns","columns","DashBoardWrapper","homeText","ButtonText","ModalCloseButton","inputBgn","StyledSvgClose","ModalWrap","radius","m","spacing","ModalShowButton","horizontScrollBgn","btnPlusStroke","AddColumnTitle","AddColumnInput","colors","shadowColor","AddColumnBtn","_ref$type","handlerClick","hoverButton","IconWhiteWrap","IconVioletWrap","StyledSvgWhitePlus","plusIconFill","StyledSvgDarkPlus","plusIconStroke","AddColumnModal","onCloseModal","onSubmit","evt","preventDefault","inputValue","trim","newColumn","dashboardId","addColumn","toast","icon","duration","toastStyles","error","errorToaster","message","placeholder","autoFocus","AddColumnButton","column","isModalOpen","setIsModalOpen","closeModal","_Fragment","overlayClassName","closeTimeoutMS","ColumnListWrapper","horizontScroll","l","ColumnListStyled","ColumnButtonwrapper","ColumnWrapper","ColumnHeader","taskBgn","ColumnTitle","EditBlock","EditButton","EditSVG","getColor","AddCardWrapper","AddCardContainer","AddCardHeader","AddCardTextCont","AddCardTitle","Field","AddCardDescription","AddCardColorCont","violetColors","accentColor","bgColor","darkTextColor","AddCardLabelText","AddCardInputColor","AddCardContMark","AddCardBtn","AddCardContCal","AddCardOptionCont","AddCardTextCal","_templateObject16","AddCardSvgContainer","_templateObject17","AddCardButtonSvg","_templateObject18","AddCardSvgButtonText","_templateObject19","AddAnotherCard","_templateObject20","AddCardSvgClose","_templateObject21","CalendarContainer","_templateObject22","DayText","_templateObject23","BtnOpenCal","_templateObject24","CustomCalendarContainer","_templateObject25","CardListStyled","verticalScroll","verticalScrollBgn","selectTasks","tasks","createSelector","filter","toLowerCase","TaskContainer","PrioritySeeContainer","MainContainer","Title","TextContainer","DescriptionContainer","MenuCard","CardPriorityDeadline","ToDoContainer","SubTitle","greySubtitle","PriorityContainer","CirclePriority","TextPriority","DeadlineContainer","TextDate","ButtonsContainer","Bell","SvgBell","Buttons","Btn","Svg","EditCardWrapper","EditCardContainer","EditCardHeader","EditCardTextCont","EditCardTitle","EditCardDescription","EditCardColorCont","EditCardLabelText","EditCardInputColor","EditCardContMark","EditCardBtn","EditCardContCal","EditCardOptionCont","EditCardTextCal","EditCardSvgContainer","EditCardButtonSvg","EditCardSvgButtonText","EditCardSvgClose","DatePickerCalendar","DatePicker","headerBgn","white","DatePickerNew","selectedDate","handleDateChange","EditCard","date","_ref$task","task","description","deadline","Date","startDate","_useState3","_useState4","isCalendarOpen","setCalendarOpen","_useState5","_useState6","setSelectedDate","isToday","today","getDate","getMonth","getFullYear","currentDate","formattedDate","format","values","editCard","taskId","console","log","editTask","CLoseButton","as","selected","dateFormat","ChangeButtonCard","StyledSVGChangeColumn","ChangeWrapper","ChangeButton","StyledSVGChange","ChangeColumnModal","Id","filteredColumns","board","ChangeColumnButton","TaskCard","isDeadLinePassed","toDeleteTask","deleteTask","formattedDeadlineDate","day","month","String","padStart","year","formatDeadlineDate","Toaster","selectFiltersPriority","CardList","columnId","filtColumns","formattedPriority","charAt","toUpperCase","slice","useEffect","fetchTitle","filteredTasks","priorityCondition","length","columnCondition","AddCard","setIsCalendarOpen","toOpenCalendar","getFormattedDate","_ref2","resetForm","newCard","addTask","_ref3","setFieldValue","EditColumnModal","setTitle","newTitle","editColumn","event","EditColumnButton","ColumnListItem","deleteColumn","ColumnList","getAllColumns","ScreensPage","selectBoardById","backgroundURL","DashBoard","IconClose","TitleModal","ProfileFotoBox","Thumb","UploadImage","AddButton","s","IconUser","IconUserInfo","IconPlus","StyledForm","StyledLabel","StyledField","hoverViolet","ErrMessage","ErrorMessage","HideBtn","IconEye","selectAllBoards","currentBoard"],"sourceRoot":""}