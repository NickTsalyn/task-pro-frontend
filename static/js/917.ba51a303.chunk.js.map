{"version":3,"file":"static/js/917.ba51a303.chunk.js","mappings":"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","sources":["components/Header/BurgerMenu/BurgerMenu.styled.js","components/Sidebar/Logo/Logo.styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/BoardListItem/BoardListItem.styled.js","components/boardModals/ModalsBase/BoardModalBase.styled.jsx","images/mini/index.js","components/boardModals/ModalsBase/BoardModalBase.jsx","components/Sidebar/BoardListItem/BoardListItem.jsx","components/Sidebar/BoardList/BoardList.styled.js","components/Sidebar/BoardList/BoardList.jsx","components/boardModals/addBoardButton/addBoardButton.styled.jsx","components/boardModals/addBoardButton/addBoardButton.jsx","components/boardModals/addBoard.jsx","components/Sidebar/SidebarNav/SidebarNav.styled.js","components/NeedHelpModal/NeedHelpModal.styled.jsx","redux/auth/needHelpRequest.jsx","components/NeedHelpModal/NeedHelpModal.jsx","components/HelpApp/HelpApp.styled.js","components/HelpApp/HelpApp.jsx","components/Sidebar/SidebarNav/SidebarNav.jsx","components/Sidebar/Sidebar.styled.js","components/Sidebar/Sidebar.jsx","components/Header/BurgerMenu/BurgerMenu.jsx","components/Header/Header.styled.js","components/Header/ThemeDropDown/ThemeDropDown.jsx","components/Header/UserInfo/UserInfo.styled.js","components/EditProfileModal/EditProfileModal.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","Pages/HomePage.styled.js","Pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BurgerMenuWrapper = styled.div`\n  display: flex;\n  @media screen and (max-width: 375px) {\n    padding-left: ${p => p.theme.spacing(5)};\n  }\n`;\n\nexport const StyledBurgerMenu = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: auto 0;\n  margin-right: auto;\n  padding: 0;\n  position: relative;\n  display: ${props => (props.isOpen ? 'display: flex;' : '')};\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const StyledSVGBurger = styled.svg`\n  stroke: rgb(22, 22, 22);\n  width: 100%;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLogoWrapper = styled.div`\n  padding-bottom: 70px;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n\n  @media screen and (min-width: 1440px) {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const StyledLogoIcon = styled.span`\n  display: flex;\n  border-radius: ${p => p.theme.radius.m};\n  width: 32px;\n  height: 32px;\n  background-color: #ecedfd;\n`;\nexport const StyledLogoText = styled.p`\n  display: flex;\n  margin: auto 0;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #ffffff;\n`;\n\nexport const StyledSVGLogo = styled.svg`\n  fill: ${p => p.theme.violetColors.accentColor};\n`;\n","import sprite from '../../../images/icons.svg';\nimport {\n  StyledLogoIcon,\n  StyledLogoText,\n  StyledLogoWrapper,\n  StyledSVGLogo,\n} from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <StyledLogoWrapper>\n      <StyledLogoIcon>\n        <StyledSVGLogo>\n          <use xlinkHref={`${sprite}#icon-logo2`}></use>\n        </StyledSVGLogo>\n      </StyledLogoIcon>\n\n      <StyledLogoText>Task Pro</StyledLogoText>\n    </StyledLogoWrapper>\n  );\n};\n","\nimport styled from \"styled-components\";\n\nexport const StyledBoardList = styled.div`\n  display: flex;\n  padding: 22px 18px 22px 14px;\n  margin: 0 auto;\n\n  background-color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255, 0.2)' : 'transparent'};\n`;\n\nexport const StyledBoardItem = styled.button`\n  border: none;\n  background: transparent;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: start;\n  padding: 0;\n  color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255)' : 'rgba(255, 255, 255, 0.5)'};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledSVGPensil = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledSVGIcon = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 1);\n  padding-right: ${p => p.theme.spacing(2)};\n\n  width: 18px;\n  height: 18px;\n`;\n\nexport const StyledSVGTrash = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledBoardListBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  display: flex;\n\n  margin: 0;\n  padding: 0;\n`;\nexport const StyledBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: auto;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`;\n","import styled from 'styled-components'\nimport Modal from 'react-modal'\n\nexport const StyledModal = styled(Modal)`\n    position: relative;\n    width: 100%;\n    height: fit-content;\n    max-height: 433px;\n    max-width: 350px;\n    background-color: ${props => props.theme.colors.white};\n    border-radius: 8px;\n    box-shadow: 0px 4px 16px 0px ${props => props.theme.colors.greyIconColor};\n    transition: transform 0.3s;\n`\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    padding: 24px;\n`\n\nexport const CloseButton = styled.button`\n    position: absolute;\n    background-color: transparent;\n    top: 14px;\n    right: 14px;\n    width: 20px;\n    height: 20px;\n    border: none;\n`\n\nexport const CloseSVG = styled.svg`\n    width: 18px;\n    height: 18px;\n    stroke: ${props => props.theme.colors.darkTextColor};\n`\n\nexport const BigHeader = styled.p`\n    color: ${props => props.theme.colors.darkTextColor};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    letter-spacing: 0.02em;\n`\n\nexport const TitleInput = styled.input`\n    margin: 24px 0;\n    height: 49px;\n    max-width: 302px;\n    background-color: transparent;\n    border: 1px ${props => props.theme.violetColors.accentColor} solid;\n    border-radius: 8px;\n    padding: 0 18px;\n    color: ${props => props.theme.colors.darkTextColor};\n    font-family: inherit;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    outline: none;\n    opacity: 0.4;\n\n    &::placeholder {\n        color: ${props => props.theme.colors.darkTextColor};\n        font-family: inherit;\n        line-height: 21px;\n        letter-spacing: 0.02em;\n    }\n\n    &:hover, &:focus {\n        opacity: 1;\n    }\n`\n\nexport const SmallHeader = styled.p`\n    color: ${props => props.theme.colors.darkTextColor};\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    letter-spacing: -2%;\n    padding-bottom: 14px;\n`\n\nexport const List = styled.label`\n    width: 270px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    column-gap: 4px;\n    row-gap: 4px;\n    margin-bottom: 24px;\n`\n\nexport const Radio = styled.input`\n    display: none;\n\n    &:checked + svg {\n        stroke: ${props => props.theme.colors.darkTextColor};\n        cursor: default;\n    }\n\n    &:checked + span {\n        border-color: ${props => props.theme.colors.darkTextColor};\n        cursor: default;\n    }\n`\n\nexport const IconSVG = styled.svg`\n    display: inline-block;\n    vertical-align: middle;\n    stroke: ${props => props.theme.colors.greyIconColor};\n    cursor: pointer;\n    fill: transparent;\n    width: 18px;\n    height: 18px;\n`\n\nexport const Pic = styled.span`\n    display: inline-block;\n    border: 1px transparent solid;\n    background-color: transparent;\n    z-index: 10;\n    cursor: pointer;\n    border-radius: 8px;\n    width: 28px;\n    height: 28px;\n\n    & > img {\n        border-radius: 6px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display: flex;\n    max-width: 100%;\n    height: 49px;\n    color: ${props => props.theme.colors.white};\n    border-radius: 8px;\n    border-color: transparent;\n    font-weight: 500;\n    background-color: ${props => props.theme.violetColors.accentColor};\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    column-gap: 9px;\n    margin-top: 16px;\n\n    &:hover {\n        background-color: ${props => props.theme.violetColors.hoverViolet};\n    }\n\n    & > span {\n        display: flex;\n        width: 28px;\n        height: 28px;\n        background-color: ${props => props.theme.colors.white};\n        border-radius: 8px;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & > span > svg {\n        width: 14px;\n        height: 14px;\n        stroke: ${props => props.theme.colors.darkTextColor};\n    }\n`","import p0 from './mini_0.webp'\nimport p1 from './mini_1.webp'\nimport p2 from './mini_2.webp'\nimport p3 from './mini_3.webp'\nimport p4 from './mini_4.webp'\nimport p5 from './mini_5.webp'\nimport p6 from './mini_6.webp'\nimport p7 from './mini_7.webp'\nimport p8 from './mini_8.webp'\nimport p9 from './mini_9.webp'\nimport p10 from './mini_10.webp'\nimport p11 from './mini_11.webp'\nimport p12 from './mini_12.webp'\nimport p13 from './mini_13.webp'\nimport p14 from './mini_14.webp'\nimport p15 from './mini_15.webp'\n\nexport const pictures_mini = { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import React, { useState } from 'react'\nimport sprite from 'images/icons.svg'\nimport { StyledModal, Form, CloseButton, CloseSVG, BigHeader, TitleInput, SmallHeader, List, Radio, IconSVG, Pic, SubmitButton } from './BoardModalBase.styled'\nimport {pictures_mini} from 'images/mini/index'\n\nexport const BoardModalBase = ({ isModalOpen, info, onCloseModal, action, SubmitForm }) => {\n    const [title, setTitle] = useState(info.title)\n    const [iconURL, setIcon] = useState(info.iconURL)\n    const [backgroundURL, setBackground] = useState(info.backgroundURL)\n\n    const Icons = [{value: 'icon-Project'}, {value: 'icon-star-04'}, {value: 'icon-loading-03'}, {value: 'icon-puzzle-piece-02'},\n                   {value: 'icon-container'}, {value: 'icon-lightning-02'}, {value: 'icon-colors'}, {value: 'icon-hexagon-01'}]\n    \n    const Backgrounds = [{value: 'p0'}, {value: 'p1'}, {value: 'p2'}, {value: 'p3'},\n                        {value: 'p4'}, {value: 'p5'}, {value: 'p6'}, {value: 'p7'},\n                        {value: 'p8'}, {value: 'p9'}, {value: 'p10'}, {value: 'p11'},\n                        {value: 'p12'}, {value: 'p13'}, {value: 'p14'}, {value: 'p15'}]\n\n    function close() {\n        onCloseModal()\n        setTitle(info.title)\n        setIcon(info.iconURL)\n        setBackground(info.backgroundURL)\n    }\n\n    function sub(event) {\n        event.preventDefault()\n        SubmitForm({title, iconURL, backgroundURL})\n        setTitle(info.title)\n        setIcon(info.iconURL)\n        setBackground(info.backgroundURL)\n    }\n\n    function handleChange(e) {\n        setTitle(e.target.value)\n    }\n\n    return (\n        <StyledModal\n            isOpen={isModalOpen}\n            overlayClassName={'modal-overlay'}\n            onRequestClose={close}\n            ariaHideApp={false}\n        >\n            <CloseButton onClick={close}>\n                <CloseSVG><use xlinkHref={`${sprite}#icon-x-close`}></use></CloseSVG>\n            </CloseButton>\n\n            <Form onSubmit={event => sub(event)}>\n                <BigHeader>{action==='add' ? 'New' : 'Edit'} board</BigHeader>\n\n                <TitleInput\n                    id=\"title\"\n                    name='title'\n                    placeholder='Title'\n                    value={title}\n                    onChange={e => handleChange(e)}\n                    required\n                />\n\n                <SmallHeader>Icons</SmallHeader>\n                <List>\n                    {Icons.map((Icon, index) => (\n                        <label key={index}>\n                            <Radio \n                                type=\"radio\" \n                                name='icon'\n                                value={Icon.value}\n                                checked={Icon.value === iconURL ? true : false}\n                                onChange={() => setIcon(Icon.value)}>\n                            </Radio>\n                            <IconSVG aria-hidden=\"true\"><use xlinkHref={`${sprite}#${Icon.value}`}></use></IconSVG>\n                        </label>\n                    ))}\n                </List>\n\n                <SmallHeader>Background</SmallHeader>\n                <List>\n                    {Backgrounds.map((Background, index) => (\n                        <label key={index}>\n                            <Radio\n                                type=\"radio\" \n                                name='background'\n                                value={Background.value}\n                                checked={Background.value === backgroundURL ? true : false}\n                                onChange={() => setBackground(Background.value)}>\n                            </Radio>\n                            <Pic>\n                                <img alt='icon_option' src={pictures_mini[`${Background.value}`]}></img>\n                            </Pic>\n                        </label>\n                    ))}\n                </List>\n\n                <SubmitButton type=\"submit\">\n                    <span>\n                        <svg><use xlinkHref={`${sprite}#icon-plus`}></use></svg>\n                    </span>\n                    {action==='add' ? 'Create' : 'Edit'}\n                </SubmitButton>\n            </Form>\n        </StyledModal>\n    )\n  }","import sprite from '../../../images/icons.svg';\nimport {\n  StyledBoardItem,\n  StyledBoardList,\n  StyledBoardListBtn,\n  StyledBtnWrapper,\n  StyledSVGIcon,\n  StyledSVGPensil,\n  StyledSVGTrash,\n} from './BoardListItem.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard, editBoard } from 'redux/boards/operations';\nimport { BoardModalBase } from 'components/boardModals/ModalsBase/BoardModalBase';\nimport { Link } from 'react-router-dom';\n\nexport const BoardListItem = ({ board, isActive, onClick }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setOpenModal] = useState(false);\n\n  function CloseModal() {\n    setOpenModal(false);\n  }\n\n  function OpenModal() {\n    setOpenModal(true);\n  }\n\n  function SubmitForm(info) {\n    const { _id } = board;\n    dispatch(editBoard({ _id, info }));\n    setOpenModal(false);\n  }\n\n  function HandleDelete() {\n    dispatch(deleteBoard(board._id));\n  }\n\n  return (\n    <StyledBoardList isActive={isActive} onClick={onClick}>\n      {/* <StyledBoardItem to={`/home/${board._id}`}></StyledBoardItem> */}\n      <StyledSVGIcon>\n        <use xlinkHref={`${sprite}#${board.iconURL}`}></use>\n      </StyledSVGIcon>\n      <StyledBoardItem\n        type=\"button\"\n        isActive={isActive}\n        onClick={onClick}\n        // onClick={()=> dispatch(getBoardById(boardId))}\n      >\n        <Link to={`/home/${board._id}`}>{board.title}</Link>\n      </StyledBoardItem>\n\n      <StyledBtnWrapper isActive={isActive} onClick={onClick}>\n        <StyledBoardListBtn onClick={OpenModal} type=\"button\">\n          <StyledSVGPensil>\n            <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n          </StyledSVGPensil>\n        </StyledBoardListBtn>\n\n        <StyledBoardListBtn onClick={HandleDelete} type=\"button\">\n          <StyledSVGTrash>\n            <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n          </StyledSVGTrash>\n        </StyledBoardListBtn>\n      </StyledBtnWrapper>\n\n      <BoardModalBase\n        isModalOpen={isModalOpen}\n        info={board}\n        onCloseModal={CloseModal}\n        action={'edit'}\n        SubmitForm={SubmitForm}\n      />\n    </StyledBoardList>\n  );\n};\n","import styled from 'styled-components';\nimport '../../../index.css';\n\nexport const StyledBoardListWrapper = styled.ul`\n  height: 126px;\n  overflow-y: scroll;\n\n  margin: 0 -14px;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n    height: 60px;\n    border-radius: 4px 0 0 4px;\n    margin-left: ${p => p.theme.spacing(3.5)};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #fff;\n    border-radius: 4px 0 0 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0 -24px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 40px;\n  }\n`;\n","import { BoardListItem } from '../BoardListItem/BoardListItem';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBoards } from 'redux/boards/operations';\nimport { selectAllBoards } from 'redux/boards/selectors';\nimport { StyledBoardListWrapper } from './BoardList.styled';\n\nexport const BoardList = () => {\n  const dispatch = useDispatch()\n  const boards = useSelector(selectAllBoards)\n  // console.log(boards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const [activeItem, setActiveItem] = useState(null);\n\n  const handleBoardClick = board => {\n    setActiveItem(board);\n  };\n  return (\n    <>\n      {boards.length > 0 && (\n        <StyledBoardListWrapper>\n          {boards.map(board => (\n            <li\n              key={board._id}\n              >\n              <BoardListItem\n                board={board}\n                isActive={board === activeItem}\n                onClick={() => handleBoardClick(board)}\n              />\n            </li>\n          ))}\n        </StyledBoardListWrapper>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components'\n\nexport const StyledSVG = styled.svg`\n  stroke: ${props => props.theme.colors.white};\n  width: 20px;\n  height: 20px;\n`\n\nexport const StyledButton = styled.span`\n  margin-left: 40px;\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color: rgb(184, 188, 253);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n\n  &:hover {\n    background-color: rgba(151, 156, 234, 1);\n  }\n`\n\nexport const StyledCreateBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 100%;\n    font-weight: 500;\n    line-height: 1.5;\n    text-align: start;\n\n    color: rgb(255, 255, 255);\n    padding: 0;\n    display: flex;\n`","import React from 'react'\nimport sprite from 'images/icons.svg'\nimport { StyledCreateBtn, StyledButton, StyledSVG } from './addBoardButton.styled'\n\nexport const AddBoardButton = ({ onClick }) => {\n    return (\n        <StyledCreateBtn onClick={onClick}>\n          Create a new board\n          <StyledButton>\n            <StyledSVG>\n                <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </StyledSVG>\n          </StyledButton>\n        </StyledCreateBtn>\n    )\n  }","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom'\nimport { AddBoardButton } from './addBoardButton/addBoardButton'\nimport { BoardModalBase } from './ModalsBase/BoardModalBase'\nimport { addBoard } from 'redux/boards/operations'\n\nexport const AddBoard = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const [isModalOpen, setOpenModal] = useState(false)\n\n    function CloseModal() {\n        setOpenModal(false)\n    }\n\n    function OpenModal(event) {\n        event.stopPropagation()\n        setOpenModal(true)\n    }\n\n    function SubmitForm(info) {\n        console.log(info)\n        dispatch(addBoard(info))\n        setOpenModal(false)\n        navigate(`/home/${info.title.replaceAll(' ', '')}`)\n    }\n\n    return (\n        <>\n            <AddBoardButton onClick={(event) => OpenModal(event)} />\n            <BoardModalBase isModalOpen={isModalOpen} info={{ title: '', iconURL: 'icon-Project', backgroundURL: '0' }} onCloseModal={CloseModal} action={'add'} SubmitForm={SubmitForm}/>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 86%;\n`;\n\nexport const StyledText = styled.p`\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.5);\n  padding-bottom: ${p => p.theme.spacing(2)};\n  letter-spacing: -0.02em;\n`;\n\nexport const StyledCreateWrapper = styled.div`\n  padding: ${p => p.theme.spacing(3.5)} 0;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: ${p => p.theme.spacing(10)};\n`;\nexport const StyledLogoutBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 100%;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  color: rgb(255, 255, 255);\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(3.5)};\n  align-items: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const StyledSVGPlus = styled.svg`\n  fill: ${p => p.theme.violetColors.accentColor};\n  stroke: rgb(255, 255, 255);\n  width: 20px;\n  height: 20px;\n  padding: 8px 10px;\n`;\n\nexport const StyledSVGLogout = styled.svg`\n  fill: transparent;\n  stroke: white;\n\n  width: 32px;\n  height: 32px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.darkTextColor};\n    opacity: 0.5;\n  }\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  gap: 24px;\n`;\n","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  \n   width:100%;\n  max-width: 335px; \n  min-width:320px;\n  height: 355px;\n  background: #FCFCFC;\n  border-radius: 8px;\n  border: none;\n  padding: 24px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n  \n  @media (min-width: 768px) {\n    width:400px;   \n  \n  }\n  @media (min-width: 335px) {\n    width:335px;   \n  \n  }\n`;\n \n\nexport const ModalTitle = styled.h2`\nfont-family: Poppins;\nfont-size: 18px;\nfont-weight: 500;\nline-height: 27px;\nletter-spacing: -0.02em;\ntext-align: left;\nmargin-bottom:24px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  width:18px;\n  height:18px;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding:0;\n`;\n\nexport const InputWrapper = styled.div`\n\n`;\n\nexport const Input = styled.input`\n\n\nwidth: 100%;\nheight: 49px;\n padding: 14px, 14px, 14px, 18px;\npadding-left:18px;\npadding-right:14px;\npadding-top:14px;\npadding-bottom:14px;\nborder: 1px solid #5255BC;\nborder-radius: 8px;\nbox-sizing: border-box;\nopacity: 0.4px;\nmargin-bottom: 14px;\n\n\nfont-family: Poppins;\nfont-size: 14px;\nfont-weight: 400;\nline-height: 21px;\nletter-spacing: -0.02em;\ntext-align: left;\n\n`;\n\nexport const CommentInput = styled.textarea`\n  width: 100%;\n  height: 120px;\n  padding: 14px;\n  padding-left:18px;\n  \n  border: 1px solid #5255BC;\n  border-radius: 8px;\n  box-sizing: border-box;\n  resize: none;\n\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  text-align: left;\nmargin-bottom:24px;\n`;\n\nexport const SendButton = styled.button`\n  width: 100%;  \n  color: #FFFFFF;\n  padding: 14px, 126px, 14px, 126px;\n  padding-top:14px;\n  padding-bottom:14px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  background: rgba(82, 85, 188, 1);\n\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  text-align: center;\n`;\nexport const StyledSvgClose = styled.svg`\n  fill: ${props => props.theme.colors.darkTextColor};\n  stroke: ${props => props.theme.colors.darkTextColor};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n  @media (min-width: 768px) {\n    width: 18px;\n    height: 18px;  \n  \n  }\n  `;","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://task-pro-backend-a1c2.onrender.com';\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nexport const sendHelpRequest =  createAsyncThunk(\n    'user/needhelp',\n    async (needHelpData, thunkAPI) => {\n      console.log(\"data In CAT\",needHelpData)\n      try {\n        const res = await axios.post('/api/users/needHelp', needHelpData);\n        setAuthHeader(res.data.token);\n        console.log(\"result\",res.data)\n        return res.data;\n      } catch (error) {\n        console.log(\"error\",error)\n        return thunkAPI.rejectWithValue(error.response.data.message);\n      }\n    }\n  );","import Modal from 'react-modal';\nimport sprite from '../../images/icons.svg';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ModalWrapper, CloseButton, ModalTitle, Input, CommentInput, SendButton, StyledSvgClose } from './NeedHelpModal.styled';\nimport { sendHelpRequest } from '../../redux/auth/needHelpRequest.jsx'\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Please enter a valid email address')\n    .required(''),\n  comment: Yup.string()\n    .required('')\n});\n\n export const NeedHelpModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const needHelpData={\n    email:email,\n    message:comment\n  };\n  \n  const handleSend = async () => {\n    \n    console.log(\"data\",needHelpData)\n    dispatch(sendHelpRequest(needHelpData))\n      .then(() => {\n        console.log('Request sent successfully');\n        onClose(); \n      })\n      .catch((error) => {\n        console.error('Error sending request:', error);\n      });\n   \n  }\n   \n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal-content\"\n      onRequestClose={onClose}\n      ariaHideApp={false}\n    >\n      <ModalWrapper>\n        <CloseButton onClick={onClose}>\n          <StyledSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </StyledSvgClose>\n        </CloseButton>\n        <ModalTitle>Need help</ModalTitle>\n        <Formik\n          initialValues={{ email: '', comment: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSend}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n                <Input type=\"email\" name=\"email\" placeholder=\"Email address\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\n                <CommentInput type=\"text\" name=\"comment\" placeholder=\"Comment\" value={comment} onChange={(e) => setComment(e.target.value)} />\n                <ErrorMessage name=\"comment\" component=\"div\" className=\"error-message\" />\n              <SendButton type=\"submit\" onClick={handleSend}>Send</SendButton>\n            </Form>\n          )}\n        </Formik>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n\n","import styled from \"styled-components\";\n\n export const HelpContainer = styled.div` \n box-sizing: border-box; \n display:flex;\n flex-wrap: wrap;\n width: 197px;\n  border: 1px solid #9092D6;\n  padding: 14px;\n  /* position: relative; */\n  background: #9092D6;\n  border-radius: 8px;\n  \n  @media (min-width: 768px) {\n    width: 212px;  \n    padding: 20px;\n  }\n  `;\n  \nexport const HelpImage = styled.img`\n  max-width: 54px;\n  height: 78px;\n  margin-bottom:14px;\n margin-right:100px\n\n`;\n\nexport const HelpText = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  color:#FFFFFF;\n  margin-bottom:18px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  };\n`;\n\nexport const HelpButton = styled.button`\n  width: 20px;\n  height: 20px;\n  display:flex;\n  border-radius: 50%;\n  border:none;\n  color: #FFFFFF;\n  cursor: pointer;\n  margin-right: 11px;\n  padding:0;\n  position: relative; \n  background: #9092D6;\n  `;\n  // border: 1.8px solid #161616;\n  \n  export const ButtonText= styled.div`\n  display:flex;  \n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  cursor: pointer;\n  color: #FFFFFF;\n  `;\n  \n  export const IconContainer = styled.div`\n  font-size: 1.7em;\n  \n  position: absolute;\n  top: 0%;\n  left: 0%;\n  transform: translate(-10%, -10%); \n  `;\n\n export const TaskPro = styled.span`\n  color: #5255BC; \n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  };\n\n`;\n\n","import React, { useState } from 'react';\nimport { NeedHelpModal } from 'components/NeedHelpModal/NeedHelpModal.jsx';\nimport { HelpContainer, HelpImage, HelpButton, HelpText, ButtonText, IconContainer, TaskPro} from './HelpApp.styled.js';\nimport flowerImage from './../../images/flower.png';\nimport { CiCircleQuestion } from \"react-icons/ci\";\n\nconst HelpApp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  \n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HelpContainer>\n      <HelpImage src={flowerImage} alt=\"flower\" />\n      <HelpText>\n        If you need help with <TaskPro >TaskPro</TaskPro>, check out our support resources or reach out to our customer support team.\n      </HelpText>\n      <HelpButton onClick={openModal}>\n        <IconContainer>\n          <CiCircleQuestion/>\n        </IconContainer>\n      </HelpButton>\n     \n      <ButtonText onClick={openModal}>Need help?</ButtonText>\n\n      {isModalOpen && \n        <NeedHelpModal \n          isOpen={isModalOpen}\n          onClose={closeModal}\n        />\n      }\n    </HelpContainer>\n  );\n}; \nexport default HelpApp;\n\n","// needhelp\n// import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport sprite from '../../../images/icons.svg';\nimport { BoardList } from '../BoardList/BoardList';\nimport { AddBoard } from \"components/boardModals/addBoard\";\nimport {\n  ItemsWrapper,\n  SidebarWrapper,\n  StyledCreateWrapper,\n  StyledLogoutBtn,\n  StyledSVGLogout,\n  StyledText,\n} from './SidebarNav.styled';\nimport { logout } from 'redux/auth/operations';\nimport HelpApp from 'components/HelpApp/HelpApp.jsx';\n\nexport const SidebarNav = () => {\n  const dispatch = useDispatch();\nconst navigate = useNavigate()\n\n  const handleClick = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  const { t } = useTranslation('global');\n  return (\n    <SidebarWrapper>\n      <StyledText>{t('screenPage.static.my-boards')}</StyledText>\n      <StyledCreateWrapper>\n        <AddBoard />\n      </StyledCreateWrapper>\n      <BoardList />\n      <ItemsWrapper>\n        <HelpApp />\n        <StyledLogoutBtn type=\"button\" onClick={handleClick}>\n          <StyledSVGLogout>\n            <use xlinkHref={`${sprite}#icon-login`}></use>\n          </StyledSVGLogout>\n          {t('screenPage.static.logout')}\n        </StyledLogoutBtn>\n      </ItemsWrapper>\n    </SidebarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DarkBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(21, 21, 21, 0.3);\n  z-index: 10;\n`;\n\nexport const StyledSidebar = styled.aside`\n  width: 197px;\n  background-color: ${p => p.theme.violetColors.accentColor};\n  padding: 14px;\n  z-index: 99;\n  position: absolute;\n  left: 0;\n  height: 100vh;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  @media screen and (min-width: 768px) {\n    width: 212px;\n    padding: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    z-index: 0;\n    position: static;\n    top: 0;\n    left: 0;\n  }\n`;\n","import { Logo } from './Logo/Logo';\nimport { SidebarNav } from './SidebarNav/SidebarNav';\nimport { StyledSidebar } from './Sidebar.styled';\nimport { forwardRef } from 'react';\n\nexport const Sidebar = forwardRef((props, ref) => {\n  return (\n    <StyledSidebar ref={ref}>\n      <Logo />\n      <SidebarNav />\n    </StyledSidebar>\n  );\n});\n","import { useEffect, useRef, useState } from 'react';\nimport sprite from '../../../images/icons.svg';\nimport {\n  BurgerMenuWrapper,\n  StyledBurgerMenu,\n  StyledSVGBurger,\n} from './BurgerMenu.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DarkBackground } from 'components/Sidebar/Sidebar.styled';\n\nexport const BurgerMenu = () => {\n  const [isOpen, setOpen] = useState(false);\n  const burgerMenuRef = useRef(null);\n  const sidebarRef = useRef(null);\n\n  const hendleOpenSidebar = () => {\n    console.log('Opening sidebar');\n    setOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    console.log('burgerMenuRef:', burgerMenuRef.current);\n    console.log('sidebarRef:', sidebarRef.current);\n    const handleClickClose = event => {\n      if (\n        burgerMenuRef.current &&\n        !burgerMenuRef.current.contains(event.target) &&\n        sidebarRef.current &&\n        !sidebarRef.current.contains(event.target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickClose);\n\n    return () => document.removeEventListener('click', handleClickClose);\n  }, [burgerMenuRef, sidebarRef]);\n\n  return (\n    <BurgerMenuWrapper>\n      <StyledBurgerMenu\n        type=\"button\"\n        onClick={hendleOpenSidebar}\n        isOpen={isOpen}\n        ref={burgerMenuRef}\n      >\n        <StyledSVGBurger>\n          <use xlinkHref={`${sprite}#icon-menu-01`}></use>\n        </StyledSVGBurger>\n      </StyledBurgerMenu>\n      {isOpen && (\n        <div>\n          <DarkBackground />\n          <Sidebar ref={sidebarRef} />\n        </div>\n      )}\n    </BurgerMenuWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  width: 320px;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 ${p => p.theme.spacing(5)};\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 0 ${p => p.theme.spacing(8)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1180px;\n    height: 68px;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const StyledHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyledHeaderItemWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n","// import { hover } from '@testing-library/user-event/dist/hover';\nimport React from 'react';\nimport Select from 'react-select';\nimport '../../Header/ThemeDropDown/theme.css';\n\nconst options = [\n  { value: 'Light', label: 'Light' },\n  { value: 'Dark', label: 'Dark' },\n  { value: 'Violet', label: 'Violet' },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'none',\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    padding: '14px 0 ',\n    '@media only screen and (min-width: 1440px)': {\n      padding: '18px 0',\n    },\n  }),\n\n  dropdownIndicator: provided => ({\n    ...provided,\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: 'rgb(22, 22, 22)',\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    fontWeight: '500',\n    fontSize: '14px',\n    letterSpacing: '-0.02em',\n    color: 'rgba(22, 22, 22, 0.8)',\n  }),\n};\n\nexport const ThemeDropDown = () => {\n  const handleChangeTheme = selectedOption => {\n    // i18n.changeLanguage(selectedOption.value);\n  };\n  return (\n    <Select\n      options={options}\n      styles={customStyles}\n      onChange={handleChangeTheme}\n      placeholder=\"Theme\"\n      classNamePrefix=\"custom-select\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledUserInfo = styled.div`\n  height: 32px;\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  margin: auto 0;\n\n  margin-left: ${p => p.theme.spacing(3.5)};\n\n  @media screen and (min-width: 1440px) {\n  \n    padding: 0 ${p => p.theme.spacing(6)} 0 0;\n \n  }\n`;\n\nexport const StyledUserBtn = styled.button`\n  width: 32px;\n  height: 32px;\n  background-color: transparent;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  padding: 0;\n`;\n\nexport const StyledUserName = styled.p`\n  color: ${p => p.theme.colors.darkTextColor};\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  margin: auto 0;\n`;\n\nexport const StyledUserPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radius.m};\n  background-color: violet;\n`;\n","import React, { useState } from 'react';\nimport {\n  AddButton,\n  Button,\n  CLoseButton,\n  ErrMessage,\n  HideBtn,\n  IconClose,\n  IconEye,\n  IconPlus,\n  IconUser,\n  // ImageUser,\n  ModalWrap,\n  ProfileFotoBox,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n  TitleModal,\n} from './EditProfileModal.styled.js';\nimport sprite from '../../images/icons.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst editFormSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short').max(30, 'To long'),\n  email: Yup.string().email('Please enter a valid email address'),\n\n  password: Yup.string()\n    .min(5, 'The password should be at least 5 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const EditProfileModal = ({ onCloseModal }) => {\n  // const dispatch = useDispatch();\n  // const handleSubmit = objCredentials => {\n  //   return dispatch();\n  // };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // const Upload = () => (\n  //   <label>\n  //     <input type=\"file\" />\n  //   </label>\n  // );\n\n  return (\n    <ModalWrap>\n      <TitleModal>Edit profile</TitleModal>\n\n      <CLoseButton onClick={onCloseModal}>\n        <IconClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </IconClose>\n      </CLoseButton>\n      <ProfileFotoBox>\n        <IconUser>\n          <use xlinkHref={`${sprite}#icon-user`}></use>\n        </IconUser>\n        {/* зробити рендер за умовою */}\n        {/* <ImageUser src={userAvatar} alt=\"user-avatar\" /> */}\n        <AddButton>\n          <IconPlus>\n            <use xlinkHref={`${sprite}#icon-plus`}></use>\n          </IconPlus>\n        </AddButton>\n      </ProfileFotoBox>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={editFormSchema}\n        // onSubmit={(values, actions) => {\n        //   handleSubmit(values);\n        //   actions.resetForm();\n        // }}\n      >\n        <StyledForm>\n          <StyledLabel htmlFor=\"email\">\n            <StyledField\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter username\"\n            ></StyledField>\n            <ErrMessage component=\"span\" name=\"name\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"email\">\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n            ></StyledField>\n            <ErrMessage component=\"span\" name=\"email\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"password\">\n            <StyledField\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Enter password\"\n            ></StyledField>\n            <ErrMessage component=\"span\" name=\"password\" />\n            <HideBtn type=\"button \" onClick={onShowPassword}>\n              <IconEye>\n                <use xlinkHref={`${sprite}#icon-eye`}></use>\n              </IconEye>\n            </HideBtn>\n          </StyledLabel>\n\n          <Button type=\"submit\">Send</Button>\n        </StyledForm>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import {\n  StyledUserInfo,\n  StyledUserName,\n  StyledUserPhoto,\n  StyledUserBtn,\n} from './UserInfo.styled';\nimport photo from '../../../img/welcome.png';\nimport { useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditProfileModal } from 'components/EditProfileModal/EditProfileModal';\nimport '../../EditProfileModal/EditModal.css';\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n\nconst userName = useSelector(state => state.auth.user);\nconst [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <StyledUserInfo>\n      <StyledUserName>{userName.name}</StyledUserName>\n      <StyledUserBtn type=\"button\" onClick={openModal}>\n        <StyledUserPhoto src={photo} alt=\"user_photo\" width={32} height={32} />\n      </StyledUserBtn>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <EditProfileModal onCloseModal={closeModal} />\n      </Modal>\n    </StyledUserInfo>\n  );\n};\n","// import { SelectLanguage } from 'components/SelectLanguage/SelectLanguage';\nimport { BurgerMenu } from './BurgerMenu/BurgerMenu';\nimport {\n  StyledHeader,\n  StyledHeaderItemWrapper,\n  StyledHeaderWrapper,\n} from './Header.styled';\nimport { ThemeDropDown } from './ThemeDropDown/ThemeDropDown';\nimport { UserInfo } from './UserInfo/UserInfo';\n\nexport const Header = () => {\n  return (\n    <StyledHeaderWrapper>\n      <StyledHeader>\n        <BurgerMenu />\n        <StyledHeaderItemWrapper>\n          {/* <SelectLanguage/>  */}\n          <ThemeDropDown />\n          <UserInfo />\n        </StyledHeaderItemWrapper>\n      </StyledHeader>\n    </StyledHeaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  height: 100vh;\n  width: 320px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import { Header } from 'components/Header/Header';\n\nimport React, { useEffect, useState } from 'react';\n\nimport { HeaderWrapper, HomeWrapper, } from './HomePage.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ScreensPage from './ScreensPage';\n\nexport default function HomePage() {  \n\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <HomeWrapper>\n      {isWideScreen && <Sidebar />}\n      <HeaderWrapper>\n        <Header />       \n        <ScreensPage/>\n      </HeaderWrapper>    \n    </HomeWrapper> \n\n  );\n}\n"],"names":["BurgerMenuWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","StyledBurgerMenu","_templateObject2","props","isOpen","StyledSVGBurger","_templateObject3","StyledLogoWrapper","StyledLogoIcon","radius","m","StyledLogoText","StyledSVGLogo","_templateObject4","violetColors","accentColor","Logo","_jsxs","children","_jsx","xlinkHref","concat","sprite","StyledBoardList","_ref","isActive","StyledBoardItem","_ref2","colors","white","StyledSVGPensil","StyledSVGIcon","StyledSVGTrash","_templateObject5","StyledBoardListBtn","_templateObject6","StyledBtnWrapper","_templateObject7","_ref3","StyledModal","Modal","greyIconColor","Form","CloseButton","CloseSVG","darkTextColor","BigHeader","TitleInput","SmallHeader","List","_templateObject8","Radio","_templateObject9","IconSVG","_templateObject10","Pic","_templateObject11","SubmitButton","_templateObject12","hoverViolet","pictures_mini","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","BoardModalBase","isModalOpen","info","onCloseModal","action","SubmitForm","_useState","useState","title","_useState2","_slicedToArray","setTitle","_useState3","iconURL","_useState4","setIcon","_useState5","backgroundURL","_useState6","setBackground","close","overlayClassName","onRequestClose","ariaHideApp","onClick","onSubmit","event","preventDefault","sub","id","name","placeholder","value","onChange","e","target","handleChange","required","map","Icon","index","type","checked","Background","alt","src","BoardListItem","board","dispatch","useDispatch","setOpenModal","Link","to","_id","deleteBoard","editBoard","StyledBoardListWrapper","BoardList","boards","useSelector","selectAllBoards","useEffect","fetchBoards","activeItem","setActiveItem","_Fragment","length","handleBoardClick","StyledSVG","StyledButton","StyledCreateBtn","AddBoardButton","AddBoard","navigate","useNavigate","stopPropagation","OpenModal","console","log","addBoard","replaceAll","SidebarWrapper","StyledText","StyledCreateWrapper","StyledLogoutBtn","StyledSVGLogout","ItemsWrapper","ModalWrapper","ModalTitle","Input","CommentInput","SendButton","StyledSvgClose","axios","sendHelpRequest","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","needHelpData","thunkAPI","res","wrap","_context","prev","next","sent","token","data","abrupt","t0","rejectWithValue","response","message","stop","_x","_x2","apply","arguments","validationSchema","Yup","email","comment","NeedHelpModal","onClose","setEmail","setComment","handleSend","then","catch","error","className","Formik","initialValues","isSubmitting","ErrorMessage","component","HelpContainer","HelpImage","HelpText","HelpButton","ButtonText","IconContainer","TaskPro","setIsModalOpen","openModal","flowerImage","CiCircleQuestion","SidebarNav","t","useTranslation","HelpApp","logout","DarkBackground","StyledSidebar","Sidebar","forwardRef","ref","BurgerMenu","setOpen","burgerMenuRef","useRef","sidebarRef","current","handleClickClose","contains","document","addEventListener","removeEventListener","StyledHeader","StyledHeaderWrapper","StyledHeaderItemWrapper","options","label","customStyles","control","provided","state","_objectSpread","backgroundColor","color","isFocused","border","boxShadow","display","padding","dropdownIndicator","content","option","fontWeight","fontSize","letterSpacing","ThemeDropDown","Select","styles","selectedOption","classNamePrefix","StyledUserInfo","StyledUserBtn","StyledUserName","StyledUserPhoto","editFormSchema","shape","min","max","password","matches","EditProfileModal","showPassword","setShowPassword","ModalWrap","TitleModal","CLoseButton","IconClose","ProfileFotoBox","IconUser","AddButton","IconPlus","StyledForm","StyledLabel","htmlFor","StyledField","ErrMessage","HideBtn","IconEye","Button","UserInfo","userName","auth","user","closeModal","photo","width","height","closeTimeoutMS","Header","HomeWrapper","HeaderWrapper","HomePage","window","innerWidth","isWideScreen","setIsWideScreen","handleResize","ScreensPage"],"sourceRoot":""}