{"version":3,"file":"static/js/902.95d40be4.chunk.js","mappings":"gXAKMA,GAAqB,WAAH,OACpBC,EAAAA,GAAAA,KAACC,GAAAA,IAAU,GAAE,EAGXC,GAAe,CACXC,kBAAmB,SAAAC,GACjB,OACEJ,EAAAA,GAAAA,KAACK,GAAAA,EAAAA,mBAA4BC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAKF,GAAK,IAAAG,UACrCP,EAAAA,GAAAA,KAACD,GAAkB,CAACS,MAAM,KAAKC,OAAO,SAG5C,GAGJC,GAAU,CACd,CAAEC,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,SACtB,CAAED,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,KAAMC,MAAO,SACtB,CAAED,MAAO,MAAOC,MAAO,SACvB,CAAED,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,SACtB,CAAED,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,WACtB,CAAED,MAAO,KAAMC,MAAO,UACtB,CAAED,MAAO,KAAMC,MAAO,WAGjBC,GAAe,CACpBC,QAAS,SAACC,EAAUC,GAAK,OAAAV,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACpBS,GAAQ,IACXE,MAAOD,EAAME,UAAY,mBAAqB,wBAC9CC,OAAQ,QACRC,UAAW,OACXC,QAAS,OACTC,OAAQ,SACRC,QAAS,IACTC,UAAW,IACXC,WAAY,KAAG,EAIjBC,YAAc,SAAAX,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACjBS,GAAQ,IACXP,MAAO,OACPC,OAAQ,OACRc,QAAS,KAAG,EAIdI,mBAAqB,SAAAZ,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACxBS,GAAQ,IAKZM,QAAS,QAAM,EAGhBO,mBACA,SAAAb,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACHS,GAAQ,IACZM,QAAS,QAAM,EAGhBQ,MAAO,SAACd,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACXS,GAAQ,IACXM,QAAS,QAAM,EAGjBS,kBAAmB,SAAAf,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACtBS,GAAQ,IACXQ,QAAS,IACXN,MAAO,uBACP,mBAAoB,CAClBA,MAAO,WAEP,YAAa,CACXc,QAAS,SACV,EAGHC,OAAQ,SAACjB,EAAUC,GAAK,OAAAV,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACnBS,GAAQ,IACXkB,gBAAiB,OACjBhB,MAAOD,EAAMkB,WAAa,UAAY,kBAEtC,UAAW,CACTD,gBAAiB,UACjBhB,MAAO,YACR,EAEHkB,YAAa,SAACpB,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACjBS,GAAQ,IACXM,QAAS,QAAM,EAEfe,KAAM,SAACrB,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACRS,GAAQ,IACXsB,UAAW,QACX7B,MAAO,QAEPyB,gBAAiB,QACjBK,aAAc,MAEfC,UAAW,OACV,uBAAwB,CACtB/B,MAAO,OAIT,6BAA8B,CAC5ByB,gBAAiB,wBACjBK,aAAc,OAGhB,6BAA8B,CAC5BL,gBAAiB,gBAClB,EAELO,SAAU,SAACzB,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACdS,GAAQ,IAEXwB,UAAW,QAAM,GAuBvB,GAjB8B,WAC1B,IAAQE,GAASC,EAAAA,GAAAA,IAAe,UAAxBD,KAKV,OACEzC,EAAAA,GAAAA,KAAC2C,GAAAA,GAAM,CACPtC,WAAYH,GACVQ,QAASA,GACTkC,OAAQ/B,GACRgC,SARyB,SAAAC,GAC3BL,EAAKM,eAAeD,EAAenC,MACrC,EAOIwB,YAAY,IAGlB,ECjJaa,GAAiB,WAC5B,IAAQP,GAASC,EAAAA,GAAAA,IAAe,UAAxBD,KAEFQ,EAAe,SAAAC,GACnBT,EAAKM,eAAeG,EACtB,EAOA,OACIlD,EAAAA,GAAAA,KAACmD,GAAc,CAACC,qBANS,SAAAC,GAC3B,IAAMC,EAAmBD,EAAEE,OAAO5C,MAClCsC,EAAaK,EACf,EAGgEL,aAAcA,GAEhF,E,gCClBaO,GAAoBC,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,yGAGvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAI9BC,GAAmBN,GAAAA,GAAAA,OAAaO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,kXAUhC,SAAAvD,GAAK,OAAKA,EAAM6D,OAAS,iBAAmB,EAAE,IAY9CC,GAAkBT,GAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,uEC7B5BS,GAAoBX,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,sJAElC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAQnBO,GAAiBZ,GAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,kHAEtB,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,IAK3BC,GAAiBf,GAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,gIASzBc,GAAgBhB,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,wBAC7B,SAAAC,GAAC,OAAIA,EAAEC,MAAMc,aAAaC,WAAW,ICrBlCC,GAAO,WAClB,OACEC,EAAAA,GAAAA,MAACV,GAAiB,CAAA7D,SAAA,EAChBP,EAAAA,GAAAA,KAACqE,GAAc,CAAA9D,UACbP,EAAAA,GAAAA,KAACyE,GAAa,CAAAlE,UACZP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,sBAI7BjF,EAAAA,GAAAA,KAACwE,GAAc,CAAAjE,SAAC,eAGtB,E,sBClBa2E,GAAkBzB,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,0RAKnB,SAAAwB,GAAW,OAAAA,EAARC,SACV,2BAA6B,aAAa,IAI5C,SAAAxB,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IACxB,SAAA1B,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IAQ1BC,GAAkB9B,GAAAA,GAAAA,OAAaO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,0bASjC,SAAA6B,GAAW,OAAAA,EAARJ,SACC,sBAAwB,0BAA0B,IAIpD,SAAAxB,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IAEtB,SAAA1B,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IAO3B,SAAAG,GAAW,OAAAA,EAARL,SACA,sBAAwB,0BAA0B,IAQtDM,GAAkBjC,GAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,sJAO3B,SAAAC,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IAI1BK,GAAiBlC,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,wJAQ1B,SAAAC,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IAI1BM,GAAqBnC,GAAAA,GAAAA,OAAaoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,8GAQlCmC,GAAmBrC,GAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,kFAI7B,SAAAqC,GAAW,OAAAA,EAARZ,SAA2B,OAAS,MAAM,I,iCCrF7Ca,IAAcxC,EAAAA,GAAAA,IAAOyC,KAAPzC,CAAaC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,qRAMhB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaC,QAAQ,IAE/B,SAAAhG,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaE,QAAQ,IAKhEC,GAAO7C,GAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,+EAMlB4C,GAAc9C,GAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,iKAU3B6C,GAAW/C,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,iEAGpB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaM,QAAQ,IAG3CC,GAAYjD,GAAAA,GAAAA,EAAQoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,6HACpB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaM,QAAQ,IAO1CE,GAAalD,GAAAA,GAAAA,MAAYsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,sgBAKpB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaS,MAAM,IAG7C,SAAAxG,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaM,QAAQ,IAQtC,SAAArG,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaM,QAAQ,IAW9CI,GAAcpD,GAAAA,GAAAA,EAAQqD,IAAAA,GAAAnD,EAAAA,GAAAA,GAAA,qIACtB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaM,QAAQ,IAO1CM,GAAOtD,GAAAA,GAAAA,MAAYuD,IAAAA,GAAArD,EAAAA,GAAAA,GAAA,oKAUnBsD,GAAQxD,GAAAA,GAAAA,MAAYyD,IAAAA,GAAAvD,EAAAA,GAAAA,GAAA,qMAIf,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaM,QAAQ,IAKpC,SAAArG,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaS,MAAM,IAKnDO,GAAU1D,GAAAA,GAAAA,IAAU2D,IAAAA,GAAAzD,EAAAA,GAAAA,GAAA,wKAGnB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAakB,UAAU,IAO7CC,GAAM7D,GAAAA,GAAAA,KAAW8D,IAAAA,GAAA5D,EAAAA,GAAAA,GAAA,yQAejB6D,GAAe/D,GAAAA,GAAAA,OAAagE,IAAAA,GAAA9D,EAAAA,GAAAA,GAAA,0xBAI5B,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMsC,aAAauB,YAAY,IAInC,SAAAtH,GAAK,OAAIA,EAAMyD,MAAMsC,aAAaS,MAAM,IAYpC,SAAAxG,GAAK,OAAIA,EAAMyD,MAAMsC,aAAawB,WAAW,IAO7C,SAAAvH,GAAK,OAAIA,EAAMyD,MAAMsC,aAAauB,YAAY,IASxD,SAAAtH,GAAK,OAAIA,EAAMyD,MAAMsC,aAAayB,cAAc,ICrJrDC,GAAgB,CAAEC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,G,oDAAIC,I,qDAAKC,I,qDAAKC,I,qDAAKC,I,qDAAKC,I,qDAAKC,I,sDCEnFC,GAAiB,SAAH3D,GAMpB,IALL4D,EAAW5D,EAAX4D,YACAC,EAAI7D,EAAJ6D,KACAC,EAAY9D,EAAZ8D,aACAC,EAAM/D,EAAN+D,OACAC,EAAUhE,EAAVgE,WAEQC,GAAM1G,EAAAA,GAAAA,IAAe,UAArB0G,EACRC,GAA0BC,EAAAA,GAAAA,UAASN,EAAKO,OAAMC,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAAvCE,EAAKC,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA2BL,EAAAA,GAAAA,UAASN,EAAKY,SAAQC,GAAAJ,EAAAA,GAAAA,GAAAE,EAAA,GAA1CC,EAAOC,EAAA,GAAEC,EAAOD,EAAA,GACvBE,GAAuCT,EAAAA,GAAAA,UAASN,EAAKgB,eAAcC,GAAAR,EAAAA,GAAAA,GAAAM,EAAA,GAA5DC,EAAaC,EAAA,GAAEC,EAAaD,EAAA,GAgCnC,SAASE,IACPlB,IACAS,EAASV,EAAKO,OACdO,EAAQd,EAAKY,SACbM,EAAclB,EAAKgB,cACrB,CAcA,OACElF,EAAAA,GAAAA,MAACmB,GAAW,CACVhC,OAAQ8E,EACRqB,iBAAkB,gBAClBC,UAAW,gBACXC,eAAgBH,EAChBI,aAAa,EAAMhK,SAAA,EAEnBP,EAAAA,GAAAA,KAACuG,GAAW,CAACiE,QAASL,EAAM5J,UAC1BP,EAAAA,GAAAA,KAACwG,GAAQ,CAAAjG,UACPP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,wBAI7BH,EAAAA,GAAAA,MAACwB,GAAI,CAACmE,SAAU,SAAAC,GAAK,OA1BzB,SAAaA,GACXA,EAAMC,iBACNxB,EAAW,CAAEI,MAAAA,EAAOK,QAAAA,EAASI,cAAAA,IAC7BN,EAASV,EAAKO,OACdO,EAAQd,EAAKY,SACbM,EAAclB,EAAKgB,cACrB,CAoB6BY,CAAIF,EAAM,EAACnK,SAAA,EAClCP,EAAAA,GAAAA,KAAC0G,GAAS,CAAAnG,SAEJ6I,EADQ,QAAXF,EACK,yCACA,8CAGRlJ,EAAAA,GAAAA,KAAC2G,GAAU,CACTkE,GAAG,QACHC,KAAK,QACL3I,YAAY,QACZxB,MAAO4I,EACP1G,SAAU,SAAAQ,GAAC,OA9BnB,SAAsBA,GACpBqG,EAASrG,EAAEE,OAAO5C,MACpB,CA4BuBsC,CAAaI,EAAE,EAC9B0H,UAAQ,KAGV/K,EAAAA,GAAAA,KAAC6G,GAAW,CAAAtG,SAAE6I,EAAE,0CAChBpJ,EAAAA,GAAAA,KAAC+G,GAAI,CAAAxG,SAhFG,CACZ,CAAEI,MAAO,gBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,wBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,qBACT,CAAEA,MAAO,eACT,CAAEA,MAAO,oBAyEIqK,KAAI,SAACC,EAAMC,GAAK,OACrBpG,EAAAA,GAAAA,MAAA,SAAAvE,SAAA,EACEP,EAAAA,GAAAA,KAACiH,GAAK,CACJkE,KAAK,QACLL,KAAK,OACLnK,MAAOsK,EAAKtK,MACZyK,QAASH,EAAKtK,QAAUiJ,EACxB/G,SAAU,kBAAMiH,EAAQmB,EAAKtK,MAAM,KAErCX,EAAAA,GAAAA,KAACmH,GAAO,CAAC,cAAY,OAAM5G,UACzBP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,KAAAD,OAAIiG,EAAKtK,aAT1BuK,EAWJ,OAIZlL,EAAAA,GAAAA,KAAC6G,GAAW,CAAAtG,SAAE6I,EAAE,2CAChBpJ,EAAAA,GAAAA,KAAC+G,GAAI,CAAAxG,SAvFS,CAClB,CAAEI,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,MACT,CAAEA,MAAO,OACT,CAAEA,MAAO,OACT,CAAEA,MAAO,OACT,CAAEA,MAAO,OACT,CAAEA,MAAO,OACT,CAAEA,MAAO,QAwEUqK,KAAI,SAACK,EAAYH,GAAK,OACjCpG,EAAAA,GAAAA,MAAA,SAAAvE,SAAA,EACEP,EAAAA,GAAAA,KAACiH,GAAK,CACJkE,KAAK,QACLL,KAAK,aACLnK,MAAO0K,EAAW1K,MAClByK,QAASC,EAAW1K,QAAUqJ,EAC9BnH,SAAU,kBAAMqH,EAAcmB,EAAW1K,MAAM,KAEjDX,EAAAA,GAAAA,KAACsH,GAAG,CAAA/G,UACFP,EAAAA,GAAAA,KAAA,OACEsL,IAAI,cACJC,IAAK1D,GAAc,GAAD7C,OAAIqG,EAAW1K,cAX3BuK,EAcJ,OAIZpG,EAAAA,GAAAA,MAAC0C,GAAY,CAAC2D,KAAK,SAAQ5K,SAAA,EACzBP,EAAAA,GAAAA,KAAA,QAAAO,UACEP,EAAAA,GAAAA,KAAA,OAAAO,UACEP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,oBAGTmE,EAAR,QAAXF,EAAqB,wCAA6C,kDAK7E,E,WChJasC,GAAgB,SAAHrG,GAAsC,IAAhCsG,EAAKtG,EAALsG,MAAOrG,EAAQD,EAARC,SAAUoF,EAAOrF,EAAPqF,QACzCkB,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MACjBxC,GAAoCC,EAAAA,GAAAA,WAAS,GAAME,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAA5CN,EAAWS,EAAA,GAAEsC,EAAYtC,EAAA,GAqBhC,OACE1E,EAAAA,GAAAA,MAACI,GAAe,CAACE,SAAUA,EAAUoF,QAASA,EAAQjK,SAAA,EAGpDuE,EAAAA,GAAAA,MAACS,GAAe,CACd4F,KAAK,SACL/F,SAAUA,EACVoF,QAAS,WACPA,IACAkB,GAASK,EAAAA,GAAAA,IAAaN,EAAMO,KAC9B,EAAEzL,SAAA,EAEFP,EAAAA,GAAAA,KAAA,OAAAO,UACEP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,KAAAD,OAAIyG,EAAM7B,cAGrC5J,EAAAA,GAAAA,KAACiM,GAAAA,GAAI,CAACC,GAAE,SAAAlH,OAAWyG,EAAMO,KAAMzL,SAAEkL,EAAMlC,YAGzCzE,EAAAA,GAAAA,MAACgB,GAAgB,CAACV,SAAUA,EAAUoF,QAASA,EAAQjK,SAAA,EACrDP,EAAAA,GAAAA,KAAC4F,GAAkB,CAAC4E,QAnC1B,WACEsB,GAAa,EACf,EAiC8CX,KAAK,SAAQ5K,UACnDP,EAAAA,GAAAA,KAAC0F,GAAe,CAAAnF,UACdP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,0BAI7BjF,EAAAA,GAAAA,KAAC4F,GAAkB,CAAC4E,QA/B1B,WACEkB,GAASS,EAAAA,GAAAA,IAAYV,EAAMO,MAC3BJ,EAAS,QACX,EA4BiDT,KAAK,SAAQ5K,UACtDP,EAAAA,GAAAA,KAAC2F,GAAc,CAAApF,UACbP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,4BAK/BjF,EAAAA,GAAAA,KAAC8I,GAAc,CACbC,YAAaA,EACbC,KAAMyC,EACNxC,aAvDN,WACE6C,GAAa,EACf,EAsDM5C,OAAQ,OACRC,WAjDN,SAAoBH,GAClB,IAAQgD,EAAQP,EAARO,IACRN,GAASU,EAAAA,GAAAA,IAAU,CAAEJ,IAAAA,EAAKhD,KAAAA,KAC1B8C,GAAa,EACf,MAiDF,E,WC/EaO,I,QAAyB5I,GAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,8bAS5B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,KCL/BwI,GAAY,WACvB,IAAMZ,GAAWC,EAAAA,GAAAA,MACXY,GAASC,EAAAA,GAAAA,IAAYC,GAAAA,KAE3BC,EAAAA,GAAAA,YAAU,WACRhB,GAASiB,EAAAA,GAAAA,MACX,GAAG,CAACjB,IAEJ,IAAArC,GAAoCC,EAAAA,GAAAA,UAAS,MAAKE,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAA3CuD,EAAUpD,EAAA,GAAEqD,EAAarD,EAAA,GAKhC,OACExJ,EAAAA,GAAAA,KAAA8M,GAAAA,SAAA,CAAAvM,SACGgM,EAAOQ,OAAS,IACf/M,EAAAA,GAAAA,KAACqM,GAAsB,CAAA9L,SACpBgM,EAAOvB,KAAI,SAAAS,GAAK,OACfzL,EAAAA,GAAAA,KAAA,MAAAO,UAGEP,EAAAA,GAAAA,KAACwL,GAAa,CACZC,MAAOA,EACPrG,SAAUqG,IAAUmB,EACpBpC,QAAS,kBAdE,SAAAiB,GACvBoB,EAAcpB,EAChB,CAY6BuB,CAAiBvB,EAAM,KALnCA,EAAMO,IAOR,OAMjB,ECrCaiB,GAAYxJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,2DACvB,SAAAvD,GAAK,OAAIA,EAAMyD,MAAMwB,OAAOC,KAAK,IAKhC4H,GAAezJ,GAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,uQAgB1BwJ,GAAkB1J,GAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,+RCf/ByJ,GAAiB,SAAHjI,GAAqB,IAAfqF,EAAOrF,EAAPqF,QACvBpB,GAAM1G,EAAAA,GAAAA,IAAe,UAArB0G,EACR,OACEtE,EAAAA,GAAAA,MAACqI,GAAe,CAAC3C,QAASA,EAAQjK,SAAA,CAC/B6I,EAAE,+BACHpJ,EAAAA,GAAAA,KAACkN,GAAY,CAAA3M,UACXP,EAAAA,GAAAA,KAACiN,GAAS,CAAA1M,UACRP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,sBAKnC,ECfaoI,GAAW,WACpB,IAAM3B,GAAWC,EAAAA,GAAAA,MACjBtC,GAAoCC,EAAAA,GAAAA,WAAS,GAAME,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAA5CN,EAAWS,EAAA,GAAEsC,EAAYtC,EAAA,GAgBhC,OACI1E,EAAAA,GAAAA,MAAAgI,GAAAA,SAAA,CAAAvM,SAAA,EACIP,EAAAA,GAAAA,KAACoN,GAAc,CAAC5C,QAAS,SAACE,GAAK,OAZvC,SAAmBA,GACfA,EAAM4C,kBACNxB,GAAa,EACjB,CAS4CyB,CAAU7C,EAAM,KACpD1K,EAAAA,GAAAA,KAAC8I,GAAc,CAACC,YAAaA,EAAaC,KAAM,CAAEO,MAAO,GAAIK,QAAS,eAAgBI,cAAe,KAAOf,aAjBpH,WACI6C,GAAa,EACjB,EAe8I5C,OAAQ,MAAOC,WAR7J,SAAoBH,GAChB0C,GAAS8B,EAAAA,GAAAA,IAASxE,IAClB8C,GAAa,EACjB,MAQJ,EC5Ba2B,GAAiBhK,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,iLAU3B+J,GAAajK,GAAAA,GAAAA,EAAQO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,sHAGd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAI9B6J,GAAsBlK,GAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,sIAChC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,IAIzB8J,GAAkBnK,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,8SAWnC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,IAarB+J,GAAkBpK,GAAAA,GAAAA,IAAUoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,qNAQ3B,SAAAC,GAAC,OAAIA,EAAEC,MAAMwB,OAAOyI,aAAa,IAMlCC,GAAetK,GAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,0FAOzBqK,GAASvK,GAAAA,GAAAA,IAAUqD,IAAAA,GAAAnD,EAAAA,GAAAA,GAAA,qE,uDClEnBsK,GAAexK,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,mbAUtB,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAaC,QAAQ,IAC/B,SAAAxC,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,IAc3B2J,GAAazK,GAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,0LAOhB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAC9B,SAAAF,GAAC,OAAIA,EAAEC,MAAMsC,aAAaM,QAAQ,IAGjCF,GAAc9C,GAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,sLAY3BwK,IAAQ1K,EAAAA,GAAAA,IAAO2K,GAAAA,GAAP3K,CAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,iWAIZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAaS,MAAM,IACnC,SAAAhD,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,IAMxB,SAAAX,GAAC,OAAIA,EAAEC,MAAMsC,aAAakI,QAAQ,IACtC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMsC,aAAamI,QAAQ,IAWjCC,GAAe9K,GAAAA,GAAAA,SAAeoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,8XAIpB,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAaS,MAAM,IACpC,SAAAhD,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,IAOxB,SAAAX,GAAC,OAAIA,EAAEC,MAAMsC,aAAakI,QAAQ,IACtC,SAAAzK,GAAC,OAAIA,EAAEC,MAAMsC,aAAamI,QAAQ,IAUjCE,GAAa/K,GAAAA,GAAAA,OAAasC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,2UAIpB,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,IAElB,SAAAX,GAAC,OAAIA,EAAEC,MAAMsC,aAAaS,MAAM,IAC7C,SAAAhD,GAAC,OAAIA,EAAEC,MAAMwB,OAAOC,KAAK,IAQZ,SAAAlF,GAAK,OAAIA,EAAMyD,MAAMsC,aAAawB,WAAW,IAGtD8G,GAAiBhL,GAAAA,GAAAA,IAAUqD,IAAAA,GAAAnD,EAAAA,GAAAA,GAAA,4WAC7B,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAaC,QAAQ,IACjC,SAAAhG,GAAK,OAAIA,EAAMyD,MAAMsC,aAAauI,YAAY,ICnGpDC,GAAmBC,GAAAA,GAAW,CAClCC,MAAOD,GAAAA,KAAaC,MAAM,sCAAsC9D,SAAS,IACzE+D,QAASF,GAAAA,KAAa7D,SAAS,MAGpBgE,GAAgB,SAAH5J,GAA6B,IAAvBlB,EAAMkB,EAANlB,OAAQ+K,EAAO7J,EAAP6J,QAChCtD,GAAWC,EAAAA,GAAAA,MACTvC,GAAM1G,EAAAA,GAAAA,IAAe,UAArB0G,EAEF6F,EAAU,eAAAxJ,GAAAyJ,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,EAAA7J,GAAA,IAAAqJ,EAAAC,EAAA,OAAAK,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAASZ,EAAKrJ,EAALqJ,MAAOC,EAAOtJ,EAAPsJ,QACjCpD,GAASgE,EAAAA,GAAAA,IAAgB,CAAEb,MAAAA,EAAOC,QAAAA,KAC/Ba,MAAK,WACJC,QAAQC,IAAI,6BACZb,GACF,IACCc,OAAM,SAAAC,GACLH,QAAQG,MAAM,yBAA0BA,EAC1C,IAAG,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,KACN,gBATeY,GAAA,OAAAxK,EAAAyK,MAAA,KAAAC,UAAA,KAWhB,OACEnQ,EAAAA,GAAAA,KAACkG,KAAK,CACJjC,OAAQA,EACRmG,iBAAiB,gBACjBC,UAAU,gBACVC,eAAgB0E,EAChBzE,aAAa,EAAMhK,UAEnBuE,EAAAA,GAAAA,MAACmJ,GAAY,CAAA1N,SAAA,EACXP,EAAAA,GAAAA,KAACuG,GAAW,CAACiE,QAASwE,EAAQzO,UAC5BP,EAAAA,GAAAA,KAACyO,GAAc,CAAAlO,UACbP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,wBAG7BjF,EAAAA,GAAAA,KAACkO,GAAU,CAAA3N,SAAE6I,EAAE,iCACfpJ,EAAAA,GAAAA,KAACoQ,GAAAA,GAAM,CACLC,cAAe,CAAExB,MAAO,GAAIC,QAAS,IACrCH,iBAAkBA,GAClBlE,SAAUwE,EAAW1O,SAEpB,SAAAyF,GAAeA,EAAZsK,aAAY,OACdxL,EAAAA,GAAAA,MAACwB,GAAAA,GAAI,CAAA/F,SAAA,EACHP,EAAAA,GAAAA,KAACmO,GAAK,CACJhD,KAAK,QACLL,KAAK,QACL3I,YAAaiH,EAAE,sCACfmH,GAAInC,GAAAA,MAENpO,EAAAA,GAAAA,KAACwQ,GAAAA,GAAY,CACX1F,KAAK,QACL2F,UAAU,MACVpG,UAAU,mBAEZrK,EAAAA,GAAAA,KAACoO,GAAAA,GAAK,CACJjD,KAAK,OACLL,KAAK,UACL3I,YAAaiH,EAAE,qCACfmH,GAAIhC,MAGNvO,EAAAA,GAAAA,KAACwQ,GAAAA,GAAY,CACX1F,KAAK,UACL2F,UAAU,MACVpG,UAAU,mBAEZrK,EAAAA,GAAAA,KAACwO,GAAU,CAACrD,KAAK,SAAQ5K,SAAE6I,EAAE,4CACxB,QAMnB,ECxFcsH,GAAgBjN,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,6QAOlB,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAawK,cAAc,IASjDC,GAAYnN,GAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,GAAAA,GAAA,6FAQtBkN,GAAWpN,GAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,6NAKtB,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAauI,YAAY,IAQnCoC,GAAarN,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,gOAM3B,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAauI,YAAY,IASnCqC,GAAYtN,GAAAA,GAAAA,IAAUoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,gLAQ1B,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAauI,YAAY,IAGlCsC,GAAgBvN,GAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,yHAS3BsN,GAAUxN,GAAAA,GAAAA,KAAWqD,IAAAA,GAAAnD,EAAAA,GAAAA,GAAA,qLACxB,SAAAC,GAAC,OAAIA,EAAEC,MAAMsC,aAAaS,MAAM,I,iEClC3C,GAlCgB,WACd,IAAAyC,GAAsCC,EAAAA,GAAAA,WAAS,GAAME,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAA9CN,EAAWS,EAAA,GAAE0H,EAAc1H,EAAA,GAC1BJ,GAAM1G,EAAAA,GAAAA,IAAe,UAArB0G,EACF+H,EAAY,WAChBD,GAAe,EACjB,EAMA,OACEpM,EAAAA,GAAAA,MAAC4L,GAAa,CAAAnQ,SAAA,EACZP,EAAAA,GAAAA,KAAC4Q,GAAS,CAACrF,IAAK6F,GAAa9F,IAAI,YACjCxG,EAAAA,GAAAA,MAAC+L,GAAQ,CAAAtQ,SAAA,CACN6I,EAAE,0BAA0B,KAACpJ,EAAAA,GAAAA,KAACiR,GAAO,CAAA1Q,SAAE,YAAkB6I,EAAE,+BAE9DpJ,EAAAA,GAAAA,KAAC8Q,GAAU,CAACtG,QAAS2G,EAAU5Q,UAC7BP,EAAAA,GAAAA,KAACgR,GAAa,CAAAzQ,UACZP,EAAAA,GAAAA,KAACqR,GAAAA,IAAgB,SAIrBrR,EAAAA,GAAAA,KAAC+Q,GAAU,CAACvG,QAAS2G,EAAU5Q,SAAE6I,EAAE,gCAElCL,IACC/I,EAAAA,GAAAA,KAAC+O,GAAa,CACZ9K,OAAQ8E,EACRiG,QArBW,WACjBkC,GAAe,EACjB,MAwBF,ECpBaI,GAAa,WACxB,IAAM5F,GAAWC,EAAAA,GAAAA,MACbC,GAAWC,EAAAA,GAAAA,MAOPzC,GAAM1G,EAAAA,GAAAA,IAAe,UAArB0G,EACR,OACEtE,EAAAA,GAAAA,MAAC2I,GAAc,CAAAlN,SAAA,EACbP,EAAAA,GAAAA,KAAC0N,GAAU,CAAAnN,SAAE6I,EAAE,kCAChBtE,EAAAA,GAAAA,MAACkJ,GAAM,CAAAzN,SAAA,EACNP,EAAAA,GAAAA,KAAC2N,GAAmB,CAAApN,UAClBP,EAAAA,GAAAA,KAACqN,GAAQ,OAEXrN,EAAAA,GAAAA,KAACsM,GAAS,QAEVxH,EAAAA,GAAAA,MAACiJ,GAAY,CAAAxN,SAAA,EACXP,EAAAA,GAAAA,KAACuR,GAAO,KACRzM,EAAAA,GAAAA,MAAC8I,GAAe,CAACzC,KAAK,SAASX,QAjBjB,WAClBkB,GAAS8F,EAAAA,GAAAA,OACT5F,EAAS,IACX,EAc0DrL,SAAA,EAClDP,EAAAA,GAAAA,KAAC6N,GAAe,CAAAtN,UACdP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,mBAE1BmE,EAAE,oCAKb,EC/CaqI,GAAiBhO,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,6IAU3B+N,GAAgBjO,GAAAA,GAAAA,MAAYO,KAAAA,IAAAL,EAAAA,GAAAA,GAAA,ibAGnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMc,aAAaC,WAAW,IAavD,WACF,IAAOnC,GAAQC,EAAAA,GAAAA,IAAe,UAAvBD,KAGL,MAAY,QAFAA,EAAKkP,IAAIlP,EAAKmP,UAGlB,mDAKA,kDAKV,ICvCWC,IAAUC,EAAAA,GAAAA,aAAW,SAAC1R,EAAO2R,GACxC,OACEjN,EAAAA,GAAAA,MAAC4M,GAAa,CAACK,IAAKA,EAAIxR,SAAA,EACtBP,EAAAA,GAAAA,KAAC6E,GAAI,KACL7E,EAAAA,GAAAA,KAACsR,GAAU,MAGjB,ICFaU,GAAa,WACxB,IAAA3I,GAA0BC,EAAAA,GAAAA,WAAS,GAAME,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAAlCpF,EAAMuF,EAAA,GAAEyI,EAAOzI,EAAA,GAChB0I,GAAgBC,EAAAA,GAAAA,QAAO,MACvBC,GAAaD,EAAAA,GAAAA,QAAO,MA0B1B,OAnBAzF,EAAAA,GAAAA,YAAU,WACRkD,QAAQC,IAAI,iBAAkBqC,EAAcG,SAC5CzC,QAAQC,IAAI,cAAeuC,EAAWC,SACtC,IAAMC,EAAmB,SAAA5H,GAErBwH,EAAcG,UACbH,EAAcG,QAAQE,SAAS7H,EAAMnH,SACtC6O,EAAWC,UACVD,EAAWC,QAAQE,SAAS7H,EAAMnH,SAEnC0O,GAAQ,EAEZ,EAIA,OAFAO,SAASC,iBAAiB,QAASH,GAE5B,kBAAME,SAASE,oBAAoB,QAASJ,EAAkB,CACvE,GAAG,CAACJ,EAAeE,KAGjBtN,EAAAA,GAAAA,MAACtB,GAAiB,CAAAjD,SAAA,EAChBP,EAAAA,GAAAA,KAAC+D,GAAgB,CACfoH,KAAK,SACLX,QA5BoB,WACxBoF,QAAQC,IAAI,mBACZoC,GAAShO,EACX,EA0BMA,OAAQA,EACR8N,IAAKG,EAAc3R,UAEnBP,EAAAA,GAAAA,KAACkE,GAAe,CAAA3D,UACdP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,uBAG5BhB,IACCa,EAAAA,GAAAA,MAAA,OAAAvE,SAAA,EACEP,EAAAA,GAAAA,KAACyR,GAAc,KACfzR,EAAAA,GAAAA,KAAC6R,GAAO,CAACE,IAAKK,SAKxB,ECzDaO,GAAelP,GAAAA,GAAAA,OAAaC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,6PAK5B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,IAAI,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAIlD,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,IAAI,IAAI,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAStD8O,GAA0BnP,GAAAA,GAAAA,IAAUO,KAAAA,IAAAL,EAAAA,GAAAA,GAAA,+FCZ3CjD,GAAU,CACd,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,WAGtBC,GAAe,CACnBC,QAAS,SAACC,EAAUC,GAAK,OAAAV,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACpBS,GAAQ,IACXkB,gBAAiB,cACjBhB,MAAOD,EAAME,UAAY,mBAAqB,wBAC9CC,OAAQ,QACRC,UAAW,OACXC,QAAS,OACTC,OAAQ,SACRC,QAAS,IACTC,UAAW,IACXC,WAAY,KAAG,EAGjBC,YAAc,SAAAX,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACjBS,GAAQ,IACXP,MAAO,OACPC,OAAQ,OACRc,QAAS,IACTD,OAAQ,UAAQ,EAIlBM,mBACA,SAAAb,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACHS,GAAQ,IACZM,QAAS,QAAM,EAGhBQ,MAAO,SAACd,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACXS,GAAQ,IACXM,QAAS,QAAM,EAEjBS,kBAAmB,SAAAf,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACtBS,GAAQ,IACXQ,QAAS,IACTD,OAAQ,SAER,YAAa,CACXS,QAAS,SACV,EAGHC,OAAQ,SAACjB,EAAUC,GAAK,OAAAV,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACnBS,GAAQ,IACXkB,gBAAiB,OACjBhB,MAAOD,EAAMkB,WAAa,UAAW,kBACrC,mBAAoB,CAClBjB,MAAO,YACR,EAEHkB,YAAa,SAAApB,GAAQ,OAAAT,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAChBS,GAAQ,IACX8R,WAAY,MACZC,SAAU,OACVC,cAAe,UACf9R,MAAO,yBAAuB,GAKrB+R,GAAgB,WAC3B,IAAO5J,GAAK1G,EAAAA,GAAAA,IAAe,UAApB0G,EACDsC,GAAWC,EAAAA,GAAAA,MASjB,OACE3L,EAAAA,GAAAA,KAAC2C,GAAAA,GAED,CACEjC,QAASA,GACTkC,OAAQ/B,GACRgC,SAbsB,SAAEnC,GAE1B,IAAMmD,EAAQnD,EAAQC,MACtBiP,QAAQC,IAAIhM,GACZ6H,GAASuH,EAAAA,GAAAA,IAAa,CAACpP,MAAAA,IACzB,EASI1B,YAAaiH,EAAE,4BAIrB,EC/Fa8J,GAAiBzP,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,wDAG/B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAGnBqP,GAAgB1P,GAAAA,GAAAA,OAAaO,KAAAA,IAAAL,EAAAA,GAAAA,GAAA,oIAKvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,IAI3B6O,GAAiB3P,GAAAA,GAAAA,EAAQU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,kHAC3B,SAAAC,GAAC,OAAIA,EAAEC,MAAMwB,OAAOyI,aAAa,IAO/BuF,GAAkB5P,GAAAA,GAAAA,IAAUiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,wFAItB,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,CAAC,I,WCzB3B+O,GAAgB,SAAHnO,GAAoB,IAAdoO,EAAMpO,EAANoO,OAE9B,OACEvT,EAAAA,GAAAA,KAAA8M,GAAAA,SAAA,CAAAvM,SACGgT,GACCvT,EAAAA,GAAAA,KAAA,OAAKuL,IAAKgI,EAAOC,KAAMlI,IAAI,iBAE3BtL,EAAAA,GAAAA,KAACyT,GAAAA,GAAQ,CAAAlT,UACPP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,mBAKnC,ECdayO,GAAsB,SAAHvO,GAAkB,IAAZwO,EAAIxO,EAAJwO,KACpCtK,GAA8BC,EAAAA,GAAAA,UAAS,MAAKE,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAArCuK,EAAOpK,EAAA,GAAEqK,EAAUrK,EAAA,GACpBsK,EAAS,IAAIC,WAKnB,OAJAD,EAAOE,cAAcL,GACrBG,EAAOG,OAAS,WACdJ,EAAWC,EAAOI,OACpB,GAEElU,EAAAA,GAAAA,KAAA8M,GAAAA,SAAA,CAAAvM,SAAGqT,IAAW5T,EAAAA,GAAAA,KAACmU,GAAAA,GAAW,CAAC5I,IAAKqI,EAAStI,IAAI,iBAEjD,ECkBM8I,GAAiBxF,GAAAA,KAAayF,MAAM,CACxCvJ,KAAM8D,GAAAA,KAAa0F,IAAI,EAAG,YAAYC,IAAI,GAAI,WAC9C1F,MAAOD,GAAAA,KAAaC,MAAM,sCAE1B2F,SAAU5F,GAAAA,KACP0F,IAAI,EAAG,qDACPG,QAAQ,WAAY,8CAGZC,GAAmB,SAAHvP,GAAkC,IAA5B8D,EAAY9D,EAAZ8D,aAAcsK,EAAMpO,EAANoO,OACvCnK,GAAM1G,EAAAA,GAAAA,IAAe,UAArB0G,EACFsC,GAAWC,EAAAA,GAAAA,MAKjBtC,GAAwCC,EAAAA,GAAAA,WAAS,GAAME,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAAhDsL,EAAYnL,EAAA,GAAEoL,EAAepL,EAAA,GAC9BqL,EAAiB,WACrBD,GAAiBD,EACnB,EAEMG,GAAU3C,EAAAA,GAAAA,QAAO,MAEvB,OACErN,EAAAA,GAAAA,MAACiQ,GAAAA,GAAS,CAAAxU,SAAA,EACRP,EAAAA,GAAAA,KAACgV,GAAAA,GAAU,CAAAzU,SAAE6I,EAAE,4CAEfpJ,EAAAA,GAAAA,KAACiV,GAAAA,GAAW,CAACzK,QAASvB,EAAa1I,UACjCP,EAAAA,GAAAA,KAACkV,GAAAA,GAAS,CAAA3U,UACRP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,wBAI7BjF,EAAAA,GAAAA,KAACoQ,GAAAA,GAAM,CACLC,cAAe,CACbvF,KAAM,GACN+D,MAAO,GACP2F,SAAU,GACVjB,OAAQ,MAEV5E,iBAAkByF,GAClB3J,SAAU,SAAC0K,EAAQC,GA7BJ,IAAAC,IA8BAF,EA7BZzJ,GAAS4J,EAAAA,GAAAA,IAAcD,IA8BxBD,EAAQG,WACV,EAAEhV,SAED,SAAAiF,GAAA,IAAG2P,EAAM3P,EAAN2P,OAAQK,EAAahQ,EAAbgQ,cAAa,OACvB1Q,EAAAA,GAAAA,MAAC2Q,GAAAA,GAAU,CAAAlV,SAAA,EACTuE,EAAAA,GAAAA,MAAC4Q,GAAAA,GAAc,CAAAnV,SAAA,EACbuE,EAAAA,GAAAA,MAAC6Q,GAAAA,GAAK,CAAApV,SAAA,EACJP,EAAAA,GAAAA,KAAA,SACE4V,QAAM,EACN7D,IAAK+C,EACL3J,KAAK,OACLL,KAAK,SACLjI,SAAU,SAAAQ,GACRmS,EAAc,SAAUnS,EAAEE,OAAOsS,MAAM,GACzC,IAEDV,EAAO5B,QACNvT,EAAAA,GAAAA,KAAC0T,GAAmB,CAACC,KAAMwB,EAAO5B,UAElCvT,EAAAA,GAAAA,KAACsT,GAAa,CAACC,OAAQA,QAI3BvT,EAAAA,GAAAA,KAAC8V,GAAAA,GAAS,CAAC3K,KAAK,SAASX,QAAS,kBAAMsK,EAAQzC,QAAQ0D,OAAO,EAACxV,UAC9DP,EAAAA,GAAAA,KAACgW,GAAAA,GAAQ,CAAAzV,UACPP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,wBAK/BH,EAAAA,GAAAA,MAACmR,GAAAA,GAAW,CAACC,QAAQ,OAAM3V,SAAA,EACzBP,EAAAA,GAAAA,KAACmW,GAAAA,GAAW,CACVhL,KAAK,OACLL,KAAK,OACL3I,YAAaiH,EAAE,2CAEjBpJ,EAAAA,GAAAA,KAACoW,GAAAA,GAAU,CAAC3F,UAAU,OAAO3F,KAAK,aAGpChG,EAAAA,GAAAA,MAACmR,GAAAA,GAAW,CAACC,QAAQ,QAAO3V,SAAA,EAC1BP,EAAAA,GAAAA,KAACmW,GAAAA,GAAW,CACVhL,KAAK,QACLL,KAAK,QACL3I,YAAaiH,EAAE,4CAEjBpJ,EAAAA,GAAAA,KAACoW,GAAAA,GAAU,CAAC3F,UAAU,OAAO3F,KAAK,cAGpChG,EAAAA,GAAAA,MAACmR,GAAAA,GAAW,CAACC,QAAQ,WAAU3V,SAAA,EAC7BP,EAAAA,GAAAA,KAACmW,GAAAA,GAAW,CACVhL,KAAMwJ,EAAe,OAAS,WAC9B7J,KAAK,WACL3I,YAAaiH,EAAE,+CAEjBpJ,EAAAA,GAAAA,KAACoW,GAAAA,GAAU,CAAC3F,UAAU,OAAO3F,KAAK,cAClC9K,EAAAA,GAAAA,KAACqW,GAAAA,GAAO,CAAClL,KAAK,SAASX,QAASqK,EAAetU,UAC7CP,EAAAA,GAAAA,KAACsW,GAAAA,GAAO,CAAA/V,UACNP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,uBAK/BjF,EAAAA,GAAAA,KAACuW,GAAAA,GAAM,CAACpL,KAAK,SAASX,QAASvB,EAAa1I,SACzC6I,EAAE,4CAEM,MAKvB,E,WChIAlD,KAAAA,cAAoB,SAEb,I,MAAMsQ,GAAW,WACtB,IAAMC,GAAWjK,EAAAA,GAAAA,IAAYkK,GAAAA,IACvBC,GAAanK,EAAAA,GAAAA,IAAYoK,GAAAA,IAC/BvN,GAAsCC,EAAAA,GAAAA,WAAS,GAAME,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAA9CN,EAAWS,EAAA,GAAE0H,EAAc1H,EAAA,GAE5BqN,EACJF,GACA,IAAIG,IAAIH,EAAY,qDAMhBI,EAAa,WACjB7F,GAAe,EACjB,EACA,OACEpM,EAAAA,GAAAA,MAACoO,GAAc,CAAA3S,SAAA,EACbP,EAAAA,GAAAA,KAACoT,GAAc,CAAA7S,SAAEkW,EAAS3L,QAC1B9K,EAAAA,GAAAA,KAACmT,GAAa,CAAChI,KAAK,SAASX,QAVf,WAChB0G,GAAe,EACjB,EAQoD3Q,SAC3CoW,GACD3W,EAAAA,GAAAA,KAACqT,GAAe,CACd9H,IAAKsL,EACLvL,IAAI,aACJ9K,MAAO,GACPC,OAAQ,MAGVT,EAAAA,GAAAA,KAACgX,GAAAA,GAAY,CAAAzW,UACXP,EAAAA,GAAAA,KAAA,OAAK+E,UAAS,GAAAC,OAAKC,GAAAA,EAAM,qBAK/BjF,EAAAA,GAAAA,KAACkG,KAAK,CACJjC,OAAQ8E,EACRuB,eAAgByM,EAChB3M,iBAAkB,gBAClBC,UAAW,gBACX4M,eAAgB,IAAI1W,UAEpBP,EAAAA,GAAAA,KAAC0U,GAAgB,CAACzL,aAAc8N,EAAYxD,OAAQsD,QAI5D,ECrDaK,GAAS,WACpB,OAEIpS,EAAAA,GAAAA,MAAC6N,GAAY,CAAApS,SAAA,EACXP,EAAAA,GAAAA,KAACgS,GAAU,KACXlN,EAAAA,GAAAA,MAAC8N,GAAuB,CAAArS,SAAA,EACtBP,EAAAA,GAAAA,KAACgD,GAAc,KACfhD,EAAAA,GAAAA,KAACgT,GAAa,KACdhT,EAAAA,GAAAA,KAACwW,GAAQ,SAKnB,E,WCrBaW,GAAc1T,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,yUAmBxByT,GAAgB3T,GAAAA,GAAAA,IAAUO,KAAAA,IAAAL,EAAAA,GAAAA,GAAA,uE,WCZxB,SAAS0T,KACtB,IAAAhO,GAAwCC,EAAAA,GAAAA,UAASgO,OAAOC,YAAc,MAAK/N,GAAAC,EAAAA,GAAAA,GAAAJ,EAAA,GAApEmO,EAAYhO,EAAA,GAAEiO,EAAejO,EAAA,GAGlC/G,GACEC,EAAAA,GAAAA,IAAe,UADjBD,KAmBF,OAhBAiK,EAAAA,GAAAA,YAAU,WACR,IAAMiF,EAAMlP,EAAKkP,IAAIlP,EAAKmP,UAC1BY,SAASkF,gBAAgB/F,IAAMA,CACjC,GAAG,CAAClP,EAAMA,EAAKmP,YACflF,EAAAA,GAAAA,YAAU,WACR,IAAMiL,EAAe,WACnBF,EAAgBH,OAAOC,YAAc,KACvC,EAIA,OAFAD,OAAO7E,iBAAiB,SAAUkF,GAE3B,WACLL,OAAO5E,oBAAoB,SAAUiF,EACvC,CACF,GAAG,KAGD7S,EAAAA,GAAAA,MAACqS,GAAW,CAAA5W,SAAA,EACVP,EAAAA,GAAAA,KAAC4X,GAAAA,EAAM,CAAArX,UACLP,EAAAA,GAAAA,KAAA,SAAAO,SAAO,aAERiX,IAAgBxX,EAAAA,GAAAA,KAAC6R,GAAO,KACzB/M,EAAAA,GAAAA,MAACsS,GAAa,CAAA7W,SAAA,EACZP,EAAAA,GAAAA,KAACkX,GAAM,KACPlX,EAAAA,GAAAA,KAAC6X,GAAAA,QAAW,SAIpB,C","sources":["components/Select/Select.jsx","components/SelectLanguage/SelectLanguage.jsx","components/Header/BurgerMenu/BurgerMenu.styled.js","components/Sidebar/Logo/Logo.styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/BoardListItem/BoardListItem.styled.js","components/boardModals/ModalsBase/BoardModalBase.styled.jsx","images/mini/index.js","components/boardModals/ModalsBase/BoardModalBase.jsx","components/Sidebar/BoardListItem/BoardListItem.jsx","components/Sidebar/BoardList/BoardList.styled.js","components/Sidebar/BoardList/BoardList.jsx","components/boardModals/addBoardButton/addBoardButton.styled.jsx","components/boardModals/addBoardButton/addBoardButton.jsx","components/boardModals/addBoard.jsx","components/Sidebar/SidebarNav/SidebarNav.styled.js","components/NeedHelpModal/NeedHelpModal.styled.jsx","components/NeedHelpModal/NeedHelpModal.jsx","components/HelpApp/HelpApp.styled.js","components/HelpApp/HelpApp.jsx","components/Sidebar/SidebarNav/SidebarNav.jsx","components/Sidebar/Sidebar.styled.js","components/Sidebar/Sidebar.jsx","components/Header/BurgerMenu/BurgerMenu.jsx","components/Header/Header.styled.js","components/Header/ThemeDropDown/ThemeDropDown.jsx","components/Header/UserInfo/UserInfo.styled.js","components/EditProfileModal/PreviewAvatar/PreviewAvatar.jsx","components/EditProfileModal/PreviewAvatar/PreviewUploadAvatar.jsx","components/EditProfileModal/EditProfileModal.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","Pages/HomePage.styled.js","Pages/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport Select, {components} from 'react-select';\nimport { useTranslation } from 'react-i18next';\nimport { GrLanguage } from \"react-icons/gr\";\n\nconst CustomDropdownIcon = () => (\n    <GrLanguage/>\n  );\n\nconst IconLanguage = {\n          DropdownIndicator: props => {\n            return (\n              <components.DropdownIndicator {...props}>\n                <CustomDropdownIcon width='32' height='32'/>\n              </components.DropdownIndicator>\n            );\n          },\n        }\n\nconst options = [\n  { value: 'ua', label: 'Ukraine' },\n  { value: 'en', label: 'UK' },\n  { value: 'cn', label: 'China' },\n  { value: 'he', label: 'Israel' },\n  { value: 'de', label: 'Germany' },\n  { value: 'es', label: 'Spain' },\n  { value: 'ita', label: 'Italy' },\n  { value: 'fr', label: 'France' },\n  { value: 'jp', label: 'Japan' },\n  { value: 'pl', label: 'Poland' },\n  { value: 'ro', label: 'Romania' },\n  { value: 'ar', label: 'Turkey' },\n  { value: 'gr', label: 'Greece' },\n];\n\n const customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    margin: 'auto 0',\n    padding: '0',\n    minHeight: '0',\n    lineHeight: '1',\n\n  }),\n\n  downChevron:  provided => ({\n    ...provided,\n    width: '32px',\n    height: '32px',\n    padding: '0',\n   \n  }),\n  \n  IndicatorContainer:  provided => ({\n    ...provided,\n    // width: '32px',\n    // height: '32px',\n    // padding: '0',\n    // margin: '0'\n   display: 'none'\n  }),\n\n  indicatorSeparator: \n  provided => ({\n    ...provided,\n   display: 'none'\n  }),\n\n  input: (provided) => ({\n    ...provided,\n    display: 'none'\n  }),\n\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: '0',\n  color: 'rgb(22, 22, 22, 0.8)',\n  '&:hover, &:focus': {\n    color: '#5255bc',\n  },\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: state.isSelected ? '#5255BC' : 'rgb(22, 22, 22)',\n    \n    '&:hover': {\n      backgroundColor: '#FCFCFC',\n      color: '#5255BC'\n    }\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    display: 'none'\n}),\n    menu: (provided) => ({\n        ...provided,\n        maxHeight: '120px',\n        width: '110px',\n\n        backgroundColor: 'white',\n        borderRadius: '8px',\n\n       overflowY: 'auto',\n        '&::-webkit-scrollbar': {\n          width: '4px',\n          \n          \n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: 'rgba(22, 22, 22, 0.2)',\n          borderRadius: '8px',\n          \n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'transparent',\n        },\n    }),\n    menuList: (provided) => ({\n      ...provided,\n      \n      overflowY: 'none',\n    })\n};\n\n\n\nexport const CustomDropdown = () => {\n    const { i18n } = useTranslation('global');\n\n  const handleChangeLanguage = selectedOption => {\n    i18n.changeLanguage(selectedOption.value);\n  };\n  return (\n    <Select\n    components={IconLanguage}\n      options={options}\n      styles={customStyles}\n      onChange={handleChangeLanguage}\n      placeholder=\"\"\n    />\n  );\n};\n\nexport default CustomDropdown;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CustomDropdown from 'components/Select/Select';\n\n\nexport const SelectLanguage = () => {\n  const { i18n } = useTranslation('global');\n\n  const handleChange = lang => {\n    i18n.changeLanguage(lang);\n  };\n\n  const handleChangeLanguage = e => {\n    const selectedLanguage = e.target.value;\n    handleChange(selectedLanguage);\n  };\n\n  return (\n      <CustomDropdown handleChangeLanguage={handleChangeLanguage} handleChange={handleChange}/>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BurgerMenuWrapper = styled.div`\n  display: flex;\n  /* @media screen and (max-width: 375px) {\n    padding-left: ${p => p.theme.spacing(5)};\n  } */\n`;\n\nexport const StyledBurgerMenu = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: auto 0;\n  padding: 0;\n  position: relative;\n  display: ${props => (props.isOpen ? 'display: flex;' : '')};\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const StyledSVGBurger = styled.svg`\n  stroke: rgb(22, 22, 22);\n  width: 100%;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLogoWrapper = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  padding: 14px 14px 0 14px;\n\n  @media screen and (min-width: 768px) {\n   padding: 24px 24px 0 24px;\n }\n`;\n\nexport const StyledLogoIcon = styled.span`\n  display: flex;\n  border-radius: ${p => p.theme.radius.m};\n  width: 32px;\n  height: 32px;\n  background-color: #ecedfd;\n`;\nexport const StyledLogoText = styled.p`\n  display: flex;\n  margin: auto 0;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #ffffff;\n`;\n\nexport const StyledSVGLogo = styled.svg`\n  fill: ${p => p.theme.violetColors.accentColor};\n`;\n","import sprite from '../../../images/icons.svg';\nimport {\n  StyledLogoIcon,\n  StyledLogoText,\n  StyledLogoWrapper,\n  StyledSVGLogo,\n} from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <StyledLogoWrapper>\n      <StyledLogoIcon>\n        <StyledSVGLogo>\n          <use xlinkHref={`${sprite}#icon-logo2`}></use>\n        </StyledSVGLogo>\n      </StyledLogoIcon>\n\n      <StyledLogoText>Task Pro</StyledLogoText>\n    </StyledLogoWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledBoardList = styled.div`\n  display: flex;\n  padding: 22px 18px 22px 14px;\n  margin: 0 auto;\n  justify-content: space-between;\n  background-color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255, 0.2)' : 'transparent'};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    stroke: ${p => p.theme.colors.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 21px 24px;\n  }\n`;\n\nexport const StyledBoardItem = styled.button`\n  border: none;\n  background: transparent;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: start;\n  padding: 0;\n  display: flex;\n  gap: 4px;\n  color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255)' : 'rgba(255, 255, 255, 0.5)'};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    svg {\n      stroke: ${p => p.theme.colors.white};\n    }\n  }\n  svg {\n    width: 18px;\n    height: 18px;\n    fill: transparent;\n    stroke: ${({ isActive }) =>\n      isActive ? 'rgba(255, 255, 255)' : 'rgba(255, 255, 255, 0.5)'};\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const StyledSVGPensil = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledSVGTrash = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledBoardListBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  display: flex;\n\n  margin: 0;\n  padding: 0;\n`;\nexport const StyledBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`;\n","import styled from 'styled-components'\nimport Modal from 'react-modal'\n\nexport const StyledModal = styled(Modal)`\n    position: relative;\n    width: 100%;\n    height: fit-content;\n    /* max-height: 433px; */\n    max-width: 350px;\n    background-color: ${props => props.theme.currentTheme.modalBgn};\n    border-radius: 8px;\n    box-shadow: 0px 4px 16px 0px ${props => props.theme.currentTheme.grayText};\n    z-index: 3000;\n    transition: transform 0.3s;\n`\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    padding: 24px;\n`\n\nexport const CloseButton = styled.button`\n    position: absolute;\n    background-color: transparent;\n    top: 14px;\n    right: 14px;\n    width: 20px;\n    height: 20px;\n    border: none;\n`\n\nexport const CloseSVG = styled.svg`\n    width: 18px;\n    height: 18px;\n    stroke: ${props => props.theme.currentTheme.mainText};\n`\n\nexport const BigHeader = styled.p`\n    color: ${props => props.theme.currentTheme.mainText};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    letter-spacing: 0.02em;\n`\n\nexport const TitleInput = styled.input`\n    margin: 24px 0;\n    height: 49px;\n    max-width: 302px;\n    background-color: transparent;\n    border: 1px ${props => props.theme.currentTheme.accent} solid;\n    border-radius: 8px;\n    padding: 0 18px;\n    color: ${props => props.theme.currentTheme.mainText};\n    font-family: inherit;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    outline: none;\n    opacity: 0.4;\n\n    &::placeholder {\n        color: ${props => props.theme.currentTheme.mainText};\n        font-family: inherit;\n        line-height: 21px;\n        letter-spacing: 0.02em;\n    }\n\n    &:hover, &:focus {\n        opacity: 1;\n    }\n`\n\nexport const SmallHeader = styled.p`\n    color: ${props => props.theme.currentTheme.mainText};\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    letter-spacing: -2%;\n    padding-bottom: 14px;\n`\n\nexport const List = styled.label`\n    width: 270px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    column-gap: 4px;\n    row-gap: 4px;\n    margin-bottom: 24px;\n`\n\nexport const Radio = styled.input`\n    display: none;\n\n    &:checked + svg {\n        stroke: ${props => props.theme.currentTheme.mainText};\n        cursor: default;\n    }\n\n    &:checked + span {\n        border-color: ${props => props.theme.currentTheme.accent};\n        cursor: default;\n    }\n`\n\nexport const IconSVG = styled.svg`\n    display: inline-block;\n    vertical-align: middle;\n    stroke: ${props => props.theme.currentTheme.iconStroke};\n    cursor: pointer;\n    fill: transparent;\n    width: 18px;\n    height: 18px;\n`\n\nexport const Pic = styled.span`\n    display: inline-block;\n    border: 1px transparent solid;\n    background-color: transparent;\n    z-index: 10;\n    cursor: pointer;\n    border-radius: 8px;\n    width: 28px;\n    height: 28px;\n\n    & > img {\n        border-radius: 6px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display: flex;\n    max-width: 100%;\n    height: 49px;\n    color: ${props => props.theme.currentTheme.plusIconFill};\n    border-radius: 8px;\n    border-color: transparent;\n    font-weight: 500;\n    background-color: ${props => props.theme.currentTheme.accent};\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    column-gap: 9px;\n    margin-top: 16px;\n\n    &:hover {\n        background-color: ${props => props.theme.currentTheme.hoverButton};\n    }\n\n    & > span {\n        display: flex;\n        width: 28px;\n        height: 28px;\n        background-color: ${props => props.theme.currentTheme.plusIconFill};\n        border-radius: 8px;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & > span > svg {\n        width: 14px;\n        height: 14px;\n        stroke: ${props => props.theme.currentTheme.plusIconStroke};\n    }\n`","import p0 from './mini_0.webp'\nimport p1 from './mini_1.webp'\nimport p2 from './mini_2.webp'\nimport p3 from './mini_3.webp'\nimport p4 from './mini_4.webp'\nimport p5 from './mini_5.webp'\nimport p6 from './mini_6.webp'\nimport p7 from './mini_7.webp'\nimport p8 from './mini_8.webp'\nimport p9 from './mini_9.webp'\nimport p10 from './mini_10.webp'\nimport p11 from './mini_11.webp'\nimport p12 from './mini_12.webp'\nimport p13 from './mini_13.webp'\nimport p14 from './mini_14.webp'\nimport p15 from './mini_15.webp'\n\nexport const pictures_mini = { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 }","import React, { useState } from 'react';\nimport sprite from 'images/icons.svg';\nimport {\n  StyledModal,\n  Form,\n  CloseButton,\n  CloseSVG,\n  BigHeader,\n  TitleInput,\n  SmallHeader,\n  List,\n  Radio,\n  IconSVG,\n  Pic,\n  SubmitButton,\n} from './BoardModalBase.styled';\nimport { pictures_mini } from 'images/mini/index';\nimport { useTranslation } from 'react-i18next';\n\nexport const BoardModalBase = ({\n  isModalOpen,\n  info,\n  onCloseModal,\n  action,\n  SubmitForm,\n}) => {\n  const { t } = useTranslation('global');\n  const [title, setTitle] = useState(info.title);\n  const [iconURL, setIcon] = useState(info.iconURL);\n  const [backgroundURL, setBackground] = useState(info.backgroundURL);\n\n  const Icons = [\n    { value: 'icon-Project' },\n    { value: 'icon-star-04' },\n    { value: 'icon-loading-03' },\n    { value: 'icon-puzzle-piece-02' },\n    { value: 'icon-container' },\n    { value: 'icon-lightning-02' },\n    { value: 'icon-colors' },\n    { value: 'icon-hexagon-01' },\n  ];\n\n  const Backgrounds = [\n    { value: 'p0' },\n    { value: 'p1' },\n    { value: 'p2' },\n    { value: 'p3' },\n    { value: 'p4' },\n    { value: 'p5' },\n    { value: 'p6' },\n    { value: 'p7' },\n    { value: 'p8' },\n    { value: 'p9' },\n    { value: 'p10' },\n    { value: 'p11' },\n    { value: 'p12' },\n    { value: 'p13' },\n    { value: 'p14' },\n    { value: 'p15' },\n  ];\n\n  function close() {\n    onCloseModal();\n    setTitle(info.title);\n    setIcon(info.iconURL);\n    setBackground(info.backgroundURL);\n  }\n\n  function sub(event) {\n    event.preventDefault();\n    SubmitForm({ title, iconURL, backgroundURL });\n    setTitle(info.title);\n    setIcon(info.iconURL);\n    setBackground(info.backgroundURL);\n  }\n\n  function handleChange(e) {\n    setTitle(e.target.value);\n  }\n\n  return (\n    <StyledModal\n      isOpen={isModalOpen}\n      overlayClassName={'modal-overlay'}\n      className={'modal-content'}\n      onRequestClose={close}\n      ariaHideApp={false}\n    >\n      <CloseButton onClick={close}>\n        <CloseSVG>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </CloseSVG>\n      </CloseButton>\n\n      <Form onSubmit={event => sub(event)}>\n        <BigHeader>\n          {action === 'add'\n            ? t('screenPage.render.modal.board.titleNew')\n            : t('screenPage.render.modal.board.titleEdit')}\n        </BigHeader>\n\n        <TitleInput\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={e => handleChange(e)}\n          required\n        />\n\n        <SmallHeader>{t('screenPage.render.modal.board.icons')}</SmallHeader>\n        <List>\n          {Icons.map((Icon, index) => (\n            <label key={index}>\n              <Radio\n                type=\"radio\"\n                name=\"icon\"\n                value={Icon.value}\n                checked={Icon.value === iconURL ? true : false}\n                onChange={() => setIcon(Icon.value)}\n              ></Radio>\n              <IconSVG aria-hidden=\"true\">\n                <use xlinkHref={`${sprite}#${Icon.value}`}></use>\n              </IconSVG>\n            </label>\n          ))}\n        </List>\n\n        <SmallHeader>{t('screenPage.render.modal.board.backgr')}</SmallHeader>\n        <List>\n          {Backgrounds.map((Background, index) => (\n            <label key={index}>\n              <Radio\n                type=\"radio\"\n                name=\"background\"\n                value={Background.value}\n                checked={Background.value === backgroundURL ? true : false}\n                onChange={() => setBackground(Background.value)}\n              ></Radio>\n              <Pic>\n                <img\n                  alt=\"icon_option\"\n                  src={pictures_mini[`${Background.value}`]}\n                ></img>\n              </Pic>\n            </label>\n          ))}\n        </List>\n\n        <SubmitButton type=\"submit\">\n          <span>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </svg>\n          </span>\n          {action === 'add' ? t('screenPage.render.modal.board.add-btn') : t('screenPage.render.modal.board.edit-btn')}\n        </SubmitButton>\n      </Form>\n    </StyledModal>\n  );\n};\n","import sprite from '../../../images/icons.svg';\nimport {\n  StyledBoardItem,\n  StyledBoardList,\n  StyledBoardListBtn,\n  StyledBtnWrapper,\n  StyledSVGPensil,\n  StyledSVGTrash,\n} from './BoardListItem.styled';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getBoardById, deleteBoard, editBoard } from 'redux/boards/operations';\nimport { BoardModalBase } from 'components/boardModals/ModalsBase/BoardModalBase';\nimport { Link } from 'react-router-dom';\n\nexport const BoardListItem = ({ board, isActive, onClick }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n  const [isModalOpen, setOpenModal] = useState(false);\n\n  function CloseModal() {\n    setOpenModal(false);\n  }\n\n  function OpenModal() {\n    setOpenModal(true);\n  }\n\n  function SubmitForm(info) {\n    const { _id } = board;\n    dispatch(editBoard({ _id, info }));\n    setOpenModal(false);\n  }\n\n  function HandleDelete() {\n    dispatch(deleteBoard(board._id));\n    navigate('/home')\n  }\n\n  return (\n    <StyledBoardList isActive={isActive} onClick={onClick}>\n      {/* <StyledBoardItem to={`/home/${board._id}`}></StyledBoardItem> */}\n\n      <StyledBoardItem\n        type=\"button\"\n        isActive={isActive}\n        onClick={() => {\n          onClick();\n          dispatch(getBoardById(board._id));\n        }}\n      >\n        <svg>\n          <use xlinkHref={`${sprite}#${board.iconURL}`}></use>\n        </svg>\n\n        <Link to={`/home/${board._id}`}>{board.title}</Link>\n      </StyledBoardItem>\n\n      <StyledBtnWrapper isActive={isActive} onClick={onClick}>\n        <StyledBoardListBtn onClick={OpenModal} type=\"button\">\n          <StyledSVGPensil>\n            <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n          </StyledSVGPensil>\n        </StyledBoardListBtn>\n\n        <StyledBoardListBtn onClick={HandleDelete} type=\"button\">\n          <StyledSVGTrash>\n            <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n          </StyledSVGTrash>\n        </StyledBoardListBtn>\n      </StyledBtnWrapper>\n\n      <BoardModalBase\n        isModalOpen={isModalOpen}\n        info={board}\n        onCloseModal={CloseModal}\n        action={'edit'}\n        SubmitForm={SubmitForm}\n      />\n    </StyledBoardList>\n  );\n};\n","import styled from 'styled-components';\nimport '../../../index.css';\n\nexport const StyledBoardListWrapper = styled.ul`\n  height: 126px;\n  overflow-y: scroll;\n  margin: 0 -14px;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n    height: 60px;\n    border-radius: 4px 0 0 4px;\n    margin-left: ${p => p.theme.spacing(3.5)};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #fff;\n    border-radius: 4px 0 0 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0 -24px;\n  }\n \n`;\n","import { BoardListItem } from '../BoardListItem/BoardListItem';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBoards } from 'redux/boards/operations';\nimport { selectAllBoards } from 'redux/boards/selectors';\nimport { StyledBoardListWrapper } from './BoardList.styled';\n\nexport const BoardList = () => {\n  const dispatch = useDispatch()\n  const boards = useSelector(selectAllBoards)\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const [activeItem, setActiveItem] = useState(null);\n\n  const handleBoardClick = board => {\n    setActiveItem(board);\n  };\n  return (\n    <>\n      {boards.length > 0 && (\n        <StyledBoardListWrapper>\n          {boards.map(board => (\n            <li\n              key={board._id}\n              >\n              <BoardListItem\n                board={board}\n                isActive={board === activeItem}\n                onClick={() => handleBoardClick(board)}\n              />\n            </li>\n          ))}\n        </StyledBoardListWrapper>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components'\n\nexport const StyledSVG = styled.svg`\n  stroke: ${props => props.theme.colors.white};\n  width: 20px;\n  height: 20px;\n`\n\nexport const StyledButton = styled.span`\n\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color: rgb(184, 188, 253);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n\n  &:hover {\n    background-color: rgba(151, 156, 234, 1);\n  }\n`\n\nexport const StyledCreateBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 100%;\n    font-weight: 500;\n    line-height: 1.5;\n    text-align: start;\n\n    color: rgb(255, 255, 255);\n    padding: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`","import React from 'react';\nimport sprite from 'images/icons.svg';\nimport {\n  StyledCreateBtn,\n  StyledButton,\n  StyledSVG,\n} from './addBoardButton.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddBoardButton = ({ onClick }) => {\n  const { t } = useTranslation('global');\n  return (\n    <StyledCreateBtn onClick={onClick}>\n      {t('screenPage.static.addBoard')}\n      <StyledButton>\n        <StyledSVG>\n          <use xlinkHref={`${sprite}#icon-plus`}></use>\n        </StyledSVG>\n      </StyledButton>\n    </StyledCreateBtn>\n  );\n};\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { AddBoardButton } from './addBoardButton/addBoardButton'\nimport { BoardModalBase } from './ModalsBase/BoardModalBase'\nimport { addBoard } from 'redux/boards/operations'\n\nexport const AddBoard = () => {\n    const dispatch = useDispatch()\n    const [isModalOpen, setOpenModal] = useState(false)\n\n    function CloseModal() {\n        setOpenModal(false)\n    }\n\n    function OpenModal(event) {\n        event.stopPropagation()\n        setOpenModal(true)\n    }\n\n    function SubmitForm(info) {\n        dispatch(addBoard(info))\n        setOpenModal(false)\n    }\n\n    return (\n        <>\n            <AddBoardButton onClick={(event) => OpenModal(event)} />\n            <BoardModalBase isModalOpen={isModalOpen} info={{ title: '', iconURL: 'icon-Project', backgroundURL: '0' }} onCloseModal={CloseModal} action={'add'} SubmitForm={SubmitForm}/>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 70px 14px 14px;\n  height: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 60px 24px 24px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.5);\n  padding-bottom: ${p => p.theme.spacing(2)};\n  letter-spacing: -0.02em;\n`;\n\nexport const StyledCreateWrapper = styled.div`\n  padding: ${p => p.theme.spacing(3.5)} 0;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n`;\nexport const StyledLogoutBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 100%;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  color: rgb(255, 255, 255);\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(3.5)};\n  align-items: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\n// export const StyledSVGPlus = styled.svg`\n//   fill: ${p => p.theme.violetColors.accentColor};\n//   stroke: rgb(255, 255, 255);\n//   width: 20px;\n//   height: 20px;\n//   padding: 8px 10px;\n// `;\n\nexport const StyledSVGLogout = styled.svg`\n  fill: transparent;\n  stroke: white;\n\n  width: 32px;\n  height: 32px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.darkTextColor};\n    opacity: 0.5;\n  }\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  gap: 24px;\n`;\n\nexport const Boards = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 100%;\n  max-width: 335px;\n  min-width: 320px;\n  height: 355px;  \n  background: ${p => p.theme.currentTheme.modalBgn};\n  border-radius: ${p => p.theme.radius.m};\n  border: none;\n  padding: 24px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n\n  @media (min-width: 768px) {\n    width: 400px;\n  }\n  @media (min-width: 335px) {\n    width: 335px;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  margin-bottom: ${p => p.theme.spacing(6)};\n  color:  ${p => p.theme.currentTheme.mainText};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n  border: 1px solid ${p => p.theme.currentTheme.accent};\n  border-radius: ${p => p.theme.radius.m};\n  box-sizing: border-box;\n  opacity: 0.4;\n  margin-bottom: 14px; \n  letter-spacing: -0.02em;  \n  outline: none;\n  background: ${p => p.theme.currentTheme.inputBgn};\n  color:  ${p => p.theme.currentTheme.maintext};\n  &:placeholder {\n    font-size: 14px;\n\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const CommentInput = styled.textarea`\n  width: 100%;\n  height: 120px;   \n  padding: 14px 18px; \n  border: 1px solid  ${p => p.theme.currentTheme.accent};\n  border-radius: ${p => p.theme.radius.m};\n  box-sizing: border-box;\n  resize: none;\n  opacity: 0.4;    \n  letter-spacing: -0.02em;\n  margin-bottom: 24px;\n  outline: none; \n  background: ${p => p.theme.currentTheme.inputBgn};\n  color:  ${p => p.theme.currentTheme.maintext};\n  &:placeholder {\n    font-size: 14px;    \n  }\n   &:focus {\n    opacity: 1;\n  } \n\n`;\n\nexport const SendButton = styled.button`\n  width: 100%;  \n  padding: 14px;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  cursor: pointer;\n  background-color: ${p => p.theme.currentTheme.accent};\n color:${p => p.theme.colors.white};\n  font-weight: 500;  \n  letter-spacing: -0.02em;\n  text-align: center;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover {\n  background-color: ${props => props.theme.currentTheme.hoverButton};\n}\n`;\nexport const StyledSvgClose = styled.svg`\n  fill:  ${p => p.theme.currentTheme.modalBgn};\n  stroke: ${props => props.theme.currentTheme.iconNeedHelp};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n  @media (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import Modal from 'react-modal';\nimport sprite from '../../images/icons.svg';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ModalWrapper,\n  CloseButton,\n  ModalTitle,\n  Input,\n  CommentInput,\n  SendButton,\n  StyledSvgClose,\n} from './NeedHelpModal.styled';\nimport { sendHelpRequest } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Please enter a valid email address').required(''),\n  comment: Yup.string().required(''),\n});\n\nexport const NeedHelpModal = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation('global');\n\n  const handleSend = async ({ email, comment }) => {\n    dispatch(sendHelpRequest({ email, comment }))\n      .then(() => {\n        console.log('Request sent successfully');\n        onClose();\n      })\n      .catch(error => {\n        console.error('Error sending request:', error);\n      });\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal-content\"\n      onRequestClose={onClose}\n      ariaHideApp={false}\n    >\n      <ModalWrapper>\n        <CloseButton onClick={onClose}>\n          <StyledSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </StyledSvgClose>\n        </CloseButton>\n        <ModalTitle>{t('screenPage.static.needHelp')}</ModalTitle>\n        <Formik\n          initialValues={{ email: '', comment: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSend}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('screenPage.render.modal.help.email')}\n                as={Field}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n              <Field\n                type=\"text\"\n                name=\"comment\"\n                placeholder={t('screenPage.render.modal.help.text')}\n                as={CommentInput} \n                            \n              />\n              <ErrorMessage\n                name=\"comment\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n              <SendButton type=\"submit\">{t('screenPage.render.modal.profile.send')}</SendButton>\n            </Form>\n          )}\n        </Formik>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n","import styled from \"styled-components\";\n\n export const HelpContainer = styled.div` \n box-sizing: border-box; \n display:flex;\n flex-wrap: wrap;\n width: 197px;\n  border: 1px solid #9092D6;\n  padding: 14px;\n  background-color: ${p => p.theme.currentTheme.helpBlockColor};\n  border-radius: 8px;\n  \n  @media (min-width: 768px) {\n    width: 212px;  \n    padding: 20px;\n  }\n  `;\n  \nexport const HelpImage = styled.img`\n  max-width: 54px;\n  height: 78px;\n  margin-bottom:14px;\n margin-right:100px\n\n`;\n\nexport const HelpText = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  color:${p => p.theme.currentTheme.iconNeedHelp};\n  margin-bottom:18px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  };\n`;\n\nexport const HelpButton = styled.button`\n  width: 20px;\n  height: 20px;\n  display:flex;\n  border-radius: 50%;\n  border:none;\n  color:  ${p => p.theme.currentTheme.iconNeedHelp};\n  cursor: pointer;\n  margin-right: 11px;\n  padding:0;\n  position: relative; \n  background: transparent;\n`;\n  \n  \n  export const ButtonText= styled.div`\n  display:flex;  \n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  cursor: pointer;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n`;\n  \n  export const IconContainer = styled.div`\n  font-size: 1.7em;\n  \n  position: absolute;\n  top: 0%;\n  left: 0%;\n  transform: translate(-10%, -10%); \n`;\n\n export const TaskPro = styled.span`\n  color: ${p => p.theme.currentTheme.accent};\n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  \n  @media (min-width: 768px) {\n    font-size: 14px;\n  };\n\n`;\n\n","import React, { useState } from 'react';\nimport { NeedHelpModal } from 'components/NeedHelpModal/NeedHelpModal.jsx';\nimport { HelpContainer, HelpImage, HelpButton, HelpText, ButtonText, IconContainer, TaskPro} from './HelpApp.styled.js';\nimport flowerImage from './../../images/flower.png';\nimport { CiCircleQuestion } from \"react-icons/ci\";\nimport { useTranslation } from 'react-i18next';\n\nconst HelpApp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation('global');\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  \n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HelpContainer>\n      <HelpImage src={flowerImage} alt=\"flower\" />\n      <HelpText>\n        {t('screenPage.static.help')} <TaskPro >TaskPro</TaskPro>{t('screenPage.static.help2')}\n      </HelpText>\n      <HelpButton onClick={openModal}>\n        <IconContainer>\n          <CiCircleQuestion/>\n        </IconContainer>\n      </HelpButton>\n     \n      <ButtonText onClick={openModal}>{t('screenPage.static.needHelp')}</ButtonText>\n\n      {isModalOpen && \n        <NeedHelpModal \n          isOpen={isModalOpen}\n          onClose={closeModal}\n        />\n      }\n    </HelpContainer>\n  );\n}; \nexport default HelpApp;\n\n","// needhelp\n// import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport sprite from '../../../images/icons.svg';\nimport { BoardList } from '../BoardList/BoardList';\nimport { AddBoard } from \"components/boardModals/addBoard\";\nimport {\n  Boards,\n  ItemsWrapper,\n  SidebarWrapper,\n  StyledCreateWrapper,\n  StyledLogoutBtn,\n  StyledSVGLogout,\n  StyledText,\n} from './SidebarNav.styled';\nimport { logout } from 'redux/auth/operations';\nimport HelpApp from 'components/HelpApp/HelpApp.jsx';\n\nexport const SidebarNav = () => {\n  const dispatch = useDispatch();\nconst navigate = useNavigate()\n\n  const handleClick = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  const { t } = useTranslation('global');\n  return (\n    <SidebarWrapper>\n      <StyledText>{t('screenPage.static.my-boards')}</StyledText>\n     <Boards> \n      <StyledCreateWrapper>\n        <AddBoard />\n      </StyledCreateWrapper>\n      <BoardList />\n</Boards>\n      <ItemsWrapper>\n        <HelpApp />\n        <StyledLogoutBtn type=\"button\" onClick={handleClick}>\n          <StyledSVGLogout>\n            <use xlinkHref={`${sprite}#icon-login`}></use>\n          </StyledSVGLogout>\n          {t('screenPage.static.logout')}\n        </StyledLogoutBtn>\n      </ItemsWrapper>\n    </SidebarWrapper>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nexport const DarkBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(21, 21, 21, 0.3);\n  z-index: 999;\n`;\n\nexport const StyledSidebar = styled.aside`\n  width: 225px;\n  height: 100vh;\n  background-color: ${p => p.theme.violetColors.accentColor};\n  z-index: 999;\n  position: absolute;\n  top: 0;\n  left: 0;\n  \n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\nflex-direction: column;;\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n  }\n  ${() => {\n  const {i18n} = useTranslation('global')\n    const dir = i18n.dir(i18n.language);\n\n    if (dir === 'rtl') {\n      return `\n        right: 0;\n        left: auto;\n      `;\n    } else {\n      return `\n        left: 0;\n        right: auto;\n      `;\n    }\n  }}\n  @media screen and (min-width: 1440px) {\n    z-index: 0;\n    position: static;\n    top: 0;\n    left: 0;\n  }\n`;\n","import { Logo } from './Logo/Logo';\nimport { SidebarNav } from './SidebarNav/SidebarNav';\nimport { StyledSidebar } from './Sidebar.styled';\nimport { forwardRef } from 'react';\n\nexport const Sidebar = forwardRef((props, ref) => {\n  return (\n    <StyledSidebar ref={ref}>\n      <Logo />\n      <SidebarNav />\n    </StyledSidebar>\n  );\n});\n","import { useEffect, useRef, useState } from 'react';\nimport sprite from '../../../images/icons.svg';\nimport {\n  BurgerMenuWrapper,\n  StyledBurgerMenu,\n  StyledSVGBurger,\n} from './BurgerMenu.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DarkBackground } from 'components/Sidebar/Sidebar.styled';\n\nexport const BurgerMenu = () => {\n  const [isOpen, setOpen] = useState(false);\n  const burgerMenuRef = useRef(null);\n  const sidebarRef = useRef(null);\n\n  const hendleOpenSidebar = () => {\n    console.log('Opening sidebar');\n    setOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    console.log('burgerMenuRef:', burgerMenuRef.current);\n    console.log('sidebarRef:', sidebarRef.current);\n    const handleClickClose = event => {\n      if (\n        burgerMenuRef.current &&\n        !burgerMenuRef.current.contains(event.target) &&\n        sidebarRef.current &&\n        !sidebarRef.current.contains(event.target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickClose);\n\n    return () => document.removeEventListener('click', handleClickClose);\n  }, [burgerMenuRef, sidebarRef]);\n\n  return (\n    <BurgerMenuWrapper>\n      <StyledBurgerMenu\n        type=\"button\"\n        onClick={hendleOpenSidebar}\n        isOpen={isOpen}\n        ref={burgerMenuRef}\n      >\n        <StyledSVGBurger>\n          <use xlinkHref={`${sprite}#icon-menu-01`}></use>\n        </StyledSVGBurger>\n      </StyledBurgerMenu>\n      {isOpen && (\n        <div>\n          <DarkBackground />\n          <Sidebar ref={sidebarRef} />\n        </div>\n      )}\n    </BurgerMenuWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n\n  display: flex;\n  justify-content: space-between;\n\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(5)};\n\n\n  @media screen and (min-width: 768px) {\n    padding: ${p => p.theme.spacing(4.5)} ${p => p.theme.spacing(8)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 0;\n    padding: 18px 24px;\n  }\n`;\n\nexport const StyledHeaderItemWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n\n`;\n","// import { hover } from '@testing-library/user-event/dist/hover';\nimport React from 'react';\nimport Select from 'react-select';\n// import '../../Header/ThemeDropDown/theme.css';\nimport { useDispatch} from 'react-redux';\nimport { changeTheme } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst options = [\n  { value: 'light', label: 'Light' },\n  { value: 'dark', label: 'Dark' },\n  { value: 'violet', label: 'Violet' },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'transparent',\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    margin: 'auto 0',\n    padding: '0',\n    minHeight: '0',\n    lineHeight: '1'\n  }),\n\n  downChevron:  provided => ({\n    ...provided,\n    width: '16px',\n    height: '16px',\n    padding: '0',\n    margin: '0 auto'\n   \n  }),\n\n  indicatorSeparator: \n  provided => ({\n    ...provided,\n   display: 'none'\n  }),\n\n  input: (provided) => ({\n    ...provided,\n    display: 'none'\n  }),\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: '0',\n    margin: 'auto 0',\n    \n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: state.isSelected ? '#5255BC' :'rgb(22, 22, 22)',\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    fontWeight: '500',\n    fontSize: '14px',\n    letterSpacing: '-0.02em',\n    color: 'rgba(22, 22, 22, 0.8)',\n  }),\n};\n\n\nexport const ThemeDropDown = () => {\n  const {t} = useTranslation('global')\n  const dispatch = useDispatch();\n\n  const handleChangeTheme = ( options) => {\n    // i18n.changeLanguage(selectedOption.value);\n    const theme = options.value;\n    console.log(theme);\n    dispatch(changeTheme( {theme} ));\n  };\n \n  return (\n    <Select \n    // value={currentTheme} \n    // onChange={handleThemeChange}\n      options={options}\n      styles={customStyles}\n      onChange={handleChangeTheme}\n      placeholder={t('screenPage.static.theme')}\n      // classNamePrefix=\"custom-select\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledUserInfo = styled.div`\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const StyledUserBtn = styled.button`\n  width: 32px;\n  height: 32px;\n  background-color: transparent;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  padding: 0;\n`;\n\nexport const StyledUserName = styled.p`\n  color: ${p => p.theme.colors.darkTextColor};\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  margin: auto 0;\n`;\n\nexport const StyledUserPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radius.m};\n`;\n","import React from 'react';\nimport { IconUser } from '../EditProfileModal.styled';\nimport sprite from '../../../images/icons.svg';\n\nexport const PreviewAvatar = ({ avatar }) => {\n    \n  return (\n    <>\n      {avatar ? (\n        <img src={avatar.href} alt=\"user-avatar\" />\n      ) : (\n        <IconUser>\n          <use xlinkHref={`${sprite}#icon-user`}></use>\n        </IconUser>\n      )}\n    </>\n  );\n};","import React, { useState } from 'react';\nimport { UploadImage } from '../EditProfileModal.styled';\n\nexport const PreviewUploadAvatar = ({ file }) => {\n  const [preview, setPreview] = useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>{preview && <UploadImage src={preview} alt=\"user-avatar\" />}</>\n  );\n};","import React, { useRef, useState } from 'react';\nimport {\n  AddButton,\n  Button,\n  CLoseButton,\n  ErrMessage,\n  HideBtn,\n  IconClose,\n  IconEye,\n  IconPlus,\n  // ImageUser,\n  ModalWrap,\n  ProfileFotoBox,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n  Thumb,\n  TitleModal,\n} from './EditProfileModal.styled.js';\n\nimport sprite from '../../images/icons.svg';\nimport { PreviewAvatar } from './PreviewAvatar/PreviewAvatar.jsx';\nimport { PreviewUploadAvatar } from './PreviewAvatar/PreviewUploadAvatar.jsx';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { updateProfile } from 'redux/auth/operations.js';\nimport { useTranslation } from 'react-i18next';\n\nconst editFormSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short').max(30, 'To long'),\n  email: Yup.string().email('Please enter a valid email address'),\n\n  password: Yup.string()\n    .min(5, 'The password should be at least 5 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const EditProfileModal = ({ onCloseModal, avatar }) => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const handleSubmit = credentials => {\n    return dispatch(updateProfile(credentials));\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const onShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const fileRef = useRef(null);\n\n  return (\n    <ModalWrap>\n      <TitleModal>{t('screenPage.render.modal.profile.title')}</TitleModal>\n\n      <CLoseButton onClick={onCloseModal}>\n        <IconClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </IconClose>\n      </CLoseButton>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          avatar: null,\n        }}\n        validationSchema={editFormSchema}\n        onSubmit={(values, actions) => {\n          handleSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        {({ values, setFieldValue }) => (\n          <StyledForm>\n            <ProfileFotoBox>\n              <Thumb>\n                <input\n                  hidden\n                  ref={fileRef}\n                  type=\"file\"\n                  name=\"avatar\"\n                  onChange={e => {\n                    setFieldValue('avatar', e.target.files[0]);\n                  }}\n                />\n                {values.avatar ? (\n                  <PreviewUploadAvatar file={values.avatar} />\n                ) : (\n                  <PreviewAvatar avatar={avatar} />\n                )}\n              </Thumb>\n\n              <AddButton type=\"button\" onClick={() => fileRef.current.click()}>\n                <IconPlus>\n                  <use xlinkHref={`${sprite}#icon-plus`}></use>\n                </IconPlus>\n              </AddButton>\n            </ProfileFotoBox>\n\n            <StyledLabel htmlFor=\"name\">\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                placeholder={t('screenPage.render.modal.profile.name')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"name\" />\n            </StyledLabel>\n\n            <StyledLabel htmlFor=\"email\">\n              <StyledField\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('screenPage.render.modal.profile.email')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"email\" />\n            </StyledLabel>\n\n            <StyledLabel htmlFor=\"password\">\n              <StyledField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder={t('screenPage.render.modal.profile.password')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"password\" />\n              <HideBtn type=\"button\" onClick={onShowPassword}>\n                <IconEye>\n                  <use xlinkHref={`${sprite}#icon-eye`}></use>\n                </IconEye>\n              </HideBtn>\n            </StyledLabel>\n\n            <Button type=\"submit\" onClick={onCloseModal}>\n              {t('screenPage.render.modal.profile.send')}\n            </Button>\n          </StyledForm>\n        )}\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import {\n  StyledUserInfo,\n  StyledUserName,\n  StyledUserPhoto,\n  StyledUserBtn,\n} from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditProfileModal } from 'components/EditProfileModal/EditProfileModal';\nimport '../../EditProfileModal/EditModal.css';\nimport { selectAvatar, selectUser } from 'redux/auth/selectors';\nimport { IconUserInfo } from 'components/EditProfileModal/EditProfileModal.styled';\nimport sprite from '../../../images/icons.svg';\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n  const userName = useSelector(selectUser);\n  const userAvatar = useSelector(selectAvatar);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const avatarURL =\n    userAvatar &&\n    new URL(userAvatar, 'https://task-pro-backend-a1c2.onrender.com/public');\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <StyledUserInfo>\n      <StyledUserName>{userName.name}</StyledUserName>\n      <StyledUserBtn type=\"button\" onClick={openModal}>\n        {!!userAvatar ? (\n          <StyledUserPhoto\n            src={avatarURL}\n            alt=\"user_photo\"\n            width={32}\n            height={32}\n          />\n        ) : (\n          <IconUserInfo>\n            <use xlinkHref={`${sprite}#icon-user`}></use>\n          </IconUserInfo>\n        )}\n      </StyledUserBtn>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <EditProfileModal onCloseModal={closeModal} avatar={avatarURL} />\n      </Modal>\n    </StyledUserInfo>\n  );\n};\n","import { SelectLanguage } from 'components/SelectLanguage/SelectLanguage';\nimport { BurgerMenu } from './BurgerMenu/BurgerMenu';\nimport {\n  StyledHeader,\n  StyledHeaderItemWrapper,\n\n} from './Header.styled';\nimport { ThemeDropDown } from './ThemeDropDown/ThemeDropDown';\nimport { UserInfo } from './UserInfo/UserInfo';\n\nexport const Header = () => {\n  return (\n    \n      <StyledHeader>\n        <BurgerMenu />\n        <StyledHeaderItemWrapper>\n          <SelectLanguage/> \n          <ThemeDropDown />\n          <UserInfo />\n        </StyledHeaderItemWrapper>\n      </StyledHeader>\n   \n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  min-height: 100vh;    \n  width: 320px;\n  margin: 0 auto; \n  display: flex;\n  justify-content: center;\n  @media only screen and (min-width: 375px) {\n     width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;","import { Header } from 'components/Header/Header';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\n\nimport { HeaderWrapper, HomeWrapper } from './HomePage.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ScreensPage from './ScreensPage';\n\nexport default function HomePage() {\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n  const {\n    // t,\n    i18n,\n  } = useTranslation('global');\n\n  useEffect(() => {\n    const dir = i18n.dir(i18n.language);\n    document.documentElement.dir = dir;\n  }, [i18n, i18n.language]);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <HomeWrapper>\n      <Helmet>\n        <title>Boards</title>\n      </Helmet>\n      {isWideScreen && <Sidebar />}\n      <HeaderWrapper>\n        <Header />\n        <ScreensPage />\n      </HeaderWrapper>\n    </HomeWrapper>\n  );\n}"],"names":["CustomDropdownIcon","_jsx","GrLanguage","IconLanguage","DropdownIndicator","props","components","_objectSpread","children","width","height","options","value","label","customStyles","control","provided","state","color","isFocused","border","boxShadow","display","margin","padding","minHeight","lineHeight","downChevron","IndicatorContainer","indicatorSeparator","input","dropdownIndicator","content","option","backgroundColor","isSelected","placeholder","menu","maxHeight","borderRadius","overflowY","menuList","i18n","useTranslation","Select","styles","onChange","selectedOption","changeLanguage","SelectLanguage","handleChange","lang","CustomDropdown","handleChangeLanguage","e","selectedLanguage","target","BurgerMenuWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","StyledBurgerMenu","_templateObject2","isOpen","StyledSVGBurger","_templateObject3","StyledLogoWrapper","StyledLogoIcon","radius","m","StyledLogoText","StyledSVGLogo","_templateObject4","violetColors","accentColor","Logo","_jsxs","xlinkHref","concat","sprite","StyledBoardList","_ref","isActive","colors","white","StyledBoardItem","_ref2","_ref3","StyledSVGPensil","StyledSVGTrash","StyledBoardListBtn","_templateObject5","StyledBtnWrapper","_templateObject6","_ref4","StyledModal","Modal","currentTheme","modalBgn","grayText","Form","CloseButton","CloseSVG","mainText","BigHeader","TitleInput","accent","SmallHeader","_templateObject7","List","_templateObject8","Radio","_templateObject9","IconSVG","_templateObject10","iconStroke","Pic","_templateObject11","SubmitButton","_templateObject12","plusIconFill","hoverButton","plusIconStroke","pictures_mini","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","BoardModalBase","isModalOpen","info","onCloseModal","action","SubmitForm","t","_useState","useState","title","_useState2","_slicedToArray","setTitle","_useState3","iconURL","_useState4","setIcon","_useState5","backgroundURL","_useState6","setBackground","close","overlayClassName","className","onRequestClose","ariaHideApp","onClick","onSubmit","event","preventDefault","sub","id","name","required","map","Icon","index","type","checked","Background","alt","src","BoardListItem","board","dispatch","useDispatch","navigate","useNavigate","setOpenModal","getBoardById","_id","Link","to","deleteBoard","editBoard","StyledBoardListWrapper","BoardList","boards","useSelector","selectAllBoards","useEffect","fetchBoards","activeItem","setActiveItem","_Fragment","length","handleBoardClick","StyledSVG","StyledButton","StyledCreateBtn","AddBoardButton","AddBoard","stopPropagation","OpenModal","addBoard","SidebarWrapper","StyledText","StyledCreateWrapper","StyledLogoutBtn","StyledSVGLogout","darkTextColor","ItemsWrapper","Boards","ModalWrapper","ModalTitle","Input","Field","inputBgn","maintext","CommentInput","SendButton","StyledSvgClose","iconNeedHelp","validationSchema","Yup","email","comment","NeedHelpModal","onClose","handleSend","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sendHelpRequest","then","console","log","catch","error","stop","_x","apply","arguments","Formik","initialValues","isSubmitting","as","ErrorMessage","component","HelpContainer","helpBlockColor","HelpImage","HelpText","HelpButton","ButtonText","IconContainer","TaskPro","setIsModalOpen","openModal","flowerImage","CiCircleQuestion","SidebarNav","HelpApp","logout","DarkBackground","StyledSidebar","dir","language","Sidebar","forwardRef","ref","BurgerMenu","setOpen","burgerMenuRef","useRef","sidebarRef","current","handleClickClose","contains","document","addEventListener","removeEventListener","StyledHeader","StyledHeaderItemWrapper","fontWeight","fontSize","letterSpacing","ThemeDropDown","changeTheme","StyledUserInfo","StyledUserBtn","StyledUserName","StyledUserPhoto","PreviewAvatar","avatar","href","IconUser","PreviewUploadAvatar","file","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","UploadImage","editFormSchema","shape","min","max","password","matches","EditProfileModal","showPassword","setShowPassword","onShowPassword","fileRef","ModalWrap","TitleModal","CLoseButton","IconClose","values","actions","credentials","updateProfile","resetForm","setFieldValue","StyledForm","ProfileFotoBox","Thumb","hidden","files","AddButton","click","IconPlus","StyledLabel","htmlFor","StyledField","ErrMessage","HideBtn","IconEye","Button","UserInfo","userName","selectUser","userAvatar","selectAvatar","avatarURL","URL","closeModal","IconUserInfo","closeTimeoutMS","Header","HomeWrapper","HeaderWrapper","HomePage","window","innerWidth","isWideScreen","setIsWideScreen","documentElement","handleResize","Helmet","ScreensPage"],"sourceRoot":""}