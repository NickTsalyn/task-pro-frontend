{"version":3,"file":"static/js/577.ff292f8c.chunk.js","mappings":"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","sources":["components/Register/RegisterForm.styled.jsx","components/Register/RegisterForm.jsx","components/Auth/Auth.styled.jsx","components/LogInForm/LogInForm.styled.jsx","components/LogInForm/LogInForm.jsx","components/PasswordRecovery/PasswordRecovery.styled.jsx","components/PasswordRecovery/PasswordRecovery.jsx","components/ForgetPassword/ForgetPassword.styled.jsx","components/ForgetPassword/ForgetPassword.jsx","components/Auth/Auth.jsx","Pages/AuthPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nexport const StyledSVG = styled(AiOutlineEye)`\n  fill: ${p => p.theme.colors.greyTextColor};\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const StyledSVGInv = styled(AiOutlineEyeInvisible)`\n  fill: ${p => p.theme.colors.greyTextColor};\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.spacing(10)};\n  gap: ${p => p.theme.spacing(6)};\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3.5)};\n`;\nexport const StyledInput = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.colors.lightGreen};\n  background: ${p => p.theme.colors.darkInputBgn};\n  color: ${p => p.theme.colors.white};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.colors.greyTextColor};\n  }\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const StyledSVGButton = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  bottom: 10px;\n  right: 18px;\n\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const RegisterInBtn = styled.button`\n  width: 100%;\n  padding-top: ${p => p.theme.spacing(3.5)};\n  padding-bottom: ${p => p.theme.spacing(3.5)};\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  color: ${p => p.theme.colors.darkTextColor};\n  background: ${p => p.theme.colors.lightGreen};\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  transition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #9dc888;\n  }\n`;\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\n\nexport const MessageError = styled(ErrorMessage)`\n  margin-top: 3px;\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 12px;\n`;\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n// import { useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n// import { selectIsLoading } from 'redux/auth/selectors';\nimport {\n  FormContainer,\n  InputContainer,\n  MessageError,\n  RegisterInBtn,\n  StyledInput,\n  StyledInputContainer,\n  StyledLabel,\n  StyledSVG,\n  StyledSVGInv,\n  StyledSVGButton,\n} from './RegisterForm.styled.jsx';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { useTranslation } from 'react-i18next';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required!')\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters'),\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n  password: Yup.string()\n    .min(8, 'Password is too short!')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]+$/,\n      'The password must contain a minimum of 8 characters, at least one letter, one number, and one special character!'\n    )\n    .max(64, 'Password must be at most 64 characters')\n    .required('Password is required!'),\n});\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  showPassword: false,\n};\n\nconst RegisterForm = () => {\n  const { t } = useTranslation('global');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const loading = useSelector(selectIsLoading);\n  const [showPassword, setShowPassword] = useState(false);\n  const handleTogglePassword = e => {\n    e.preventDefault();\n    setShowPassword(!showPassword);\n  };\n  const onSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n\n    navigate('/home');\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={RegisterSchema}\n      onSubmit={onSubmit}\n    >\n      <FormContainer>\n        <InputContainer>\n          <StyledLabel>\n            <StyledInput\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder={t('welcomePage.registration.name')}\n              autoComplete=\"off\"\n            />\n            <MessageError name=\"name\" component=\"div\" />\n          </StyledLabel>\n\n          <StyledLabel>\n            <StyledInput\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder={t('welcomePage.registration.email')}\n              autoComplete=\"off\"\n            />\n            <MessageError name=\"email\" component=\"div\" />\n          </StyledLabel>\n\n          <StyledLabel>\n            <StyledInputContainer>\n              <StyledInput\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                name=\"password\"\n                placeholder={t('welcomePage.registration.password')}\n                autoComplete=\"off\"\n              />\n\n              <StyledSVGButton type=\"button \" onClick={handleTogglePassword}>\n                {showPassword ? <StyledSVGInv /> : <StyledSVG />}\n              </StyledSVGButton>\n            </StyledInputContainer>\n            <MessageError name=\"password\" component=\"div\" />\n          </StyledLabel>\n        </InputContainer>\n        <RegisterInBtn type=\"submit\">\n          {/* {loading ? 'waiting' : 'Register Now'} */}\n          {t('welcomePage.registration.button')}\n        </RegisterInBtn>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const WelcomeWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,${p => p.theme.colors.lightGreen} 92.19%\n  );\n`;\nexport const FormContainer = styled.div`\n  width: calc(100%-84px);\n  background-color: ${p => p.theme.colors.darkBgn};\n  padding: 24px;\n  border-radius: ${p=> p.theme.radius.m};\n  border: 1px solid black;\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    border: 1px solid black;\n    padding: 40px;\n    width: 424px;\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  gap: ${p=> p.theme.spacing(3.5)};\n`;\n\nexport const AuthLinks = styled(NavLink)`\n  color: rgba(255, 255, 255, 0.3);\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  background: none;\n  border: none;\n  transition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &.active {\n    color: #fff;\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nexport const StyledSVG = styled(AiOutlineEye)`\n  fill: ${p => p.theme.colors.greyTextColor};\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const StyledSVGInv = styled(AiOutlineEyeInvisible)`\n  fill: ${p => p.theme.colors.greyTextColor};\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const StyledSVGButton = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  bottom: 10px;\n  right: 18px;\n\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.spacing(10)};\n  gap: ${p => p.theme.spacing(6)};\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3.5)};\n`;\nexport const StyledInput = styled(Field)`\n  width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.colors.lightGreen};\n  background: ${p => p.theme.colors.darkInputBgn};\n  color: ${p => p.theme.colors.white};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.colors.greyTextColor};\n  }\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const LogInBtn = styled.button`\n  width: 100%;\n  padding-top: ${p => p.theme.spacing(3.5)};\n  padding-bottom: ${p => p.theme.spacing(3.5)};\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  color: ${p => p.theme.colors.darkTextColor};\n  background: ${p => p.theme.colors.lightGreen};\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  transition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #9dc888;\n  }\n`;\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\n\nexport const MessageError = styled(ErrorMessage)`\n  margin-top: 3px;\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 12px;\n`;\n\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: ${p => p.theme.colors.lightGreen};\n`;\n","import React, { useState } from 'react';\n\nimport {\n  FormContainer,\n  InputContainer,\n  LogInBtn,\n  MessageError,\n  StyledInput,\n  StyledInputContainer,\n  StyledLabel,\n  StyledLink,\n  StyledSVG,\n  StyledSVGInv,\n  StyledSVGButton,\n} from './LogInForm.styled.jsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst LogInSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n  password: Yup.string()\n    .min(8, 'Password is too short!')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]+$/,\n      'The password must contain a minimum of 8 characters, at least one letter, one number, and one special character!'\n    )\n    .max(64, 'Password must be at most 64 characters')\n    .required('Password is required!'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LogInForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { t } = useTranslation('global');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleTogglePassword = e => {\n    e.preventDefault();\n    setShowPassword(!showPassword);\n  };\n  const onSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n    dispatch(\n      login({\n        email,\n        password,\n      })\n    );\n\n    navigate('/home');\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={LogInSchema}\n      onSubmit={onSubmit}\n    >\n      <FormContainer>\n        <InputContainer>\n          <StyledLabel>\n            <StyledInput\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              placeholder={t('welcomePage.login.email')}\n            />\n            <MessageError name=\"email\" component=\"div\" />\n          </StyledLabel>\n          <StyledLabel>\n            <StyledInputContainer>\n              <StyledInput\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                name=\"password\"\n                placeholder={t('welcomePage.login.password')}\n                autoComplete=\"off\"\n              />\n\n              <StyledSVGButton type=\"button\" onClick={handleTogglePassword}>\n                {showPassword ? <StyledSVGInv /> : <StyledSVG />}\n              </StyledSVGButton>\n            </StyledInputContainer>\n            <MessageError name=\"password\" component=\"div\" />\n          </StyledLabel>\n        </InputContainer>\n        <LogInBtn type=\"submit\">{t('welcomePage.login.button')}</LogInBtn>\n        <div>\n          <StyledLink to=\"/auth/forgetPassword\">\n            {t('welcomePage.login.forgot')}\n          </StyledLink>\n        </div>\n      </FormContainer>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nexport const StyledSVG = styled(AiOutlineEye)`\n  fill: ${p => p.theme.colors.greyTextColor};\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const StyledSVGInv = styled(AiOutlineEyeInvisible)`\n  fill: ${p => p.theme.colors.greyTextColor};\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.spacing(10)};\n  gap: ${p => p.theme.spacing(6)};\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3.5)};\n`;\nexport const StyledInput = styled(Field)`\n  width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.colors.lightGreen};\n  background: ${p => p.theme.colors.darkInputBgn};\n  color: ${p => p.theme.colors.white};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.colors.greyTextColor};\n  }\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const SendMailBtn = styled.button`\n  width: 100%;\n  padding-top: ${p => p.theme.spacing(3.5)};\n  padding-bottom: ${p => p.theme.spacing(3.5)};\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  color: ${p => p.theme.colors.darkTextColor};\n  background: ${p => p.theme.colors.lightGreen};\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  transition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #9dc888;\n  }\n`;\n\nexport const MessageError = styled(ErrorMessage)`\n  margin-top: 3px;\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 12px;\n`;\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\nexport const StyledInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledSVGButton = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  bottom: 10px;\n  right: 18px;\n\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n","import * as Yup from 'yup';\nimport { Field, Formik } from 'formik';\nimport {\n  FormContainer,\n  InputContainer,\n  MessageError,\n  StyledInput,\n  SendMailBtn,\n  StyledLabel,\n  StyledInputContainer,\n  StyledSVGButton,\n  StyledSVG,\n  StyledSVGInv,\n} from './PasswordRecovery.styled.jsx';\nimport { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { changePassword } from 'redux/auth/operations.js';\n\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { useTranslation } from 'react-i18next';\n\nconst PasswordRecoverySchem = Yup.object().shape({\n  tempraryPassword: Yup.string()\n    .matches(/^.{24}$/, 'Recovery code must be exactly 12 characters long')\n    .required('Recovery code is required!'),\n  newPassword: Yup.string()\n    .min(8, 'Password is too short!')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]+$/,\n      'The password must contain a minimum of 8 characters, at least one letter, one number, and one special character!'\n    )\n    .max(64, 'Password must be at most 64 characters')\n    .required('Password is required!'),\n  confirmNewPassword: Yup.string()\n    .oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\n    .required('Confirm Password is required!'),\n});\n\nconst initialValues = {\n  tempraryPassword: '',\n  newPassword: '',\n  confirmNewPassword: '',\n};\n\nexport const PasswordRecovery = () => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showPasswordOne, setShowPasswordOne] = useState(false);\n  const handleTogglePassword = e => {\n    e.preventDefault();\n    setShowPassword(!showPassword);\n  };\n  const handleTogglePasswordOne = e => {\n    e.preventDefault();\n    setShowPasswordOne(!showPasswordOne);\n  };\n  const navigate = useNavigate();\n  const onSubmit = (values, { resetForm }) => {\n    const { tempraryPassword: resetToken, newPassword } = values;\n\n    dispatch(changePassword({ resetToken, newPassword }))\n      .then(resp => {\n        if (resp.payload === 'Invalid or expired reset code') {\n          toast.error('Invalid or expired reset code');\n        } else {\n          toast.success(\n            `Your password has been successfully changed to a new one. Log in with your new password.`\n          );\n          setTimeout(() => {\n            navigate('/auth/login');\n          }, 3000);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('An error occurred. Please try again.');\n      });\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={PasswordRecoverySchem}\n      onSubmit={onSubmit}\n    >\n      <FormContainer>\n        <InputContainer>\n          <StyledLabel>\n            <StyledInputContainer>\n              <StyledInput\n                type=\"text\"\n                id=\"tempraryPassword\"\n                name=\"tempraryPassword\"\n                autoComplete=\"temprorary-password\"\n                placeholder={t('welcomePage.recovery.code')}\n              />\n            </StyledInputContainer>\n\n            <MessageError name=\"tempraryPassword\" component=\"div\" />\n          </StyledLabel>\n        </InputContainer>\n        <InputContainer>\n          <StyledLabel>\n            <StyledInputContainer>\n              <StyledInput\n                type={showPasswordOne ? 'text' : 'password'}\n                id=\"newPassword\"\n                name=\"newPassword\"\n                autoComplete=\"new-password\"\n                placeholder={t('welcomePage.recovery.new')}\n              />\n              <StyledSVGButton type=\"button \" onClick={handleTogglePasswordOne}>\n                {showPassword ? <StyledSVGInv /> : <StyledSVG />}\n              </StyledSVGButton>\n            </StyledInputContainer>\n\n            <MessageError name=\"newPassword\" component=\"div\" />\n          </StyledLabel>\n        </InputContainer>\n        <InputContainer>\n          <StyledLabel>\n            <StyledInputContainer>\n              <Field\n                id=\"confirmNewPassword\"\n                name=\"confirmNewPassword\"\n                placeholder={t('welcomePage.recovery.confirm')}\n                render={({ field }) => (\n                  <StyledInput\n                    {...field}\n                    type={showPassword ? 'text' : 'password'}\n                    autoComplete=\"new-password\"\n                    onPaste={e => e.preventDefault()}\n                    placeholder={t('welcomePage.recovery.code')}\n                  />\n                )}\n              />\n              ;\n              <StyledSVGButton type=\"button \" onClick={handleTogglePassword}>\n                {showPassword ? <StyledSVGInv /> : <StyledSVG />}\n              </StyledSVGButton>\n            </StyledInputContainer>\n            <MessageError name=\"confirmNewPassword\" component=\"div\" />;\n          </StyledLabel>\n        </InputContainer>\n\n        <SendMailBtn type=\"submit\">\n          {t('welcomePage.recovery.change')}\n        </SendMailBtn>\n      </FormContainer>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.spacing(10)};\n  gap: ${p => p.theme.spacing(6)};\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3.5)};\n`;\nexport const StyledInput = styled(Field)`\n  width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.colors.lightGreen};\n  background: ${p => p.theme.colors.darkInputBgn};\n  color: ${p => p.theme.colors.white};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.colors.greyTextColor};\n  }\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const SendMailBtn = styled.button`\n  width: 100%;\n  padding-top: ${p => p.theme.spacing(3.5)};\n  padding-bottom: ${p => p.theme.spacing(3.5)};\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  color: ${p => p.theme.colors.darkTextColor};\n  background: ${p => p.theme.colors.lightGreen};\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  transition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #9dc888;\n  }\n`;\n\nexport const MessageError = styled(ErrorMessage)`\n  margin-top: 3px;\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 12px;\n`;\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  FormContainer,\n  InputContainer,\n  MessageError,\n  StyledInput,\n  SendMailBtn,\n  StyledLabel,\n} from './ForgetPassword.styled.jsx';\nimport { useDispatch } from 'react-redux';\nimport { forgetPassword } from 'redux/auth/operations';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst ForgetPasswordSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n});\n\nconst initialValues = {\n  email: '',\n};\n\nexport const ForgetPassword = () => {\n  const {t} = useTranslation('global')\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmit = (values, { resetForm }) => {\n    const { email } = values;\n\n    dispatch(forgetPassword({ email }))\n      .then(resp => {\n        if (resp.payload === 'User not found') {\n          toast.error('User not found. Please check your email.');\n        } else {\n          toast.success(`Temporary password sent to ${email} successfully!`);\n          setTimeout(() => {\n            navigate('/auth/changePassword');\n          }, 3000);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('An error occurred. Please try again.');\n      });\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={ForgetPasswordSchema}\n      onSubmit={onSubmit}\n    >\n      <FormContainer>\n        <InputContainer>\n          <StyledLabel>\n            <StyledInput\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              placeholder={t('welcomePage.forgot.email')}\n            />\n            <MessageError name=\"email\" component=\"div\" />\n          </StyledLabel>\n        </InputContainer>\n        <SendMailBtn type=\"submit\">{t('welcomePage.forgot.send')}</SendMailBtn>\n      </FormContainer>\n    </Formik>\n  );\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport RegisterForm from 'components/Register/RegisterForm';\nimport {\n  AuthLinks,\n  FormContainer,\n  LinkWrapper,\n  WelcomeWrapper,\n} from './Auth.styled';\nimport { LogInForm } from 'components/LogInForm/LogInForm';\nimport { useTranslation } from 'react-i18next';\n\nimport { PasswordRecovery } from 'components/PasswordRecovery/PasswordRecovery';\nimport { ForgetPassword } from 'components/ForgetPassword/ForgetPassword';\nimport { Helmet } from 'react-helmet';\n\nconst Auth = () => {\n  const { id } = useParams();\n  const { t } = useTranslation('global');\n\n  return (\n    <WelcomeWrapper>\n      <FormContainer>\n        <LinkWrapper>\n          <AuthLinks to=\"/auth/register\">\n            <Helmet>\n              <title>Authorization</title>\n            </Helmet>\n            {t('welcomePage.welcome.registration')}\n          </AuthLinks>\n          <AuthLinks to=\"/auth/login\">\n            {t('welcomePage.welcome.login')}\n          </AuthLinks>\n        </LinkWrapper>\n        {id === 'login' && <LogInForm />}\n        {id === 'register' && <RegisterForm />}\n        {id === 'forgetPassword' && <ForgetPassword />}\n        {id === 'changePassword' && <PasswordRecovery />}\n\n        <Suspense fallback={<>Login...</>}>\n          <Outlet />\n        </Suspense>\n      </FormContainer>\n    </WelcomeWrapper>\n  );\n};\n\nexport default Auth;\n","import Auth from 'components/Auth/Auth';\nimport React from 'react';\n\nexport default function AuthPage () {\n  return (\n      <>\n        <Auth />\n      </>\n    );\n};\n"],"names":["StyledSVG","styled","AiOutlineEye","_templateObject","_taggedTemplateLiteral","p","theme","colors","greyTextColor","StyledSVGInv","AiOutlineEyeInvisible","_templateObject2","FormContainer","Form","_templateObject3","spacing","InputContainer","_templateObject4","StyledInput","Field","_templateObject5","radius","m","lightGreen","darkInputBgn","white","shadowColor","StyledSVGButton","_templateObject6","RegisterInBtn","_templateObject7","darkTextColor","StyledLabel","_templateObject8","MessageError","ErrorMessage","_templateObject9","StyledInputContainer","_templateObject10","RegisterSchema","Yup","shape","name","required","min","max","email","password","matches","initialValues","showPassword","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setShowPassword","_jsx","Formik","validationSchema","onSubmit","values","_ref","resetForm","register","children","_jsxs","type","id","placeholder","autoComplete","component","onClick","e","preventDefault","WelcomeWrapper","darkBgn","LinkWrapper","AuthLinks","NavLink","LogInBtn","StyledLink","_templateObject11","LogInSchema","LogInForm","login","to","SendMailBtn","PasswordRecoverySchem","tempraryPassword","newPassword","confirmNewPassword","oneOf","PasswordRecovery","_useState3","_useState4","showPasswordOne","setShowPasswordOne","resetToken","changePassword","then","resp","payload","toast","setTimeout","catch","error","console","log","render","_ref2","field","_objectSpread","onPaste","ForgetPasswordSchema","ForgetPassword","forgetPassword","concat","useParams","Helmet","RegisterForm","Suspense","fallback","_Fragment","Outlet","AuthPage","Auth"],"sourceRoot":""}