{"version":3,"file":"static/js/378.cd4d988b.chunk.js","mappings":"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","sources":["components/Header/BurgerMenu/BurgerMenu.styled.js","components/Sidebar/Logo/Logo.styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/BoardListItem/BoardListItem.styled.js","components/boardModals/ModalsBase/BoardModalBase.styled.jsx","components/boardModals/ModalsBase/BoardModalBase.jsx","components/Sidebar/BoardListItem/BoardListItem.jsx","components/Sidebar/BoardList/BoardList.styled.js","components/Sidebar/BoardList/BoardList.jsx","components/Sidebar/SidebarNav/SidebarNav.styled.js","components/boardModals/addBoardButton/addBoardButton.styled.jsx","components/boardModals/addBoardButton/addBoardButton.jsx","components/boardModals/addBoard.jsx","components/NeedHelpModal/NeedHelpModal.styled.jsx","components/NeedHelpModal/NeedHelpModal.jsx","components/HelpApp/HelpApp.styled.js","components/HelpApp/HelpApp.jsx","components/Sidebar/SidebarNav/SidebarNav.jsx","components/Sidebar/Sidebar.styled.js","components/Sidebar/Sidebar.jsx","components/Header/BurgerMenu/BurgerMenu.jsx","components/Header/Header.styled.js","components/Header/ThemeDropDown/ThemeDropDown.jsx","components/Header/UserInfo/UserInfo.styled.js","components/EditProfileModal/EditProfileModal.styled.js","components/EditProfileModal/EditProfileModal.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","Pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BurgerMenuWrapper = styled.div`\n  display: flex;\n  @media screen and (max-width: 375px) {\n    padding-left: ${p => p.theme.spacing(5)};\n  }\n`;\n\nexport const StyledBurgerMenu = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: auto 0;\n  margin-right: auto;\n  padding: 0;\n  position: relative;\n  display: ${props => (props.isOpen ? 'display: flex;' : '')};\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const StyledSVGBurger = styled.svg`\n  stroke: rgb(22, 22, 22);\n  width: 100%;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLogoWrapper = styled.div`\n  padding-bottom: 70px;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n\n  @media screen and (min-width: 1440px) {\n    padding-bottom: 60px;\n  }\n`;\n\nexport const StyledLogoIcon = styled.span`\n  display: flex;\n  border-radius: ${p => p.theme.radius.m};\n  width: 32px;\n  height: 32px;\n  background-color: #ecedfd;\n`;\nexport const StyledLogoText = styled.p`\n  display: flex;\n  margin: auto 0;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #ffffff;\n`;\n\nexport const StyledSVGLogo = styled.svg`\n  fill: ${p => p.theme.violetColors.accentColor};\n`;\n","import sprite from '../../../images/icons.svg';\nimport {\n  StyledLogoIcon,\n  StyledLogoText,\n  StyledLogoWrapper,\n  StyledSVGLogo,\n} from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <StyledLogoWrapper>\n      <StyledLogoIcon>\n        <StyledSVGLogo>\n          <use xlinkHref={`${sprite}#icon-logo2`}></use>\n        </StyledSVGLogo>\n      </StyledLogoIcon>\n\n      <StyledLogoText>Task Pro</StyledLogoText>\n    </StyledLogoWrapper>\n  );\n};\n","// import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledBoardList = styled.div`\n  display: flex;\n  padding: 22px 18px 22px 14px;\n  margin: 0 auto;\n\n  background-color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255, 0.2)' : 'transparent'};\n`;\n\nexport const StyledBoardItem = styled.button`\n  border: none;\n  background: transparent;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: start;\n  padding: 0;\n  color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255)' : 'rgba(255, 255, 255, 0.5)'};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledSVGPensil = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledSVGIcon = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 1);\n  padding-right: ${p => p.theme.spacing(2)};\n\n  width: 18px;\n  height: 18px;\n`;\n\nexport const StyledSVGTrash = styled.svg`\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const StyledBoardListBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  display: flex;\n\n  margin: 0;\n  padding: 0;\n`;\nexport const StyledBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: auto;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`;\n","import styled from 'styled-components'\nimport Modal from 'react-modal'\n\nexport const StyledModal = styled(Modal)`\n    position: relative;\n    width: 100%;\n    height: fit-content;\n    max-height: 433px;\n    max-width: 350px;\n    background-color: ${props => props.theme.colors.white};\n    border-radius: 8px;\n    box-shadow: 0px 4px 16px 0px ${props => props.theme.colors.greyIconColor};\n    transition: transform 0.3s;\n`\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    padding: 24px;\n`\n\nexport const CloseButton = styled.button`\n    position: absolute;\n    background-color: transparent;\n    top: 14px;\n    right: 14px;\n    width: 20px;\n    height: 20px;\n    border: none;\n`\n\nexport const CloseSVG = styled.svg`\n    width: 18px;\n    height: 18px;\n    stroke: ${props => props.theme.colors.darkTextColor};\n`\n\nexport const BigHeader = styled.p`\n    color: ${props => props.theme.colors.darkTextColor};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    letter-spacing: 0.02em;\n`\n\nexport const TitleInput = styled.input`\n    margin: 24px 0;\n    height: 49px;\n    max-width: 302px;\n    background-color: transparent;\n    border: 1px ${props => props.theme.violetColors.accentColor} solid;\n    border-radius: 8px;\n    padding: 0 18px;\n    color: ${props => props.theme.colors.darkTextColor};\n    font-family: inherit;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    outline: none;\n    opacity: 0.4;\n\n    &::placeholder {\n        color: ${props => props.theme.colors.darkTextColor};\n        font-family: inherit;\n        line-height: 21px;\n        letter-spacing: 0.02em;\n    }\n\n    &:hover, &:focus {\n        opacity: 1;\n    }\n`\n\nexport const SmallHeader = styled.p`\n    color: ${props => props.theme.colors.darkTextColor};\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    letter-spacing: -2%;\n    padding-bottom: 14px;\n`\n\nexport const List = styled.label`\n    width: 270px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    column-gap: 4px;\n    row-gap: 4px;\n    margin-bottom: 24px;\n`\n\nexport const Radio = styled.input`\n    display: none;\n\n    &:checked + svg {\n        stroke: ${props => props.theme.colors.darkTextColor};\n        cursor: default;\n    }\n\n    &:checked + span {\n        border-color: ${props => props.theme.colors.darkTextColor};\n        cursor: default;\n    }\n`\n\nexport const IconSVG = styled.svg`\n    display: inline-block;\n    vertical-align: middle;\n    stroke: ${props => props.theme.colors.greyIconColor};\n    cursor: pointer;\n    fill: transparent;\n    width: 18px;\n    height: 18px;\n`\n\nexport const FuturePic = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n    background-color: ${props => props.theme.colors.shadowColor};\n    border: 1px transparent solid;\n    cursor: pointer;\n    border-radius: 8px;\n    width: 28px;\n    height: 28px;\n`\n\nexport const SubmitButton = styled.button`\n    display: flex;\n    max-width: 100%;\n    height: 49px;\n    color: ${props => props.theme.colors.white};\n    border-radius: 8px;\n    border-color: transparent;\n    font-weight: 500;\n    background-color: ${props => props.theme.violetColors.accentColor};\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.02em;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    column-gap: 9px;\n    margin-top: 16px;\n\n    &:hover {\n        background-color: ${props => props.theme.violetColors.hoverViolet};\n    }\n\n    & > span {\n        display: flex;\n        width: 28px;\n        height: 28px;\n        background-color: ${props => props.theme.colors.white};\n        border-radius: 8px;\n        justify-content: center;\n        align-items: center;\n    }\n\n    & > span > svg {\n        width: 14px;\n        height: 14px;\n        stroke: ${props => props.theme.colors.darkTextColor};\n    }\n`","import React, { useState } from 'react'\nimport sprite from 'images/icons.svg'\nimport { StyledModal, Form, CloseButton, CloseSVG, BigHeader, TitleInput, SmallHeader, List, Radio, IconSVG, FuturePic, SubmitButton } from './BoardModalBase.styled'\nimport './BoardModalBase.css'\n\nexport const BoardModalBase = ({ isModalOpen, info, onCloseModal, action, SubmitForm }) => {\n    const [title, setTitle] = useState(info.title)\n    const [iconURL, setIcon] = useState(info.iconURL)\n    const [backgroundURL, setBackground] = useState(info.backgroundURL)\n\n    const Icons = [{value: 'icon-Project'}, {value: 'icon-star-04'}, {value: 'icon-loading-03'}, {value: 'icon-puzzle-piece-02'},\n                   {value: 'icon-container'}, {value: 'icon-lightning-02'}, {value: 'icon-colors'}, {value: 'icon-hexagon-01'}]\n    \n    const Backgrounds = [{value: '0'}, {value: '1'}, {value: '2'}, {value: '3'},\n                        {value: '4'}, {value: '5'}, {value: '6'}, {value: '7'},\n                        {value: '8'}, {value: '9'}, {value: '10'}, {value: '11'},\n                        {value: '12'}, {value: '13'}, {value: '14'}, {value: '15'}]\n\n    function close() {\n        onCloseModal()\n        setTitle(info.title)\n        setIcon(info.iconURL)\n        setBackground(info.backgroundURL)\n    }\n\n    function sub(event) {\n        event.preventDefault()\n        SubmitForm({title, iconURL, backgroundURL})\n        setTitle(info.title)\n        setIcon(info.iconURL)\n        setBackground(info.backgroundURL)\n    }\n\n    function handleChange(e) {\n        setTitle(e.target.value)\n    }\n\n    return (\n        <StyledModal\n            isOpen={isModalOpen}\n            overlayClassName={'modal-overlay'}\n            onRequestClose={close}\n            ariaHideApp={false}\n        >\n            <CloseButton onClick={close}>\n                <CloseSVG><use xlinkHref={`${sprite}#icon-x-close`}></use></CloseSVG>\n            </CloseButton>\n\n            <Form onSubmit={event => sub(event)}>\n                <BigHeader>{action==='add' ? 'New' : 'Edit'} board</BigHeader>\n\n                <TitleInput\n                    id=\"title\"\n                    name='title'\n                    placeholder='Title'\n                    value={title}\n                    onChange={e => handleChange(e)}\n                    required\n                />\n\n                <SmallHeader>Icons</SmallHeader>\n                <List>\n                    {Icons.map((Icon, index) => (\n                        <label key={index}>\n                            <Radio \n                                type=\"radio\" \n                                name='icon'\n                                value={Icon.value}\n                                checked={Icon.value === iconURL ? true : false}\n                                onChange={() => setIcon(Icon.value)}>\n                            </Radio>\n                            <IconSVG aria-hidden=\"true\"><use xlinkHref={`${sprite}#${Icon.value}`}></use></IconSVG>\n                        </label>\n                    ))}\n                </List>\n\n                <SmallHeader>Background</SmallHeader>\n                <List>\n                    {Backgrounds.map((Background, index) => (\n                        <label key={index}>\n                            <Radio\n                                type=\"radio\" \n                                name='background'\n                                value={Background.value}\n                                checked={Background.value === backgroundURL ? true : false}\n                                onChange={() => setBackground(Background.value)}>\n                            </Radio>\n                            <FuturePic></FuturePic>\n                        </label>\n                    ))}\n                </List>\n\n                <SubmitButton type=\"submit\">\n                    <span>\n                        <svg><use xlinkHref={`${sprite}#icon-plus`}></use></svg>\n                    </span>\n                    {action==='add' ? 'Create' : 'Edit'}\n                </SubmitButton>\n            </Form>\n        </StyledModal>\n    )\n  }","import sprite from '../../../images/icons.svg';\nimport {\n  StyledBoardItem,\n  StyledBoardList,\n  StyledBoardListBtn,\n  StyledBtnWrapper,\n  StyledSVGIcon,\n  StyledSVGPensil,\n  StyledSVGTrash,\n} from './BoardListItem.styled';\nimport { useState } from 'react';\nimport { useDispatch} from \"react-redux\"\nimport { deleteBoard, editBoard,  } from 'redux/boards/operations';\nimport { BoardModalBase } from 'components/boardModals/ModalsBase/BoardModalBase';\nimport { Link } from 'react-router-dom';\n\nexport const BoardListItem = ({ board, isActive, onClick }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setOpenModal] = useState(false);\n  \n  function CloseModal() {\n    setOpenModal(false);\n  }\n\n  function OpenModal() {\n    setOpenModal(true);\n  }\n\n  function SubmitForm(info) {\n    const { _id } = board;\n    dispatch(editBoard({ _id, info }));\n    setOpenModal(false);\n  }\n\n  function HandleDelete() {\n    dispatch(deleteBoard(board._id));\n  }\n\n  return (\n\n    <StyledBoardList isActive={isActive} onClick={onClick}>\n      {/* <StyledBoardItem to={`/home/${board._id}`}></StyledBoardItem> */}\n      <StyledSVGIcon>\n        <use xlinkHref={`${sprite}#${board.iconURL}`}></use>\n      </StyledSVGIcon>\n      <StyledBoardItem type=\"button\" isActive={isActive} onClick={onClick}\n      // onClick={()=> dispatch(getBoardById(boardId))}\n      >\n       <Link to={`/home/${board._id}`}>{board.title}</Link> \n      </StyledBoardItem>\n\n      <StyledBtnWrapper isActive={isActive} onClick={onClick}>\n        <StyledBoardListBtn onClick={OpenModal} type=\"button\">\n\n          <StyledSVGPensil>\n            <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n          </StyledSVGPensil>\n        </StyledBoardListBtn>\n\n        <StyledBoardListBtn onClick={HandleDelete} type=\"button\">\n          <StyledSVGTrash>\n            <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n          </StyledSVGTrash>\n        </StyledBoardListBtn>\n      </StyledBtnWrapper>\n\n      <BoardModalBase\n        isModalOpen={isModalOpen}\n        info={board}\n        onCloseModal={CloseModal}\n        action={'edit'}\n        SubmitForm={SubmitForm}\n      />\n    </StyledBoardList>\n  );\n};\n","import styled from 'styled-components';\nimport '../../../index.css';\n\nexport const StyledBoardListWrapper = styled.ul`\n  height: 126px;\n  overflow-y: scroll;\n\n  margin: 0 -14px;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n    height: 60px;\n    border-radius: 4px 0 0 4px;\n    margin-left: ${p => p.theme.spacing(3.5)};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #fff;\n    border-radius: 4px 0 0 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0 -24px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 40px;\n  }\n`;\n","import { BoardListItem } from '../BoardListItem/BoardListItem';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBoards } from 'redux/boards/operations';\nimport { selectAllBoards } from 'redux/boards/selectors';\nimport { StyledBoardListWrapper } from './BoardList.styled';\n\nexport const BoardList = () => {\n  const dispatch = useDispatch()\n  const boards = useSelector(selectAllBoards)\n  // console.log(boards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const [activeItem, setActiveItem] = useState(null);\n\n  const handleBoardClick = board => {\n    setActiveItem(board);\n  };\n  return (\n    <>\n      {boards.length > 0 && (\n        <StyledBoardListWrapper>\n          {boards.map(board => (\n            <li\n              key={board._id}\n              >\n              <BoardListItem\n                board={board}\n                isActive={board === activeItem}\n                onClick={() => handleBoardClick(board)}\n              />\n            </li>\n          ))}\n        </StyledBoardListWrapper>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 86%;\n`;\n\nexport const StyledText = styled.p`\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.5);\n  padding-bottom: ${p => p.theme.spacing(2)};\n  letter-spacing: -0.02em;\n`;\n\nexport const StyledCreateWrapper = styled.div`\n  padding: ${p => p.theme.spacing(3.5)} 0;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: ${p => p.theme.spacing(10)};\n`;\nexport const StyledLogoutBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 100%;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  color: rgb(255, 255, 255);\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(3.5)};\n  align-items: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const StyledSVGPlus = styled.svg`\n  fill: ${p => p.theme.violetColors.accentColor};\n  stroke: rgb(255, 255, 255);\n  width: 20px;\n  height: 20px;\n  padding: 8px 10px;\n`;\n\nexport const StyledSVGLogout = styled.svg`\n  fill: transparent;\n  stroke: white;\n\n  width: 32px;\n  height: 32px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.colors.darkTextColor};\n    opacity: 0.5;\n  }\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  gap: 24px;\n`;\n","import styled from 'styled-components'\n\nexport const StyledSVG = styled.svg`\n  stroke: ${props => props.theme.colors.white};\n  width: 20px;\n  height: 20px;\n`\n\nexport const StyledButton = styled.span`\n  margin-left: 40px;\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color: rgb(184, 188, 253);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n\n  &:hover {\n    background-color: rgba(151, 156, 234, 1);\n  }\n`\n\nexport const StyledCreateBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 100%;\n    font-weight: 500;\n    line-height: 1.5;\n    text-align: start;\n\n    color: rgb(255, 255, 255);\n    padding: 0;\n    display: flex;\n`","import React from 'react'\nimport sprite from 'images/icons.svg'\nimport { StyledCreateBtn, StyledButton, StyledSVG } from './addBoardButton.styled'\n\nexport const AddBoardButton = ({ onClick }) => {\n    return (\n        <StyledCreateBtn onClick={onClick}>\n          Create a new board\n          <StyledButton>\n            <StyledSVG>\n                <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </StyledSVG>\n          </StyledButton>\n        </StyledCreateBtn>\n    )\n  }","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { AddBoardButton } from './addBoardButton/addBoardButton'\nimport { BoardModalBase } from './ModalsBase/BoardModalBase'\nimport { addBoard } from 'redux/boards/operations'\n\nexport const AddBoard = () => {\n    const dispatch = useDispatch()\n    const [isModalOpen, setOpenModal] = useState(false)\n\n    function CloseModal() {\n        setOpenModal(false)\n    }\n\n    function OpenModal() {\n        setOpenModal(true)\n    }\n\n    function SubmitForm(info) {\n        console.log(info)\n        dispatch(addBoard(info))\n        setOpenModal(false)\n    }\n\n    return (\n        <>\n            <AddBoardButton onClick={OpenModal} />\n            <BoardModalBase isModalOpen={isModalOpen} info={{ title: '', icon: 'icon-Project', background: '0' }} onCloseModal={CloseModal} action={'add'} SubmitForm={SubmitForm}/>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 335px;\n  height: 355px;\n  background: #FCFCFC;\n  border-radius: 8px;\n  border: none;\n  padding: 24px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n  \n  @media (min-width: 768px) {\n    width:400px;   \n  \n  }\n`;\n \n\nexport const ModalTitle = styled.h2`\nfont-size: 18px;\nfont-weight: 500;\nline-height: 27px;\nletter-spacing: -0.02em;\ntext-align: left;\nmargin-bottom:24px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 14px;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\nwidth: 100%;\nheight: 49px;\npadding: 14px, 14px, 14px, 18px;\npadding-left:18px;\npadding-right:14px;\nborder: 1px solid #5255BC;\nborder-radius: 8px;\nbox-sizing: border-box;\nopacity: 0.4px;\n\n\nfont-size: 14px;\nfont-weight: 400;\nline-height: 21px;\nletter-spacing: -0.02em;\ntext-align: left;\n\n`;\n\nexport const CommentInput = styled.textarea`\n  width: 100%;\n  height: 120px;\n  padding: 14px;\n  padding-left:18px;\n  \n  border: 1px solid #5255BC;\n  border-radius: 8px;\n  box-sizing: border-box;\n  resize: none;\n\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  text-align: left;\n\n`;\n\nexport const SendButton = styled.button`\nmargin-top: 10px;\n  width: 100%;  \n  color: #FFFFFF;\n  padding: 14px, 126px, 14px, 126px;\n  padding-top:14px;\n  padding-bottom:14px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  background: rgba(82, 85, 188, 1);\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  text-align: center;\n`;\nexport const StyledSvgClose = styled.svg`\n  fill: ${props => props.theme.colors.darkTextColor};\n  stroke: ${props => props.theme.colors.darkTextColor};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 12px;\n  height: 12px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n  @media (min-width: 768px) {\n    width: 18px;\n    height: 18px;  \n  \n  }\n  `;","/*import Modal from 'react-modal';\nimport sprite from '../../images/icons.svg';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ModalWrapper, CloseButton, InputWrapper, ModalTitle, Input, CommentInput, SendButton, StyledSvgClose } from './NeedHelpModal.styled';\n*/\nimport Modal from 'react-modal';\nimport sprite from '../../images/icons.svg';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ModalWrapper, CloseButton, InputWrapper, ModalTitle, Input, CommentInput, SendButton, StyledSvgClose } from './NeedHelpModal.styled';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Please enter a valid email address')\n    .required(''),\n  comment: Yup.string()\n    .required('')\n});\n\n export const NeedHelpModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const handleSend = async () => {\n    try {\n      await axios.post('https://task-pro-backend-a1c2.onrender.com/api/users/needHelp----', {\n        email,\n        message: comment\n      });\n      // Дані відправлено успішно\n      onClose();\n    } catch (error) {\n      // Обробка помилки\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal-content\"\n      onRequestClose={onClose}\n      ariaHideApp={false}\n    >\n      <ModalWrapper>\n        <CloseButton onClick={onClose}>\n          <StyledSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </StyledSvgClose>\n        </CloseButton>\n        <ModalTitle>Need help</ModalTitle>\n        <Formik\n          initialValues={{ email: '', comment: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSend}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <InputWrapper>\n                <Input type=\"email\" name=\"email\" placeholder=\"Email address\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\n              </InputWrapper>\n              <InputWrapper>\n                <CommentInput type=\"text\" name=\"comment\" placeholder=\"Comment\" value={comment} onChange={(e) => setComment(e.target.value)} />\n                <ErrorMessage name=\"comment\" component=\"div\" className=\"error-message\" />\n              </InputWrapper>\n              <SendButton type=\"submit\" disabled={isSubmitting}>Send</SendButton>\n            </Form>\n          )}\n        </Formik>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n\n","import styled from \"styled-components\";\n\n export const HelpContainer = styled.div` \n box-sizing: border-box; \n display:flex;\n flex-wrap: wrap;\n width: 197px;\n  border: 1px solid #9092D6;\n  padding: 14px;\n  /* position: relative; */\n  background: #9092D6;\n  border-radius: 8px;\n  \n  @media (min-width: 768px) {\n    width: 212px;  \n    padding: 20px;\n  }\n  `;\n \n \n  \n\n\nexport const HelpImage = styled.img`\n  max-width: 54px;\n  height: 78px;\n  margin-bottom:14px;\n margin-right:100px\n\n`;\n\nexport const HelpText = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  color:#FFFFFF;\n  margin-bottom:18px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  };\n`;\n\nexport const HelpButton = styled.button`\n  width: 20px;\n  height: 20px;\n  display:flex;\n  border-radius: 50%;\n  border:none;\n  color: #FFFFFF;\n  cursor: pointer;\n  margin-right: 11px;\n  padding:0;\n  position: relative; \n  background: #9092D6;\n  `;\n  // border: 1.8px solid #161616;\n  \n  export const ButtonText= styled.div`\n  display:flex;  \n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  cursor: pointer;\n  color: #FFFFFF;\n  `;\n  \n  export const IconContainer = styled.div`\n  font-size: 1.7em;\n  \n  position: absolute;\n  top: 0%;\n  left: 0%;\n  transform: translate(-10%, -10%); \n  `;\n\n export const TaskPro = styled.span`\n  color: #5255BC; \n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  @media (min-width: 768px) {\n    font-size: 14px;\n  };\n\n`;\n\n","import React, { useState } from 'react';\nimport { NeedHelpModal } from 'components/NeedHelpModal/NeedHelpModal.jsx';\nimport { HelpContainer, HelpImage, HelpButton, HelpText, ButtonText, IconContainer, TaskPro} from './HelpApp.styled.js';\nimport flowerImage from './../../images/flower.png';\nimport { CiCircleQuestion } from \"react-icons/ci\";\n\nconst HelpApp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  \n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HelpContainer>\n      <HelpImage src={flowerImage} alt=\"flower\" />\n      <HelpText>\n        If you need help with <TaskPro >TaskPro</TaskPro>, check out our support resources or reach out to our customer support team.\n      </HelpText>\n      <HelpButton onClick={openModal}>\n        <IconContainer>\n          <CiCircleQuestion/>\n        </IconContainer>\n      </HelpButton>\n     \n      <ButtonText onClick={openModal}>Need help?</ButtonText>\n\n      {isModalOpen && \n        <NeedHelpModal \n          isOpen={isModalOpen}\n          onClose={closeModal}\n        />\n      }\n    </HelpContainer>\n  );\n}; \nexport default HelpApp;\n\n/*import React from 'react';\n// import sprite from '../../images/icons.svg';\nimport { HelpContainer, HelpImage, HelpButton, HelpText, ButtonText, IconContainer, TaskProLink} from './HelpApp.styled.js';\nimport flowerImage from './../../images/flower.png';\nimport { CiCircleQuestion } from \"react-icons/ci\";\n\nconst HelpApp = ({ openModal }) => {\n  return (\n    <HelpContainer>\n      <HelpImage src={flowerImage} alt=\"flower\" />\n      <HelpText>\n        If you need help with <TaskProLink href=\"#\">TaskPro</TaskProLink>, check out our support resources or reach out to our customer support team.\n      </HelpText>\n      <HelpButton onClick={openModal}>\n      <IconContainer>\n          <CiCircleQuestion/>\n        </IconContainer>\n      </HelpButton>\n     \n      <ButtonText onClick={openModal}>Need help?</ButtonText>\n    </HelpContainer>\n  );\n}; \nexport default HelpApp;*/\n","// needhelp\n// import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport sprite from '../../../images/icons.svg';\nimport { BoardList } from '../BoardList/BoardList';\nimport {\n  ItemsWrapper,\n  SidebarWrapper,\n  StyledCreateWrapper,\n  StyledLogoutBtn,\n  StyledSVGLogout,\n  StyledText,\n} from './SidebarNav.styled';\nimport { logout } from 'redux/auth/operations';\nimport { AddBoard } from 'components/boardModals/addBoard';\nimport HelpApp from 'components/HelpApp/HelpApp.jsx';\n\nexport const SidebarNav = () => {\n  const dispatch = useDispatch();\nconst navigate = useNavigate()\n\n  const handleClick = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  const { t } = useTranslation('global');\n  return (\n    <SidebarWrapper>\n      <StyledText>{t('screenPage.static.my-boards')}</StyledText>\n      <StyledCreateWrapper>\n        <AddBoard />\n      </StyledCreateWrapper>\n      <BoardList />\n      <ItemsWrapper>\n        <HelpApp />\n        <StyledLogoutBtn type=\"button\" onClick={handleClick}>\n          <StyledSVGLogout>\n            <use xlinkHref={`${sprite}#icon-login`}></use>\n          </StyledSVGLogout>\n          {t('screenPage.static.logout')}\n        </StyledLogoutBtn>\n      </ItemsWrapper>\n    </SidebarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DarkBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(21, 21, 21, 0.3);\n  z-index: 10;\n`;\n\nexport const StyledSidebar = styled.aside`\n  width: 197px;\n  background-color: ${p => p.theme.violetColors.accentColor};\n  padding: 14px;\n  z-index: 99;\n  position: absolute;\n  left: 0;\n  height: 100vh;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  @media screen and (min-width: 768px) {\n    width: 212px;\n    padding: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    z-index: 0;\n    position: static;\n    top: 0;\n    left: 0;\n  }\n`;\n","import { Logo } from './Logo/Logo';\nimport { SidebarNav } from './SidebarNav/SidebarNav';\nimport { StyledSidebar } from './Sidebar.styled';\nimport { forwardRef } from 'react';\n\nexport const Sidebar = forwardRef((props, ref) => {\n  return (\n    <StyledSidebar ref={ref}>\n      <Logo />\n      <SidebarNav />\n    </StyledSidebar>\n  );\n});\n","import { useEffect, useRef, useState } from 'react';\nimport sprite from '../../../images/icons.svg';\nimport {\n  BurgerMenuWrapper,\n  StyledBurgerMenu,\n  StyledSVGBurger,\n} from './BurgerMenu.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DarkBackground } from 'components/Sidebar/Sidebar.styled';\n\nexport const BurgerMenu = () => {\n  const [isOpen, setOpen] = useState(false);\n  const burgerMenuRef = useRef(null);\n  const sidebarRef = useRef(null);\n\n  const hendleOpenSidebar = () => {\n    console.log('Opening sidebar');\n    setOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    console.log('burgerMenuRef:', burgerMenuRef.current);\n    console.log('sidebarRef:', sidebarRef.current);\n    const handleClickClose = event => {\n      if (\n        burgerMenuRef.current &&\n        !burgerMenuRef.current.contains(event.target) &&\n        sidebarRef.current &&\n        !sidebarRef.current.contains(event.target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickClose);\n\n    return () => document.removeEventListener('click', handleClickClose);\n  }, [burgerMenuRef, sidebarRef]);\n\n  return (\n    <BurgerMenuWrapper>\n      <StyledBurgerMenu\n        type=\"button\"\n        onClick={hendleOpenSidebar}\n        isOpen={isOpen}\n        ref={burgerMenuRef}\n      >\n        <StyledSVGBurger>\n          <use xlinkHref={`${sprite}#icon-menu-01`}></use>\n        </StyledSVGBurger>\n      </StyledBurgerMenu>\n      {isOpen && (\n        <div>\n          <DarkBackground />\n          <Sidebar ref={sidebarRef} />\n        </div>\n      )}\n    </BurgerMenuWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  width: 320px;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 ${p => p.theme.spacing(5)};\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 0 ${p => p.theme.spacing(8)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1180px;\n    height: 68px;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const StyledHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyledHeaderItemWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n","// import { hover } from '@testing-library/user-event/dist/hover';\nimport React from 'react';\nimport Select from 'react-select';\nimport '../../Header/ThemeDropDown/theme.css';\n\nconst options = [\n  { value: 'Light', label: 'Light' },\n  { value: 'Dark', label: 'Dark' },\n  { value: 'Violet', label: 'Violet' },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'none',\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    padding: '14px 0 ',\n    '@media only screen and (min-width: 1440px)': {\n      padding: '18px 0',\n    },\n  }),\n\n  dropdownIndicator: provided => ({\n    ...provided,\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: 'rgb(22, 22, 22)',\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    fontWeight: '500',\n    fontSize: '14px',\n    letterSpacing: '-0.02em',\n    color: 'rgba(22, 22, 22, 0.8)',\n  }),\n};\n\nexport const ThemeDropDown = () => {\n  const handleChangeTheme = selectedOption => {\n    // i18n.changeLanguage(selectedOption.value);\n  };\n  return (\n    <Select\n      options={options}\n      styles={customStyles}\n      onChange={handleChangeTheme}\n      placeholder=\"Theme\"\n      classNamePrefix=\"custom-select\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledUserInfo = styled.div`\n  height: 32px;\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  margin: auto 0;\n\n  margin-left: ${p => p.theme.spacing(3.5)};\n\n  @media screen and (min-width: 1440px) {\n  \n    padding: 0 ${p => p.theme.spacing(6)} 0 0;\n \n  }\n`;\n\nexport const StyledUserBtn = styled.button`\n  width: 32px;\n  height: 32px;\n  background-color: transparent;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  padding: 0;\n`;\n\nexport const StyledUserName = styled.p`\n  color: ${p => p.theme.colors.darkTextColor};\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  margin: auto 0;\n`;\n\nexport const StyledUserPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radius.m};\n  background-color: violet;\n`;\n","import { ErrorMessage, Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  box-sizing: border-box;\n  border-radius: ${props => props.theme.radius.m};\n\n  width: 335px;\n  padding: ${p => p.theme.spacing(6)};\n\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background-color: #fcfcfc;\n\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\nexport const CLoseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  border: none;\n  padding: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  background-color: transparent;\n`;\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  border: none;\n  padding: 0;\n\n  stroke: ${props => props.theme.colors.darkTextColor};\n  stroke-width: 1.5px;\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.colors.darkTextColor};\n  margin-bottom: ${p => p.theme.spacing(6)};\n`;\n\nexport const ProfileFotoBox = styled.div`\n  width: 68px;\n  height: 78px;\n\n  margin: 0 auto ${p => p.theme.spacing(3.5)};\n  position: relative;\n`;\n\nexport const AddButton = styled.button`\n  width: 24px;\n  height: 24px;\n\n  border: 0;\n  border-radius: ${props => props.theme.radius.s};\n  background-color: #ecedfd;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 65%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  stroke-width: 0;\n\n  --color2: ${props => props.theme.colors.white};\n  --color1: #ecedfd;\n`;\nexport const ImageUser = styled.img`\n  width: 68px;\n  height: 68px;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const IconPlus = styled.svg`\n  width: 10px;\n  height: 10px;\n\n  stroke: ${props => props.theme.colors.darkTextColor};\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 14px;\n  margin: 0 auto;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  border: 1px solid ${props => props.theme.violetColors.accentColor};\n  border-radius: ${props => props.theme.radius.m};\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(9.5)}\n    ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(4.5)};\n  opacity: 0.4;\n  outline: none;\n  width: 100%;\n  height: 49px;\n\n  background-color: inherit;\n  color: ${props => props.theme.colors.darkTextColor};\n\n  &:focus {\n    opacity: 1;\n  }\n  box-sizing: border-box;\n`;\n\nexport const Button = styled.button`\n  border: 0;\n  border-radius: ${props => props.theme.radius.m};\n\n  background-color: ${props => props.theme.violetColors.accentColor};\n  color: ${props => props.theme.colors.white};\n\n  font-weight: 500;\n  width: 100%;\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(4.5)};\n  margin-top: ${p => p.theme.spacing(2.5)};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${props => props.theme.violetColors.hoverViolet};\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n  position: absolute;\n  left: 18px;\n  top: 50px;\n  color: #c04d4d;\n  z-index: 100;\n`;\n\nexport const HideBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  bottom: 18%;\n  right: 18px;\n  appearance: none;\n\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const IconEye = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: #fcfcfc;\n  stroke: ${props => props.theme.colors.darkTextColor};\n  opacity: 0.4;\n  stroke-width: 1.3px;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    stroke: ${props => props.theme.violetColors.hoverViolet};\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  AddButton,\n  Button,\n  CLoseButton,\n  ErrMessage,\n  HideBtn,\n  IconClose,\n  IconEye,\n  IconPlus,\n  IconUser,\n  // ImageUser,\n  ModalWrap,\n  ProfileFotoBox,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n  TitleModal,\n} from './EditProfileModal.styled.js';\nimport sprite from '../../images/icons.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n// import { useDispatch } from 'react-redux';\n\nconst editFormSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short').max(30, 'To long'),\n  email: Yup.string().email('Please enter a valid email address'),\n\n  password: Yup.string()\n    .min(5, 'The password should be at least 5 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const EditProfileModal = ({ onCloseModal }) => {\n  // const dispatch = useDispatch();\n  // const handleSubmit = objCredentials => {\n  //   return dispatch();\n  // };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // const Upload = () => (\n  //   <label>\n  //     <input type=\"file\" />\n  //   </label>\n  // );\n\n  return (\n    <ModalWrap>\n      <TitleModal>Edit profile</TitleModal>\n\n      <CLoseButton onClick={onCloseModal}>\n        <IconClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </IconClose>\n      </CLoseButton>\n      <ProfileFotoBox>\n        <IconUser>\n          <use xlinkHref={`${sprite}#icon-user`}></use>\n        </IconUser>\n        {/* зробити рендер за умовою */}\n        {/* <ImageUser src={userAvatar} alt=\"user-avatar\" /> */}\n        <AddButton>\n          <IconPlus>\n            <use xlinkHref={`${sprite}#icon-plus`}></use>\n          </IconPlus>\n        </AddButton>\n      </ProfileFotoBox>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={editFormSchema}\n        // onSubmit={(values, actions) => {\n        //   handleSubmit(values);\n        //   actions.resetForm();\n        // }}\n      >\n        <StyledForm>\n          <StyledLabel htmlFor=\"email\">\n            <StyledField\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter username\"\n            ></StyledField>\n            <ErrMessage component=\"span\" name=\"name\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"email\">\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n            ></StyledField>\n            <ErrMessage component=\"span\" name=\"email\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"password\">\n            <StyledField\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Enter password\"\n            ></StyledField>\n            <ErrMessage component=\"span\" name=\"password\" />\n            <HideBtn type=\"button \" onClick={onShowPassword}>\n              <IconEye>\n                <use xlinkHref={`${sprite}#icon-eye`}></use>\n              </IconEye>\n            </HideBtn>\n          </StyledLabel>\n\n          <Button type=\"submit\">Send</Button>\n        </StyledForm>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import {\n  StyledUserInfo,\n  StyledUserName,\n  StyledUserPhoto,\n  StyledUserBtn,\n} from './UserInfo.styled';\nimport photo from '../../../img/welcome.png';\nimport { useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditProfileModal } from 'components/EditProfileModal/EditProfileModal';\nimport '../../EditProfileModal/EditModal.css';\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n\nconst userName = useSelector(state => state.auth.user);\nconst [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <StyledUserInfo>\n      <StyledUserName>{userName.name}</StyledUserName>\n      <StyledUserBtn type=\"button\" onClick={openModal}>\n        <StyledUserPhoto src={photo} alt=\"user_photo\" width={32} height={32} />\n      </StyledUserBtn>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <EditProfileModal onCloseModal={closeModal} />\n      </Modal>\n    </StyledUserInfo>\n  );\n};\n","// import { SelectLanguage } from 'components/SelectLanguage/SelectLanguage';\nimport { BurgerMenu } from './BurgerMenu/BurgerMenu';\nimport {\n  StyledHeader,\n  StyledHeaderItemWrapper,\n  StyledHeaderWrapper,\n} from './Header.styled';\nimport { ThemeDropDown } from './ThemeDropDown/ThemeDropDown';\nimport { UserInfo } from './UserInfo/UserInfo';\n\nexport const Header = () => {\n  return (\n    <StyledHeaderWrapper>\n      <StyledHeader>\n        <BurgerMenu />\n        <StyledHeaderItemWrapper>\n          {/* <SelectLanguage/>  */}\n          <ThemeDropDown />\n          <UserInfo />\n        </StyledHeaderItemWrapper>\n      </StyledHeader>\n    </StyledHeaderWrapper>\n  );\n};\n","import { Header } from 'components/Header/Header';\nimport React, {  useEffect, useState } from 'react';\n\nimport {\n  // ButtonText,\n  HeaderWrapper,\n  HomeWrapper,\n  // Text,\n} from './HomePage.styled';\n// import { useTranslation } from 'react-i18next';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ScreensPage from './ScreensPage';\n// import { Loader } from 'components/Loader/Loader';\n\nexport default function HomePage() {\n  // const { t } = useTranslation('global');\n  // const boards = useSelector(selectAllBoards);\n  // const { boardId } = useParams();\n\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <HomeWrapper>\n      {isWideScreen && <Sidebar />}\n      <HeaderWrapper>\n        <Header />\n        {/* <Text> */}\n          {/* {t('screenPage.static.message1')}\n          <ButtonText>{t('screenPage.static.message2')}</ButtonText>\n          {t('screenPage.static.message3')} */}\n        {/* </Text> */}\n        <ScreensPage/>\n      </HeaderWrapper>\n\n      {/* <Loader/>            */}\n      {/* <Suspense fallback={null}>\n        <Outlet />\n      </Suspense> */}\n\n      {/* <Header /> */}\n      {/* {!boards.length && \n      <Text>{t('screenPage.static.message1')}\n      <ButtonText>{t('screenPage.static.message2')}</ButtonText>\n      {t('screenPage.static.message3')}</Text>} */}\n      {/* <ScreensPage/> */}\n      {/* <Link to={`/home/${boardId}`}></Link> */}\n       {/* <Suspense fallback={<Loader/>}><Outlet /></Suspense>     */}\n    </HomeWrapper> \n  );\n}\n"],"names":["BurgerMenuWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","StyledBurgerMenu","_templateObject2","props","isOpen","StyledSVGBurger","_templateObject3","StyledLogoWrapper","StyledLogoIcon","radius","m","StyledLogoText","StyledSVGLogo","_templateObject4","violetColors","accentColor","Logo","_jsxs","children","_jsx","xlinkHref","concat","sprite","StyledBoardList","_ref","isActive","StyledBoardItem","_ref2","colors","white","StyledSVGPensil","StyledSVGIcon","StyledSVGTrash","_templateObject5","StyledBoardListBtn","_templateObject6","StyledBtnWrapper","_templateObject7","_ref3","StyledModal","Modal","greyIconColor","Form","CloseButton","CloseSVG","darkTextColor","BigHeader","TitleInput","SmallHeader","List","_templateObject8","Radio","_templateObject9","IconSVG","_templateObject10","FuturePic","_templateObject11","shadowColor","SubmitButton","_templateObject12","hoverViolet","BoardModalBase","isModalOpen","info","onCloseModal","action","SubmitForm","_useState","useState","title","_useState2","_slicedToArray","setTitle","_useState3","iconURL","_useState4","setIcon","_useState5","backgroundURL","_useState6","setBackground","close","overlayClassName","onRequestClose","ariaHideApp","onClick","onSubmit","event","preventDefault","sub","id","name","placeholder","value","onChange","e","target","handleChange","required","map","Icon","index","type","checked","Background","BoardListItem","board","dispatch","useDispatch","setOpenModal","Link","to","_id","deleteBoard","editBoard","StyledBoardListWrapper","BoardList","boards","useSelector","selectAllBoards","useEffect","fetchBoards","activeItem","setActiveItem","_Fragment","length","handleBoardClick","SidebarWrapper","StyledText","StyledCreateWrapper","StyledLogoutBtn","StyledSVGLogout","ItemsWrapper","StyledSVG","StyledButton","StyledCreateBtn","AddBoardButton","AddBoard","icon","background","console","log","addBoard","ModalWrapper","ModalTitle","InputWrapper","Input","CommentInput","SendButton","StyledSvgClose","validationSchema","Yup","email","comment","NeedHelpModal","onClose","setEmail","setComment","handleSend","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","message","t0","stop","apply","arguments","className","Formik","initialValues","isSubmitting","ErrorMessage","component","disabled","HelpContainer","HelpImage","HelpText","HelpButton","ButtonText","IconContainer","TaskPro","setIsModalOpen","openModal","src","flowerImage","alt","CiCircleQuestion","SidebarNav","navigate","useNavigate","t","useTranslation","HelpApp","logout","DarkBackground","StyledSidebar","Sidebar","forwardRef","ref","BurgerMenu","setOpen","burgerMenuRef","useRef","sidebarRef","current","handleClickClose","contains","document","addEventListener","removeEventListener","StyledHeader","StyledHeaderWrapper","StyledHeaderItemWrapper","options","label","customStyles","control","provided","state","_objectSpread","backgroundColor","color","isFocused","border","boxShadow","display","padding","dropdownIndicator","content","option","fontWeight","fontSize","letterSpacing","ThemeDropDown","Select","styles","selectedOption","classNamePrefix","StyledUserInfo","StyledUserBtn","StyledUserName","StyledUserPhoto","ModalWrap","CLoseButton","IconClose","TitleModal","ProfileFotoBox","AddButton","s","IconUser","IconPlus","StyledForm","StyledLabel","StyledField","Field","Button","_templateObject13","ErrMessage","_templateObject14","HideBtn","_templateObject15","IconEye","_templateObject16","editFormSchema","shape","min","max","password","matches","EditProfileModal","showPassword","setShowPassword","htmlFor","UserInfo","userName","auth","user","closeModal","photo","width","height","closeTimeoutMS","Header","HomePage","window","innerWidth","isWideScreen","setIsWideScreen","handleResize","HomeWrapper","HeaderWrapper","ScreensPage"],"sourceRoot":""}