{"version":3,"file":"static/js/748.2c76f4bc.chunk.js","mappings":"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","sources":["components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/TaskCard/TaskCard.styled.js","components/TaskCard/TaskCard.jsx","components/CardListItem/CardListItem.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","components/ColumnListItem/ColumnListItem.styled.js","components/ColumnListItem/ColumnListItem.jsx","components/ColumnList/ColumnList.styled.js","components/ColumnList/ColumnList.jsx","Pages/ScreensPage.styled.js","Pages/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: red;\n  color: red;\n  transition: all 250ms linear;\n  fill: transparent;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 14px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:first-of-type {\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n\n  &:last-of-type {\n    position: relative;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-bottom: 14px;\n`;\n\nexport const BgWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 252px;\n  gap: 4px;\n`;\n\nexport const BgItem = styled.div`\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  width: 28px;\n  height: 28px;\n\n  background-position: center;\n  background-size: contain;\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const CustomRadioBtn = styled.div`\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n\n  background-position: center;\n  background-size: cover;\n\n  cursor: pointer;\n\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ShowAllLabel = styled.p`\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  cursor: pointer;\n\n  position: absolute;\n  top: 2px;\n  right: 0;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 16px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n`;\n\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const LabetlText = styled.p`\n  display: block;\n  width: 100%;\n\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n\n  cursor: pointer;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FilterSVG = styled.svg`\n  fill: rgba(22, 22, 22, 0.8);\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import sprite from '../../images/icons.svg';\nimport { useState } from 'react';\nimport {\n  // DefaultRadioBtn,\n  FilterSVG,\n  // Icon,\n  // Label,\n  // LabelItem,\n  // LabetlText,\n  // RadioBtnWrapper,\n  // Wrapper,\n} from './HeaderDashboard.styled';\nimport { Field, Form, Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showAll, togglePriority } from 'redux/project/projectSlice';\nconst options = ['without', 'low', 'medium', 'high'];\n\nexport const HeaderDashboard = () => {\n  const dispatch = useDispatch();\n  const projectName = useSelector(state => state.project.projectName);\n  const filtersPriority = useSelector(state => state.project.filtersPriority);\n  // togglePriority;\n  const [open, setOpen] = useState(false);\n  // const [selectedLabel, setSelectedLabel] = useState('');\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  // імпортувати назву проекта\n  const customStyles = {\n    content: {\n      width: '300px',\n      heihght: '234px',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: '#121212',\n    },\n  };\n\n  const initialValues = {\n    label: filtersPriority,\n  };\n\n  const isCheked = value => {\n    return filtersPriority.includes(value);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <h3>{projectName}</h3>\n      <button\n        onClick={handleOpen}\n        style={{\n          position: 'absolute',\n          top: '14px',\n          right: '24px',\n          display: 'flex',\n          gap: '8px',\n          background: 'none',\n          border: 'none',\n        }}\n      >\n        <FilterSVG>\n          <use xlinkHref={`${sprite}#icon-filter`}></use>\n        </FilterSVG>\n        <span>Filter</span>\n      </button>\n      <Modal\n        isOpen={open}\n        onRequestClose={handleClose}\n        style={customStyles}\n        appElement={document.getElementById('root')}\n      >\n        <div\n          style={{\n            position: 'relative',\n            padding: '24px',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <button\n            onClick={handleClose}\n            style={{ position: 'absolute', top: '14px', right: '14px' }}\n          >\n            X\n          </button>\n          <div style={{ color: 'white' }}>\n            <h4\n              style={{ borderBottom: '1px solid white', paddingBottom: '14px' }}\n            >\n              Filters\n            </h4>\n            <div\n              style={{\n                margin: '14px 0',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <span>Label color</span>\n              <button onClick={() => dispatch(showAll())}>Show all</button>\n            </div>\n            <Formik initialValues={initialValues}>\n              <Form>\n                {options.map((el, idx) => (\n                  <div key={idx}>\n                    <label>\n                      <Field\n                        type=\"checkbox\"\n                        checked={isCheked(el)}\n                        name=\"options\"\n                        onChange={e => dispatch(togglePriority(e.target.value))}\n                        value={el}\n                      />\n                      {el}\n                    </label>\n                  </div>\n                ))}\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from \"styled-components\";\n\nexport const TaskContainer = styled.div`\n    display: grid; \n    grid-template-columns: 4px 1fr;\n    gap: 14px;\n    width: 335px;\n    height: 154px;\n    margin: 0 ;\n    background-color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radius.m};    \n`;\n\nexport const PrioritySeeContainer = styled.div`\n    height: 154px;\n    width: 4px;\n    padding: 0;\n    border-radius: 8px 0px 0px 8px;\n    background-color:  ${p => p.theme.priorityColors.low};\n`;\n\nexport const MainContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(3.5)};\n    padding: ${p => p.theme.spacing(3.5)} 0;\n    padding-right: ${p => p.theme.spacing(5)};\n`;\n\nexport const Title = styled.h2`\n    \n  margin: 0;\n  margin-bottom: ${p => p.theme.spacing(2)};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nexport const TextContainer = styled.div`\n  width: 290px;\n  height: 67px;\n  margin: 0;\n`;\n\nexport const DescriptionContainer = styled.div`\n  max-height: 38px; \n  overflow: hidden;\n  line-height: 1.3; \n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical; \n`;\n\nexport const Text = styled.p`\n  width: 290px;\n  height: 34px;\n  margin: 0;\n  \n  font-weight: 300;\n  font-size: 12px;\n  line-height: 1.3;\n`;\n\nexport const Line = styled.div`\n    width: 291px;\n    height: 1px;\n    border-top: 1px solid ${p => p.theme.colors.darkTextColor};\n    opacity: 10%;\n`;\n\nexport const MenuCard = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(1)};\n    justify-content: space-between;\n`;\n\nexport const CardPriorityDeadline = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(3.5)};\n`;\n\nexport const ToDoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const SubTitle = styled.h3`\n    font-size: 8px;\n    line-height: 1.3;\n    margin: 0;\n    color: ${p => p.theme.colors.darkTextColor};\n    opacity: 50%;\n`;\n\nexport const PriorityContainer = styled.div`\n    display:flex;\n    gap: ${p => p.theme.spacing(1)};\n    height: 15px;\n    width: auto;\n`;\n\nexport const CirclePriority = styled.div`\n    height: 12px;\n    width: 12px;\n    border-radius: 50%;\n    background-color: ${p => p.theme.priorityColors.low};\n`;\n\nexport const TextPriority = styled.p`\n    font-size: 10px;\n    line-height: 1.3;\n    color: ${p => p.theme.colors.darkTextColor};\n    margin: 0;\n`;\n\nexport const DeadlineContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const TextDate = styled.p`\n    font-size: 10px;\n    line-height: 1.3;\n    color: ${p => p.theme.colors.darkTextColor};\n    margin: 0;\n`;\n\nexport const ButtonsContainer = styled.div`\n    display: flex;\n    align-items: flex-end;\n    gap: ${p => p.theme.spacing(3)};\n`;\n\nexport const Bell = styled.div`\n    display: none;\n`;\n\nexport const SvgBell = styled.svg`\n    height: 12px;\n    width: 12px;\n    fill:${p => p.theme.colors.white};\n    stroke: ${p => p.theme.violetColors.accentColor};\n    opacity: 50%;\n`;\n\nexport const Buttons = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const Btn = styled.button`\n    background: transparent;\n    border: transparent;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n`;\n\nexport const Svg = styled.svg`\n    height: 12px;\n    width: 12px;\n    fill:${p => p.theme.colors.white};\n    stroke: ${p => p.theme.colors.darkTextColor};\n    opacity: 50%;\n    transition: 200ms ease-out;\n\n    :hover, :focus {\n        stroke: ${p => p.theme.violetColors.accentColor};\n    }\n`;\n\n// priorityColors: { // task's priority colors\n//     low: '#8FA1D0', //low priority\n//     medium:'E09CB5', //medium priority\n//     high:'BEDBB0', // high priority\n//     without: '161616', //without priority\n//     },","import * as React from \"react\";\nimport { PrioritySeeContainer, CardPriorityDeadline, \n  TaskContainer, Title, Text, Line, ToDoContainer, \n  DeadlineContainer, Bell, Buttons, TextContainer, Svg, \n  Btn, MenuCard, SubTitle, CirclePriority, TextPriority, \n  PriorityContainer, MainContainer, TextDate, ButtonsContainer, SvgBell, DescriptionContainer } from \"./TaskCard.styled\";\nimport sprite from \"../../images/icons.svg\";\n\n\nexport const TaskCard = () => {\n   \n    \n\nreturn (\n    \n        <TaskContainer >\n          <PrioritySeeContainer></PrioritySeeContainer>\n          <MainContainer >\n            \n            <TextContainer >\n             <Title>\n                The Watch Spot Design\n             </Title>   \n             <DescriptionContainer>\n                <Text>\n                Create visually appealing and functional design prototypes based on\n                the approved concepts, ensuring seamless user experience and\n                incorporating feedback for iterative improvements.\n                </Text>\n             </DescriptionContainer>\n\n            </TextContainer>\n\n            <Line></Line>\n           \n            <MenuCard >\n              <CardPriorityDeadline >\n                <ToDoContainer >\n                    <SubTitle>Priority</SubTitle>\n                    <PriorityContainer>\n                    <CirclePriority  />\n                    <TextPriority>Low</TextPriority>\n                    </PriorityContainer>\n                                   \n                </ToDoContainer>\n                <DeadlineContainer >\n                    <SubTitle>\n                    Deadline\n                    </SubTitle>\n                  <TextDate >\n                    12/05/2023\n                  </TextDate>\n                </DeadlineContainer>\n              </CardPriorityDeadline>\n              <ButtonsContainer>\n                <Bell >\n                 <SvgBell>\n                    <use xlinkHref= {`${sprite}#icon-bell-01`}></use>\n                 </SvgBell>\n                </Bell> \n                <Buttons >\n                <Btn>\n                  <Svg>\n                    <use xlinkHref={`${sprite}#icon-active`}></use>\n                  </Svg>\n               </Btn>\n                <Btn>\n                  <Svg>\n                   <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n                  </Svg>\n                </Btn>\n                <Btn>\n                  <Svg>\n                    <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n                  </Svg>\n                </Btn>\n                </Buttons>\n              </ButtonsContainer>\n            </MenuCard>\n\n          </MainContainer>\n        </TaskContainer>\n      );\n    }\n\n\n","import { TaskCard } from \"components/TaskCard/TaskCard\";\n\nexport const CardListItem = () => {\n    // const cards = [];\n    return(\n        <>\n          {/* {cards.map(card => */}\n            <li >\n             {/* key={card.id} */}\n                <TaskCard/>                 \n            </li>\n          {/* ) }   */}\n        </>      \n      );\n};\n","import styled from \"styled-components\";\n\nexport const CardListWrapper = styled.div`\n  margin-bottom: ${p => p.theme.spacing(6)}; \n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: ${p => p.theme.spacing(13)} \n  };\n\n    @media only screen and (min-width: 1440px) {\n      margin-bottom: ${p => p.theme.spacing(4)}\n    };\n`;\n\nexport const CardListStyled = styled.ul`\n    padding-right: ${p => p.theme.spacing(1)}; \n    margin: ${p=>p.theme.spacing(3.5)} 0 ;\n    width: 347px;\n    display: flex;\n    flex-direction: column;\n    gap: ${p=> p.theme.spacing(2)};\n    max-height: 478px;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    @media only screen and (min-width: 768px) {\n      padding-right: ${p => p.theme.spacing(2)}; \n    };\n\n    /* Стилізація скроллбару */\n  &::-webkit-scrollbar {\n    width: 8px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};\n  }   \n`;\n\nexport const ButtonAddCard = styled.button`\n  width: 335px;\n  \n\n`;","import { CardListItem } from \"components/CardListItem/CardListItem\";\nimport { ButtonAddCard, CardListStyled, CardListWrapper } from \"./CardList.styled\";\n\nexport const CardList = () => {\n    return(\n        <CardListWrapper>\n        <CardListStyled>\n            <CardListItem/>\n            {/* <CardListItem/>\n            <CardListItem/>\n            <CardListItem/>             */}\n        </CardListStyled>\n        <ButtonAddCard type=\"button\">AddAnotherCard</ButtonAddCard>\n        </CardListWrapper>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const ColumnWrapper = styled.div`\n  display:flex;\n  flex-direction: column;  \n`;\n\nexport const ColumnHeader = styled.div`\n  width: 335px;\n  display: flex;\n  flex-direction:row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p=>p.theme.spacing(4.5)} 0;\n  border-radius: ${p => p.theme.radius.m};  \n  background-color:  ${p => p.theme.colors.white}\n`;\n\nexport const ColumnTitle = styled.h3`\n  margin-left: ${p => p.theme.spacing(5)}; \n  font-size: 14px;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditBlock = styled.div`\n  margin-right :${p => p.theme.spacing(5)} ;\n  display: flex;\n  flex-direction: row;\n  gap: ${p=>p.theme.spacing(2)} ;  \n`;\nexport const EditButton = styled.button`\n  display:flex;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const EditSVG = styled.svg`\n   stroke: ${p => p.theme.colors.greyIconColor};\n  fill: ${p => p.theme.colors.white};  \n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.violetColors.accentColor};\n  }\n`;\n\n","// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { CardList } from 'components/CardList/CardList';\nimport sprite from '../../images/icons.svg'\n\nimport { ColumnHeader, ColumnTitle, ColumnWrapper, EditBlock, EditButton, EditSVG } from \"./ColumnListItem.styled\";\n\nexport const ColumnListItem = () => {\n\n    // const dispatch = useDispatch();    \n    // const items = useSelector(selectColumns);\n    // const columns = [];\n    const title = ' Column Title';\n    \n    return(\n        <ColumnWrapper>\n         <ColumnHeader>\n         <ColumnTitle>{title}</ColumnTitle>\n          <EditBlock>\n            <EditButton type=\"button\">\n              <EditSVG>\n                <use xlinkHref={`${sprite}#icon-pencil-01`}/>\n              </EditSVG>\n            </EditButton>\n            <EditButton type=\"button\">\n              <EditSVG>\n                <use xlinkHref={`${sprite}#icon-trash-04`}/>\n              </EditSVG>\n            </EditButton>\n          </EditBlock>\n         </ColumnHeader>\n          {/* {columns.map(column =>\n            <li key={column.id}> */}\n                <CardList/>\n                {/* <button>ButtonAddAnotherCard</button>                  */}\n            {/* </li>\n          ) }   */}\n        </ColumnWrapper>      \n      );\n};\n","import styled from \"styled-components\";\n\nexport const ColumnListStyled = styled.ul`\n    margin: 45px 0 60px 20px;\n    display: flex;\n    flex-direction: row;\n    gap: ${p=> p.theme.spacing(8.5)};\n\n    @media only screen and (min-width: 768px) {\n        margin: 26px 0 96px 32px    \n    };\n\n    @media only screen and (min-width: 1440px) {\n        margin: 10px 0 36px 24px    \n    };\n\n    overflow-y: hidden;\n    overflow-x: auto;\n\n    &::-webkit-scrollbar {\n    width: 12px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};; \n  } \n`;\n\n","import { ColumnListItem } from \"components/ColumnListItem/ColumnListItem\";\nimport { ColumnListStyled } from \"./ColumnList.styled\";\n// приходить масив колонок\n//список колонок\nexport const ColumnList = () => {\n    return(\n        <ColumnListStyled>  \n            <ColumnListItem/>\n            {/* <ColumnListItem/> \n            <ColumnListItem/>                        */}\n        </ColumnListStyled>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const ScreensPageWrapper = styled.div`\n  background-color: ${p=>p.theme.violetColors.violetFill};\n  \n`;\n","import React from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { ColumnList } from 'components/ColumnList/ColumnList';\nimport { ScreensPageWrapper } from './ScreensPage.styled';\n\nexport default function ScreensPage () {\n  return (\n    <>\n      <ScreensPageWrapper>\n        <HeaderDashboard />\n        <ColumnList />\n        <button>ButtonAddAnotherColumn</button>\n      </ScreensPageWrapper>\n    </>\n  );\n};\n"],"names":["FilterSVG","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Field","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","Form","_templateObject16","_templateObject17","options","HeaderDashboard","dispatch","useDispatch","projectName","useSelector","state","project","filtersPriority","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","initialValues","label","_jsxs","style","position","children","_jsx","onClick","top","right","display","gap","background","border","xlinkHref","concat","sprite","Modal","isOpen","onRequestClose","content","width","heihght","left","bottom","marginRight","transform","backgroundColor","appElement","document","getElementById","padding","flexDirection","color","borderBottom","paddingBottom","margin","justifyContent","alignItems","showAll","Formik","map","el","idx","type","checked","value","includes","name","onChange","e","togglePriority","target","TaskContainer","p","theme","colors","white","radius","m","PrioritySeeContainer","priorityColors","low","MainContainer","spacing","Title","TextContainer","DescriptionContainer","Text","Line","darkTextColor","MenuCard","CardPriorityDeadline","ToDoContainer","SubTitle","PriorityContainer","CirclePriority","TextPriority","DeadlineContainer","TextDate","ButtonsContainer","_templateObject18","Bell","_templateObject19","SvgBell","_templateObject20","violetColors","accentColor","Buttons","_templateObject21","Btn","_templateObject22","Svg","_templateObject23","TaskCard","CardListItem","_Fragment","CardListWrapper","CardListStyled","lightViolet","l","ButtonAddCard","CardList","ColumnWrapper","ColumnHeader","ColumnTitle","EditBlock","EditButton","EditSVG","greyIconColor","ColumnListItem","ColumnListStyled","ColumnList","ScreensPageWrapper","violetFill","ScreensPage"],"sourceRoot":""}