{"version":3,"file":"static/js/426.91c49b3e.chunk.js","mappings":"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","sources":["components/HeaderDashboard/HeaderDashboard.jsx","components/TaskCard/TaskCard.styled.js","components/TaskCard/TaskCard.jsx","components/CardListItem/CardListItem.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","components/ColumnListItem/ColumnListItem.styled.js","components/ColumnListItem/ColumnListItem.jsx","components/ColumnList/ColumnList.styled.js","components/ColumnList/ColumnList.jsx","Pages/ScreensPage.styled.js","Pages/ScreensPage.jsx"],"sourcesContent":["export const HeaderDashboard = () => {\n    return(\n        <>\n            <>TitleNameDashboard</>\n            <>Filters</>\n        </>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const TaskContainer = styled.div`\n    display: grid; \n    grid-template-columns: 4px 1fr;\n    gap: 14px;\n    width: 335px;\n    height: 154px;\n    margin: 0 ;\n    background-color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radius.m};    \n`;\n\nexport const PrioritySeeContainer = styled.div`\n    height: 154px;\n    width: 4px;\n    padding: 0;\n    border-radius: 8px 0px 0px 8px;\n    background-color:  ${p => p.theme.priorityColors.low};\n`;\n\nexport const MainContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(3.5)};\n    padding: ${p => p.theme.spacing(3.5)} 0;\n    padding-right: ${p => p.theme.spacing(5)};\n`;\n\nexport const Title = styled.h2`\n    \n  margin: 0;\n  margin-bottom: ${p => p.theme.spacing(2)};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nexport const TextContainer = styled.div`\n  width: 290px;\n  height: 67px;\n  margin: 0;\n`;\n\nexport const DescriptionContainer = styled.div`\n  max-height: 38px; \n  overflow: hidden;\n  line-height: 1.3; \n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical; \n`;\n\nexport const Text = styled.p`\n  width: 290px;\n  height: 34px;\n  margin: 0;\n  \n  font-weight: 300;\n  font-size: 12px;\n  line-height: 1.3;\n`;\n\nexport const Line = styled.div`\n    width: 291px;\n    height: 1px;\n    border-top: 1px solid ${p => p.theme.colors.darkTextColor};\n    opacity: 10%;\n`;\n\nexport const MenuCard = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(1)};\n    justify-content: space-between;\n`;\n\nexport const CardPriorityDeadline = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(3.5)};\n`;\n\nexport const ToDoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const SubTitle = styled.h3`\n    font-size: 8px;\n    line-height: 1.3;\n    margin: 0;\n    color: ${p => p.theme.colors.darkTextColor};\n    opacity: 50%;\n`;\n\nexport const PriorityContainer = styled.div`\n    display:flex;\n    gap: ${p => p.theme.spacing(1)};\n    height: 15px;\n    width: auto;\n`;\n\nexport const CirclePriority = styled.div`\n    height: 12px;\n    width: 12px;\n    border-radius: 50%;\n    background-color: ${p => p.theme.priorityColors.low};\n`;\n\nexport const TextPriority = styled.p`\n    font-size: 10px;\n    line-height: 1.3;\n    color: ${p => p.theme.colors.darkTextColor};\n    margin: 0;\n`;\n\nexport const DeadlineContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const TextDate = styled.p`\n    font-size: 10px;\n    line-height: 1.3;\n    color: ${p => p.theme.colors.darkTextColor};\n    margin: 0;\n`;\n\nexport const ButtonsContainer = styled.div`\n    display: flex;\n    align-items: flex-end;\n    gap: ${p => p.theme.spacing(3)};\n`;\n\nexport const Bell = styled.div`\n    display: none;\n`;\n\nexport const SvgBell = styled.svg`\n    height: 12px;\n    width: 12px;\n    fill:${p => p.theme.colors.white};\n    stroke: ${p => p.theme.violetColors.accentColor};\n    opacity: 50%;\n`;\n\nexport const Buttons = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const Btn = styled.button`\n    background: transparent;\n    border: transparent;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n`;\n\nexport const Svg = styled.svg`\n    height: 12px;\n    width: 12px;\n    fill:${p => p.theme.colors.white};\n    stroke: ${p => p.theme.colors.darkTextColor};\n    opacity: 50%;\n    transition: 200ms ease-out;\n\n    :hover, :focus {\n        stroke: ${p => p.theme.violetColors.accentColor};\n    }\n`;\n\n// priorityColors: { // task's priority colors\n//     low: '#8FA1D0', //low priority\n//     medium:'E09CB5', //medium priority\n//     high:'BEDBB0', // high priority\n//     without: '161616', //without priority\n//     },","import * as React from \"react\";\nimport { PrioritySeeContainer, CardPriorityDeadline, \n  TaskContainer, Title, Text, Line, ToDoContainer, \n  DeadlineContainer, Bell, Buttons, TextContainer, Svg, \n  Btn, MenuCard, SubTitle, CirclePriority, TextPriority, \n  PriorityContainer, MainContainer, TextDate, ButtonsContainer, SvgBell, DescriptionContainer } from \"./TaskCard.styled\";\nimport sprite from \"../../images/icons.svg\";\n\n\nexport const TaskCard = () => {\n   \n    \n\nreturn (\n    \n        <TaskContainer >\n          <PrioritySeeContainer></PrioritySeeContainer>\n          <MainContainer >\n            \n            <TextContainer >\n             <Title>\n                The Watch Spot Design\n             </Title>   \n             <DescriptionContainer>\n                <Text>\n                Create visually appealing and functional design prototypes based on\n                the approved concepts, ensuring seamless user experience and\n                incorporating feedback for iterative improvements.\n                </Text>\n             </DescriptionContainer>\n\n            </TextContainer>\n\n            <Line></Line>\n           \n            <MenuCard >\n              <CardPriorityDeadline >\n                <ToDoContainer >\n                    <SubTitle>Priority</SubTitle>\n                    <PriorityContainer>\n                    <CirclePriority  />\n                    <TextPriority>Low</TextPriority>\n                    </PriorityContainer>\n                                   \n                </ToDoContainer>\n                <DeadlineContainer >\n                    <SubTitle>\n                    Deadline\n                    </SubTitle>\n                  <TextDate >\n                    12/05/2023\n                  </TextDate>\n                </DeadlineContainer>\n              </CardPriorityDeadline>\n              <ButtonsContainer>\n                <Bell >\n                 <SvgBell>\n                    <use xlinkHref= {`${sprite}#icon-bell-01`}></use>\n                 </SvgBell>\n                </Bell> \n                <Buttons >\n                <Btn>\n                  <Svg>\n                    <use xlinkHref={`${sprite}#icon-active`}></use>\n                  </Svg>\n               </Btn>\n                <Btn>\n                  <Svg>\n                   <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n                  </Svg>\n                </Btn>\n                <Btn>\n                  <Svg>\n                    <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n                  </Svg>\n                </Btn>\n                </Buttons>\n              </ButtonsContainer>\n            </MenuCard>\n\n          </MainContainer>\n        </TaskContainer>\n      );\n    }\n\n\n","import { TaskCard } from \"components/TaskCard/TaskCard\";\n\nexport const CardListItem = () => {\n    // const cards = [];\n    return(\n        <>\n          {/* {cards.map(card => */}\n            <li >\n             {/* key={card.id} */}\n                <TaskCard/>                 \n            </li>\n          {/* ) }   */}\n        </>      \n      );\n};\n","import styled from \"styled-components\";\n\nexport const CardListWrapper = styled.div`\n  margin-bottom: ${p => p.theme.spacing(6)}; \n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: ${p => p.theme.spacing(13)} \n  };\n\n    @media only screen and (min-width: 1440px) {\n      margin-bottom: ${p => p.theme.spacing(4)}\n    };\n`;\n\nexport const CardListStyled = styled.ul`\n    padding-right: ${p => p.theme.spacing(1)}; \n    margin: ${p=>p.theme.spacing(3.5)} 0 ;\n    width: 347px;\n    display: flex;\n    flex-direction: column;\n    gap: ${p=> p.theme.spacing(2)};\n    max-height: 478px;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    @media only screen and (min-width: 768px) {\n      padding-right: ${p => p.theme.spacing(2)}; \n    };\n\n    /* Стилізація скроллбару */\n  &::-webkit-scrollbar {\n    width: 8px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};\n  }   \n`;\n\nexport const ButtonAddCard = styled.button`\n  width: 335px;\n  \n\n`;","import { CardListItem } from \"components/CardListItem/CardListItem\";\nimport { ButtonAddCard, CardListStyled, CardListWrapper } from \"./CardList.styled\";\n\nexport const CardList = () => {\n    return(\n        <CardListWrapper>\n        <CardListStyled>\n            <CardListItem/>\n            {/* <CardListItem/>\n            <CardListItem/>\n            <CardListItem/>             */}\n        </CardListStyled>\n        <ButtonAddCard type=\"button\">AddAnotherCard</ButtonAddCard>\n        </CardListWrapper>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const ColumnWrapper = styled.div`\n  display:flex;\n  flex-direction: column;  \n`;\n\nexport const ColumnHeader = styled.div`\n  width: 335px;\n  display: flex;\n  flex-direction:row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p=>p.theme.spacing(4.5)} 0;\n  border-radius: ${p => p.theme.radius.m};  \n  background-color:  ${p => p.theme.colors.white}\n`;\n\nexport const ColumnTitle = styled.h3`\n  margin-left: ${p => p.theme.spacing(5)}; \n  font-size: 14px;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditBlock = styled.div`\n  margin-right :${p => p.theme.spacing(5)} ;\n  display: flex;\n  flex-direction: row;\n  gap: ${p=>p.theme.spacing(2)} ;  \n`;\nexport const EditButton = styled.button`\n  display:flex;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const EditSVG = styled.svg`\n   stroke: ${p => p.theme.colors.greyIconColor};\n  fill: ${p => p.theme.colors.white};  \n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.violetColors.accentColor};\n  }\n`;\n\n","// import { useDispatch, useSelector } from \"react-redux\";\n\nimport { CardList } from 'components/CardList/CardList';\nimport sprite from '../../images/icons.svg'\n\nimport { ColumnHeader, ColumnTitle, ColumnWrapper, EditBlock, EditButton, EditSVG } from \"./ColumnListItem.styled\";\n\nexport const ColumnListItem = () => {\n\n    // const dispatch = useDispatch();    \n    // const items = useSelector(selectColumns);\n    // const columns = [];\n    const title = ' Column Title';\n    \n    return(\n        <ColumnWrapper>\n         <ColumnHeader>\n         <ColumnTitle>{title}</ColumnTitle>\n          <EditBlock>\n            <EditButton type=\"button\">\n              <EditSVG>\n                <use xlinkHref={`${sprite}#icon-pencil-01`}/>\n              </EditSVG>\n            </EditButton>\n            <EditButton type=\"button\">\n              <EditSVG>\n                <use xlinkHref={`${sprite}#icon-trash-04`}/>\n              </EditSVG>\n            </EditButton>\n          </EditBlock>\n         </ColumnHeader>\n          {/* {columns.map(column =>\n            <li key={column.id}> */}\n                <CardList/>\n                {/* <button>ButtonAddAnotherCard</button>                  */}\n            {/* </li>\n          ) }   */}\n        </ColumnWrapper>      \n      );\n};\n","import styled from \"styled-components\";\n\nexport const ColumnListStyled = styled.ul`\n    margin: 45px 0 60px 20px;\n    display: flex;\n    flex-direction: row;\n    gap: ${p=> p.theme.spacing(8.5)};\n\n    @media only screen and (min-width: 768px) {\n        margin: 26px 0 96px 32px    \n    };\n\n    @media only screen and (min-width: 1440px) {\n        margin: 10px 0 36px 24px    \n    };\n\n    overflow-y: hidden;\n    overflow-x: auto;\n\n    &::-webkit-scrollbar {\n    width: 12px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};; \n  } \n`;\n\n","import { ColumnListItem } from \"components/ColumnListItem/ColumnListItem\";\nimport { ColumnListStyled } from \"./ColumnList.styled\";\n// приходить масив колонок\n//список колонок\nexport const ColumnList = () => {\n    return(\n        <ColumnListStyled>  \n            <ColumnListItem/>\n            {/* <ColumnListItem/> \n            <ColumnListItem/>                        */}\n        </ColumnListStyled>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const ScreensPageWrapper = styled.div`\n  background-color: ${p=>p.theme.violetColors.violetFill};\n  \n`;\n","import React from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { ColumnList } from 'components/ColumnList/ColumnList';\nimport { ScreensPageWrapper } from './ScreensPage.styled';\n\nexport default function ScreensPage () {\n  return (\n    <>\n    <ScreensPageWrapper>\n      <HeaderDashboard/>    \n      <ColumnList/>\n      <button>ButtonAddAnotherColumn</button>\n    </ScreensPageWrapper>\n    \n    \n    </>\n    \n  )\n}\n"],"names":["HeaderDashboard","_jsxs","_Fragment","children","_jsx","TaskContainer","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","white","radius","m","PrioritySeeContainer","_templateObject2","priorityColors","low","MainContainer","_templateObject3","spacing","Title","_templateObject4","TextContainer","_templateObject5","DescriptionContainer","_templateObject6","Text","_templateObject7","Line","_templateObject8","darkTextColor","MenuCard","_templateObject9","CardPriorityDeadline","_templateObject10","ToDoContainer","_templateObject11","SubTitle","_templateObject12","PriorityContainer","_templateObject13","CirclePriority","_templateObject14","TextPriority","_templateObject15","DeadlineContainer","_templateObject16","TextDate","_templateObject17","ButtonsContainer","_templateObject18","Bell","_templateObject19","SvgBell","_templateObject20","violetColors","accentColor","Buttons","_templateObject21","Btn","_templateObject22","Svg","_templateObject23","TaskCard","xlinkHref","concat","sprite","CardListItem","CardListWrapper","CardListStyled","lightViolet","l","ButtonAddCard","CardList","type","ColumnWrapper","ColumnHeader","ColumnTitle","EditBlock","EditButton","EditSVG","greyIconColor","ColumnListItem","ColumnListStyled","ColumnList","ScreensPageWrapper","violetFill","ScreensPage"],"sourceRoot":""}