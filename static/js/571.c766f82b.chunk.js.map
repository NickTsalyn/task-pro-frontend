{"version":3,"file":"static/js/571.c766f82b.chunk.js","mappings":"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","sources":["components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/CardListItem/CardListItem.jsx","components/CardList/CardList.styled.js","components/CardList/CardList.jsx","components/ColumnListItem/ColumnListItem.styled.js","components/ColumnListItem/ColumnListItem.jsx","components/ColumnList/ColumnList.styled.js","components/ColumnList/ColumnList.jsx","Pages/ScreensPage.styled.js","Pages/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: red;\n  color: red;\n  transition: all 250ms linear;\n  fill: transparent;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 14px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:first-of-type {\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n\n  &:last-of-type {\n    position: relative;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-bottom: 14px;\n`;\n\nexport const BgWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 252px;\n  gap: 4px;\n`;\n\nexport const BgItem = styled.div`\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  width: 28px;\n  height: 28px;\n\n  background-position: center;\n  background-size: contain;\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const CustomRadioBtn = styled.div`\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n\n  background-position: center;\n  background-size: cover;\n\n  cursor: pointer;\n\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ShowAllLabel = styled.p`\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  cursor: pointer;\n\n  position: absolute;\n  top: 2px;\n  right: 0;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 16px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n`;\n\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const LabetlText = styled.p`\n  display: block;\n  width: 100%;\n\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n\n  cursor: pointer;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FilterSVG = styled.svg`\n  fill: rgba(22, 22, 22, 0.8);\n  opacity: 0.4;\n  cursor: pointer;\n\n  width: 18px;\n  height: 18px;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import sprite from '../../images/icons.svg';\nimport { useState } from 'react';\nimport {\n  // DefaultRadioBtn,\n  FilterSVG,\n  // Icon,\n  // Label,\n  // LabelItem,\n  // LabetlText,\n  // RadioBtnWrapper,\n  // Wrapper,\n} from './HeaderDashboard.styled';\nimport { Field, Form, Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showAll, togglePriority } from 'redux/project/projectSlice';\nconst options = ['without', 'low', 'medium', 'high'];\n\nexport const HeaderDashboard = () => {\n  const dispatch = useDispatch();\n  const projectName = useSelector(state => state.project.projectName);\n  const filtersPriority = useSelector(state => state.project.filtersPriority);\n  // togglePriority;\n  const [open, setOpen] = useState(false);\n  // const [selectedLabel, setSelectedLabel] = useState('');\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  // імпортувати назву проекта\n  const customStyles = {\n    content: {\n      width: '300px',\n      heihght: '234px',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: '#121212',\n    },\n  };\n\n  const initialValues = {\n    label: filtersPriority,\n  };\n\n  const isCheked = value => {\n    return filtersPriority.includes(value);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <h3>{projectName}</h3>\n      <button\n        onClick={handleOpen}\n        style={{\n          position: 'absolute',\n          top: '14px',\n          right: '24px',\n          display: 'flex',\n          gap: '8px',\n          background: 'none',\n          border: 'none',\n        }}\n      >\n        <FilterSVG>\n          <use xlinkHref={`${sprite}#icon-filter`}></use>\n        </FilterSVG>\n        <span>Filter</span>\n      </button>\n      <Modal\n        isOpen={open}\n        onRequestClose={handleClose}\n        style={customStyles}\n        appElement={document.getElementById('root')}\n      >\n        <div\n          style={{\n            position: 'relative',\n            padding: '24px',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <button\n            onClick={handleClose}\n            style={{ position: 'absolute', top: '14px', right: '14px' }}\n          >\n            X\n          </button>\n          <div style={{ color: 'white' }}>\n            <h4\n              style={{ borderBottom: '1px solid white', paddingBottom: '14px' }}\n            >\n              Filters\n            </h4>\n            <div\n              style={{\n                margin: '14px 0',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <span>Label color</span>\n              <button onClick={() => dispatch(showAll())}>Show all</button>\n            </div>\n            <Formik initialValues={initialValues}>\n              <Form>\n                {options.map((el, idx) => (\n                  <div key={idx}>\n                    <label>\n                      <Field\n                        type=\"checkbox\"\n                        checked={isCheked(el)}\n                        name=\"options\"\n                        onChange={e => dispatch(togglePriority(e.target.value))}\n                        value={el}\n                      />\n                      {el}\n                    </label>\n                  </div>\n                ))}\n              </Form>\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// import { TaskCard } from \"components/TaskCard/TaskCard\";\n// import { useSelector } from \"react-redux\";\n// import { selectVisibleTasks } from \"../../redux/tasks/selectors\";\n\nexport const CardListItem = () => {\n    // const visibleTasks = useSelector(selectVisibleTasks);\n\n  //   if (visibleTasks.length === 0) {\n  //     return <p>No tasks to display.</p>;\n  // }\n    return(\n        <>\n        <li >\n          {/* {visibleTasks.map(task =>\n                <TaskCard\n                key={task.id}\n                task={task}/>                 \n           ) }   */}\n           </li> \n        </>      \n      );\n};\n","import styled from \"styled-components\";\n\nexport const CardListWrapper = styled.div`\n  margin-bottom: ${p => p.theme.spacing(6)}; \n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: ${p => p.theme.spacing(13)} \n  };\n\n    @media only screen and (min-width: 1440px) {\n      margin-bottom: ${p => p.theme.spacing(4)}\n    };\n`;\n\nexport const CardListStyled = styled.ul`\n    padding-right: ${p => p.theme.spacing(1)}; \n    margin: ${p=>p.theme.spacing(3.5)} 0 ;\n    width: 347px;\n    display: flex;\n    flex-direction: column;\n    gap: ${p=> p.theme.spacing(2)};\n    max-height: 478px;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    @media only screen and (min-width: 768px) {\n      padding-right: ${p => p.theme.spacing(2)}; \n    };\n\n    /* Стилізація скроллбару */\n  &::-webkit-scrollbar {\n    width: 8px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};\n  }   \n`;\n\nexport const ButtonAddCard = styled.button`\n  width: 335px;\n  \n\n`;","import { CardListItem } from \"components/CardListItem/CardListItem\";\nimport { ButtonAddCard, CardListStyled, CardListWrapper } from \"./CardList.styled\";\n\nexport const CardList = () => {\n    return(\n        <CardListWrapper>\n        <CardListStyled>\n            <CardListItem/>\n            {/* <CardListItem/>\n            <CardListItem/>\n            <CardListItem/>             */}\n        </CardListStyled>\n        <ButtonAddCard type=\"button\">AddAnotherCard</ButtonAddCard>\n        </CardListWrapper>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const ColumnWrapper = styled.div`\n  display:flex;\n  flex-direction: column;  \n`;\n\nexport const ColumnHeader = styled.div`\n  width: 335px;\n  display: flex;\n  flex-direction:row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p=>p.theme.spacing(4.5)} 0;\n  border-radius: ${p => p.theme.radius.m};  \n  background-color:  ${p => p.theme.colors.white}\n`;\n\nexport const ColumnTitle = styled.h3`\n  margin-left: ${p => p.theme.spacing(5)}; \n  font-size: 14px;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditBlock = styled.div`\n  margin-right :${p => p.theme.spacing(5)} ;\n  display: flex;\n  flex-direction: row;\n  gap: ${p=>p.theme.spacing(2)} ;  \n`;\nexport const EditButton = styled.button`\n  display:flex;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const EditSVG = styled.svg`\n   stroke: ${p => p.theme.colors.greyIconColor};\n  fill: ${p => p.theme.colors.white};  \n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.violetColors.accentColor};\n  }\n`;\n\n","import { useDispatch } from 'react-redux';\n\nimport { CardList } from 'components/CardList/CardList';\nimport sprite from '../../images/icons.svg';\nimport { deleteColumn, editColumn } from '../../redux/columns/operations';\n\nimport {\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  EditBlock,\n  EditButton,\n  EditSVG,\n} from './ColumnListItem.styled';\n\nexport const ColumnListItem = ({ column: { id, title, owner } }) => {\n  const dispatch = useDispatch();\n  const handlerEditColumn = (columnId, updatedData) => {\n    dispatch(editColumn({ id: columnId, ...updatedData }));\n  };\n  const handlerDeleteColumn = columnId => {\n    dispatch(deleteColumn(columnId));\n  };\n\n  // const dispatch = useDispatch();\n  // const items = useSelector(selectColumns);\n  // const columns = [];\n  // const title = ' Column Title';\n\n  return (\n    <ColumnWrapper>\n      <ColumnHeader>\n        <ColumnTitle>{title}</ColumnTitle>\n        <EditBlock>\n          <EditButton type=\"button\" onClick={() => handlerEditColumn(id)}>\n            <EditSVG>\n              <use xlinkHref={`${sprite}#icon-pencil-01`} />\n            </EditSVG>\n          </EditButton>\n          <EditButton type=\"button\" onClick={() => handlerDeleteColumn(id)}>\n            <EditSVG>\n              <use xlinkHref={`${sprite}#icon-trash-04`} />\n            </EditSVG>\n          </EditButton>\n        </EditBlock>\n      </ColumnHeader>\n      {/* {columns.map(column =>\n            <li key={column.id}> */}\n      <CardList />\n      {/* <button>ButtonAddAnotherCard</button>                  */}\n      {/* </li>\n          ) }   */}\n    </ColumnWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ColumnListStyled = styled.ul`\n    margin: 45px 0 60px 20px;\n    display: flex;\n    flex-direction: row;\n    gap: ${p=> p.theme.spacing(8.5)};\n\n    @media only screen and (min-width: 768px) {\n        margin: 26px 0 96px 32px    \n    };\n\n    @media only screen and (min-width: 1440px) {\n        margin: 10px 0 36px 24px    \n    };\n\n    overflow-y: hidden;\n    overflow-x: auto;\n\n    &::-webkit-scrollbar {\n    width: 12px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};; \n  } \n`;\n\n","import { ColumnListItem } from \"components/ColumnListItem/ColumnListItem\";\nimport { ColumnListStyled } from \"./ColumnList.styled\";\n// приходить масив колонок\n//список колонок\nexport const ColumnList = () => {\n    return(\n        <ColumnListStyled>  \n            <ColumnListItem/>\n            {/* <ColumnListItem/> \n            <ColumnListItem/>                        */}\n        </ColumnListStyled>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const ScreensPageWrapper = styled.div`\n  background-color: ${p=>p.theme.violetColors.violetFill};\n  \n`;\n","import React from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { ColumnList } from 'components/ColumnList/ColumnList';\nimport { ScreensPageWrapper } from './ScreensPage.styled';\n\nexport default function ScreensPage () {\n  return (\n    <>\n      <ScreensPageWrapper>\n        <HeaderDashboard />\n        <ColumnList />\n        <button>ButtonAddAnotherColumn</button>\n      </ScreensPageWrapper>\n    </>\n  );\n};\n"],"names":["FilterSVG","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Field","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","Form","_templateObject16","_templateObject17","options","HeaderDashboard","dispatch","useDispatch","projectName","useSelector","state","project","filtersPriority","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","initialValues","label","_jsxs","style","position","children","_jsx","onClick","top","right","display","gap","background","border","xlinkHref","concat","sprite","Modal","isOpen","onRequestClose","content","width","heihght","left","bottom","marginRight","transform","backgroundColor","appElement","document","getElementById","padding","flexDirection","color","borderBottom","paddingBottom","margin","justifyContent","alignItems","showAll","Formik","map","el","idx","type","checked","value","includes","name","onChange","e","togglePriority","target","CardListItem","_Fragment","CardListWrapper","p","theme","spacing","CardListStyled","violetColors","lightViolet","radius","l","colors","white","ButtonAddCard","CardList","ColumnWrapper","ColumnHeader","m","ColumnTitle","EditBlock","EditButton","EditSVG","greyIconColor","accentColor","ColumnListItem","_ref","_ref$column","column","id","title","owner","columnId","editColumn","_objectSpread","updatedData","deleteColumn","ColumnListStyled","ColumnList","ScreensPageWrapper","violetFill","ScreensPage"],"sourceRoot":""}