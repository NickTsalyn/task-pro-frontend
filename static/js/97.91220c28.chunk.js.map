{"version":3,"file":"static/js/97.91220c28.chunk.js","mappings":"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","sources":["images/icons.svg","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/ui/PriorityCheckboxForm.jsx","components/HeaderDashboard/HeaderDashboard.jsx","Pages/ScreensPage.styled.js","redux/columns/selectors.js","components/DashBoard/DashBoard.styled.jsx","components/ColumnModal/ColumnModal.styled.js","components/ColumnModal/AddColumnModal/AddColumnModal.jsx","components/ColumnModal/EditColumnModal/EditColumnModal.jsx","components/Button/AddColumnButton.styled.jsx","components/Button/Button.jsx","components/Button/AddColumnButton.jsx","components/ColumnList/ColumnList.styled.js","components/ColumnListItem/ColumnListItem.styled.js","components/AddCard/AddCard.styled.js","components/CardList/CardList.styled.js","redux/tasks/selectors.js","components/TaskCard/TaskCard.styled.js","components/TaskCard/TaskCard.jsx","components/CardList/CardList.jsx","components/AddCard/AddCard.js","components/ColumnListItem/ColumnListItem.jsx","components/ColumnList/ColumnList.jsx","components/DashBoard/DashBoard.jsx","Pages/ScreensPage.jsx","components/EditProfileModal/EditProfileModal.styled.js","redux/boards/selectors.js"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13, _symbol14, _symbol15, _symbol16, _symbol17, _symbol18, _symbol19, _symbol20, _symbol21, _symbol22, _symbol23;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-active\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"M4.45 9.333A13.328 13.328 0 0 1 16 2.666c7.364 0 13.333 5.97 13.333 13.333S23.363 29.332 16 29.332a13.329 13.329 0 0 1-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"M16 21.333 21.333 16 16 10.667M2.667 16h18.667\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-bell-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3,\n    d: \"M12.472 28c.94.83 2.175 1.333 3.528 1.333s2.588-.503 3.528-1.333M24 10.667a8 8 0 1 0-16 0c0 4.12-1.039 6.941-2.2 8.807-.979 1.574-1.469 2.361-1.451 2.581.02.243.071.336.267.481.177.131.974.131 2.569.131h17.63c1.595 0 2.392 0 2.569-.131.196-.145.247-.238.267-.481.018-.22-.472-1.007-1.451-2.581-1.161-1.866-2.2-4.687-2.2-8.807z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3.368,\n    d: \"M8.421 12.211 16 19.79l7.579-7.579\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-colors\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 27.296a8 8 0 1 0 7.44-13.683m-14.88.001a8 8 0 1 0 9.546 4.773M24 10.667a8 8 0 1 1-16 0 8 8 0 0 1 16 0z\"\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-container\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M27.333 9.704 16 16m0 0L4.667 9.704M16 16v12.667m12-7.256V10.588c0-.457 0-.685-.067-.889a1.343 1.343 0 0 0-.285-.485c-.145-.158-.345-.269-.744-.491l-9.867-5.481c-.378-.21-.567-.315-.767-.356a1.349 1.349 0 0 0-.537 0c-.2.041-.389.146-.767.356L5.099 8.723c-.399.222-.599.333-.744.491a1.34 1.34 0 0 0-.286.485c-.067.204-.067.432-.067.889v10.823c0 .457 0 .685.067.889.06.18.157.346.286.485.145.158.345.269.744.491l9.867 5.481c.378.21.567.315.767.356.177.036.36.036.537 0 .2-.041.389-.146.767-.356l9.867-5.481c.399-.222.599-.333.744-.491.129-.14.226-.305.285-.485.067-.204.067-.432.067-.889z\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.311,\n    d: \"M1.333 16S6.666 5.333 16 5.333 30.667 16 30.667 16 25.334 26.667 16 26.667 1.333 16 1.333 16z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.311,\n    d: \"M16 20a4 4 0 1 0 0-8 4 4 0 0 0 0 8z\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filter\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3,\n    d: \"M29.334 4H2.667l10.667 12.613v8.72L18.667 28V16.613L29.334 4z\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-help-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 29.333c7.364 0 13.333-5.97 13.333-13.333S23.363 2.667 16 2.667C8.636 2.667 2.667 8.637 2.667 16S8.637 29.333 16 29.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.88,\n    d: \"M12.12 12a4.003 4.003 0 0 1 6.834-1.249c.608.722.941 1.637.94 2.582 0 2.667-4 4-4 4M16 22.666h.02\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-hexagon-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M14.964 3.242c.378-.21.567-.315.767-.356.177-.036.36-.036.537 0 .2.041.389.146.767.356l9.867 5.481c.399.222.599.333.744.491.129.14.226.305.285.485.067.204.067.432.067.889v10.823c0 .457 0 .685-.067.889-.06.18-.157.346-.285.485-.145.158-.345.269-.744.491l-9.867 5.481c-.378.21-.567.315-.767.356-.177.036-.36.036-.537 0-.2-.041-.389-.146-.767-.356l-9.867-5.481c-.399-.222-.599-.333-.744-.491a1.34 1.34 0 0 1-.286-.485C4 22.096 4 21.868 4 21.411V10.588c0-.457 0-.685.067-.889.06-.18.157-.346.286-.485.145-.158.345-.269.744-.491l9.867-5.481z\"\n  }))), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-lightning-02\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M18.999 2.667h-7.674c-.239 0-.359 0-.465.036a.672.672 0 0 0-.249.154c-.08.078-.133.185-.24.399l-5.6 11.2c-.256.511-.383.767-.353.974a.669.669 0 0 0 .277.449c.172.12.458.12 1.029.12h8.274l-4 13.333 16.258-16.86c.548-.569.823-.853.839-1.097a.665.665 0 0 0-.235-.553c-.186-.157-.581-.157-1.372-.157h-9.49l3-8z\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-loading-03\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M4.454 22.666a6.364 6.364 0 0 1 1.944-8.453l.003-.003a6.37 6.37 0 0 1 7.312.126l4.576 3.327a6.37 6.37 0 0 0 7.312.126l.003-.003a6.36 6.36 0 0 0 1.943-8.453m-4.878 18.213a6.365 6.365 0 0 1-8.453-1.944l-.003-.003a6.37 6.37 0 0 1 .126-7.312l3.327-4.576a6.37 6.37 0 0 0 .126-7.312l-.006-.003a6.363 6.363 0 0 0-8.453-1.942m16.094 2.118c5.207 5.207 5.207 13.648 0 18.855s-13.648 5.207-18.855 0c-5.207-5.207-5.207-13.648 0-18.855s13.648-5.207 18.855 0z\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-login\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M11.867 10.08c.413-4.8 2.88-6.76 8.28-6.76h.173c5.96 0 8.347 2.387 8.347 8.347v8.693c0 5.96-2.387 8.347-8.347 8.347h-.173c-5.36 0-7.827-1.933-8.267-6.653M2.667 16H19.84\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M16.867 11.533 21.334 16l-4.467 4.467\"\n  }))), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-logo\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 0H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.331 23.027c.245-1.272.453-2.61.747-3.949.145-.701-.032-.999-.815-.946s-1.657.027-2.49 0c-.833-.027-.982-.446-.502-1.044 2.363-2.918 4.753-5.8 7.134-8.674.267-.326.575-.558 1.014-.312s.349.549.276.915c-.263 1.339-.48 2.677-.77 3.989-.149.678.045.919.751.892a20.959 20.959 0 0 1 2.127 0c.403 0 .933-.21 1.141.339s-.231.781-.453 1.107a315.559 315.559 0 0 1-2.752 3.342 1579.8 1579.8 0 0 0-4.051 4.854c-.263.317-.557.571-1.005.41s-.353-.54-.353-.924z\"\n  }))), _symbol14 || (_symbol14 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-logo2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.332 23.027c0.244-1.272 0.453-2.61 0.747-3.949 0.145-0.701-0.032-0.999-0.814-0.946s-1.657 0.027-2.49 0c-0.833-0.027-0.982-0.446-0.502-1.044 2.363-2.918 4.753-5.8 7.134-8.674 0.267-0.326 0.575-0.558 1.014-0.312s0.348 0.549 0.276 0.915c-0.263 1.339-0.48 2.677-0.77 3.989-0.149 0.678 0.045 0.919 0.751 0.892 0.709-0.036 1.419-0.036 2.128 0 0.403 0 0.933-0.21 1.141 0.339s-0.231 0.781-0.453 1.107c-0.905 1.115-1.823 2.229-2.752 3.342-1.361 1.624-2.711 3.242-4.051 4.854-0.263 0.317-0.557 0.571-1.005 0.41s-0.353-0.54-0.353-0.924z\"\n  }))), _symbol15 || (_symbol15 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-menu-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.5,\n    d: \"M4 16h24M4 8h24M4 24h24\"\n  }))), _symbol16 || (_symbol16 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil-01\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.334 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.199-.154.378-.333.736-.692L28 9.333A3.77 3.77 0 1 0 22.667 4L7.627 19.04c-.359.359-.538.538-.692.736a3.948 3.948 0 0 0-.364.56c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  }))), _symbol17 || (_symbol17 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.88,\n    d: \"M16 6.667v18.667M6.666 16h18.667\"\n  }))), _symbol18 || (_symbol18 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Project\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeWidth: 2.667,\n    d: \"M4.396 6.978a3.465 3.465 0 0 1 2.582-2.582 7.408 7.408 0 0 1 3.377 0 3.465 3.465 0 0 1 2.582 2.582c.26 1.11.26 2.266 0 3.377a3.465 3.465 0 0 1-2.582 2.582c-1.11.26-2.266.26-3.377 0a3.465 3.465 0 0 1-2.582-2.582 7.408 7.408 0 0 1 0-3.377zM4.396 21.645a3.465 3.465 0 0 1 2.582-2.582 7.38 7.38 0 0 1 3.377 0 3.464 3.464 0 0 1 2.582 2.582 7.408 7.408 0 0 1 0 3.377 3.465 3.465 0 0 1-2.582 2.582 7.38 7.38 0 0 1-3.377 0 3.464 3.464 0 0 1-2.582-2.582 7.408 7.408 0 0 1 0-3.377zM19.063 6.978a3.464 3.464 0 0 1 2.582-2.582 7.408 7.408 0 0 1 3.377 0 3.465 3.465 0 0 1 2.582 2.582 7.38 7.38 0 0 1 0 3.377 3.464 3.464 0 0 1-2.582 2.582 7.408 7.408 0 0 1-3.377 0 3.465 3.465 0 0 1-2.582-2.582 7.38 7.38 0 0 1 0-3.377zM19.063 21.645a3.464 3.464 0 0 1 2.582-2.582 7.38 7.38 0 0 1 3.377 0 3.464 3.464 0 0 1 2.582 2.582 7.38 7.38 0 0 1 0 3.377 3.464 3.464 0 0 1-2.582 2.582 7.38 7.38 0 0 1-3.377 0 3.464 3.464 0 0 1-2.582-2.582 7.38 7.38 0 0 1 0-3.377z\"\n  }))), _symbol19 || (_symbol19 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-puzzle-piece-02\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 4.8 4.8C24-.933 32.933 8 24.533 11.2l4.8 4.8-4.8 4.8c-3.2-8.4-12.133.533-3.733 3.733l-4.8 4.8-4.8-4.8C8 32.933-.933 24 7.467 20.8l-4.8-4.8 4.8-4.8c3.2 8.4 12.133-.533 3.733-3.733l4.8-4.8z\"\n  }))), _symbol20 || (_symbol20 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-star-04\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"m16 2.667 2.683 6.975c.376.978.564 1.466.856 1.878.259.364.577.683.942.942.411.292.9.48 1.878.856l6.975 2.683-6.975 2.683c-.978.376-1.466.564-1.878.856a3.993 3.993 0 0 0-.942.942c-.292.411-.48.9-.856 1.878L16 29.335l-2.683-6.975c-.376-.978-.564-1.466-.856-1.878a4.012 4.012 0 0 0-.942-.942c-.411-.292-.9-.48-1.878-.856l-6.975-2.683 6.975-2.683c.978-.376 1.466-.564 1.878-.856.364-.259.683-.578.942-.942.292-.411.48-.9.856-1.878L16 2.667z\"\n  }))), _symbol21 || (_symbol21 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash-04\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a6 6 0 0 0 3.672-3.435c.365-.896.439-2.012.588-4.243L25.335 8\"\n  }))), _symbol22 || (_symbol22 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.667,\n    d: \"M24 8 8 24M8 8l16 16\"\n  }))), _symbol23 || (_symbol23 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down1\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3.556,\n    d: \"m8 12 8 8 8-8\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ecedfd\",\n    style: {\n      fill: \"var(--color1, #ecedfd)\"\n    },\n    d: \"M3.765 0h24.471c2.079 0 3.765 1.686 3.765 3.765v24.471c0 2.079-1.686 3.765-3.765 3.765h-24.471c-2.079 0-3.765-1.686-3.765-3.765v-24.471c0-2.079 1.686-3.765 3.765-3.765z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color2, #fff)\"\n    },\n    d: \"M21.49 14.745c0 2.946-2.388 5.333-5.333 5.333s-5.333-2.388-5.333-5.333c0-2.946 2.388-5.333 5.333-5.333s5.333 2.388 5.333 5.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color2, #fff)\"\n    },\n    d: \"M29.060 32.853c0-1.723-0.339-3.429-0.999-5.020s-1.626-3.038-2.844-4.256c-1.218-1.218-2.664-2.184-4.256-2.844s-3.297-0.999-5.020-0.999c-1.723 0-3.429 0.339-5.020 0.999s-3.038 1.626-4.256 2.844c-1.218 1.218-2.184 2.664-2.844 4.256s-0.999 3.297-0.999 5.020h26.237z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.d2e1021fcf4687730adfca29d9de45b5.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { getTheme } from '../../components/themes';\n\nexport const ProjectName = styled.div`\n  color: ${p => getTheme(p.theme.selectedTheme).mainText};\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-left: 24px;\n  margin-top: 10px;\n`;\n\nexport const IconTextContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Icon = styled.svg`\n  stroke: ${p => getTheme(p.theme.selectedTheme).grayText};\n  width: 16px;\n  height: 16px;\n  stroke-width: 1.5px;\n  transition: all 250ms linear;\n  fill: transparent;\n`;\n\nexport const Text = styled.span`\n  color: ${p => getTheme(p.theme.selectedTheme).grayText};\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  outline: none;\n  top: 14px;\n  right: 24px;\n\n  &:hover {\n    opacity: 0.8;\n    transform: scale(1.2);\n    transition: all 250ms ease-in-out;\n    stroke: ${p => getTheme(p.theme.selectedTheme).accent};\n\n    ${Icon} {\n      stroke: ${p => getTheme(p.theme.selectedTheme).accent};\n    }\n\n    ${Text} {\n      color: ${p => getTheme(p.theme.selectedTheme).accent};\n    }\n  }\n`;\n\nexport const Section = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n`;\n\nexport const CloseModal = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  transition: all 250ms linear;\n  stroke: ${p => getTheme(p.theme.selectedTheme).plusIconFill};\n  stroke-width: 1.5px;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\n\nexport const SectionTitle = styled.h4`\n  color: ${p => getTheme(p.theme.selectedTheme).mainText};\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.div`\n  border-top: 1px solid ${p => getTheme(p.theme.selectedTheme).horizontScroll};\n  margin-bottom: 14px;\n`;\n\nexport const FormWraper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const FormTitle = styled.span`\n  color: ${p => getTheme(p.theme.selectedTheme).mainText};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02em;\n`;\n\nexport const ShowAllLabel = styled.p`\n  color: ${p => getTheme(p.theme.selectedTheme).grayText};\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-decoration-skip-ink: none;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\n\nexport const RadioBtnWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 8px;\n`;\n\nexport const CheckboxContainer = styled.div`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  input[type='checkbox'] {\n    position: absolute;\n    opacity: 0;\n    + .radio-label {\n      &:before {\n        content: '';\n        background-color: ${p => {\n          if (p.priority === 'without') {\n            return p.theme.priorityColors.without;\n          }\n          if (p.priority === 'low') {\n            return p.theme.priorityColors.low;\n          }\n          if (p.priority === 'medium') {\n            return p.theme.priorityColors.medium;\n          }\n          if (p.priority === 'high') {\n            return p.theme.priorityColors.high;\n          }\n        }};\n        border-radius: 100%;\n        border: 1px solid\n          ${p => {\n            if (p.priority === 'without') {\n              return p.theme.priorityColors.without;\n            }\n            if (p.priority === 'low') {\n              return p.theme.priorityColors.low;\n            }\n            if (p.priority === 'medium') {\n              return p.theme.priorityColors.medium;\n            }\n            if (p.priority === 'high') {\n              return p.theme.priorityColors.high;\n            }\n          }};\n        display: inline-block;\n        width: 1.4em;\n        height: 1.4em;\n        position: relative;\n        top: -0.2em;\n        margin-right: 1em;\n        vertical-align: top;\n        cursor: pointer;\n        text-align: center;\n        transition: all 250ms ease;\n      }\n    }\n    &:checked {\n      + .radio-label {\n        &:before {\n          background-color: ${p => {\n            if (p.priority === 'without') {\n              return p.theme.priorityColors.without;\n            }\n            if (p.priority === 'low') {\n              return p.theme.priorityColors.low;\n            }\n            if (p.priority === 'medium') {\n              return p.theme.priorityColors.medium;\n            }\n            if (p.priority === 'high') {\n              return p.theme.priorityColors.high;\n            }\n          }};\n          box-shadow: inset 0 0 0 4px white;\n        }\n      }\n    }\n    &:checked + .radio-label {\n      color: ${p => getTheme(p.theme.selectedTheme).mainText};\n    }\n    &:focus {\n      + .radio-label {\n        &:before {\n          outline: none;\n          border-color: ${p => {\n            if (p.priority === 'without') {\n              return p.theme.priorityColors.without;\n            }\n            if (p.priority === 'low') {\n              return p.theme.priorityColors.low;\n            }\n            if (p.priority === 'medium') {\n              return p.theme.priorityColors.medium;\n            }\n            if (p.priority === 'high') {\n              return p.theme.priorityColors.high;\n            }\n          }};\n        }\n      }\n    }\n\n    + .radio-label {\n      color: ${p => getTheme(p.theme.selectedTheme).grayText};\n\n      &:empty {\n        &:before {\n          margin-right: 0;\n        }\n      }\n    }\n  }\n`;\n","import { Formik } from 'formik';\nimport { CheckboxContainer, RadioBtnWrapper } from '../HeaderDashboard.styled';\nimport { useDispatch } from 'react-redux';\nimport { togglePriority } from 'redux/filters/filtersSlice';\nconst options = ['without', 'low', 'medium', 'high'];\n\nconst PriorityCheckboxForm = ({ filtersPriority }) => {\n  console.log(filtersPriority, filtersPriority);\n  const dispatch = useDispatch();\n  const initialValues = {\n    label: filtersPriority,\n  };\n  const isCheked = value => {\n    return filtersPriority.includes(value);\n  };\n  return (\n    <Formik initialValues={initialValues}>\n      <RadioBtnWrapper>\n        {options.map(el => (\n          <CheckboxContainer\n            priority={el}\n            onChange={e => {\n              dispatch(togglePriority(e.target.id));\n            }}\n          >\n            <input\n              id={el}\n              name=\"radio\"\n              defaultChecked={isCheked(el)}\n              type=\"checkbox\"\n              checked={isCheked(el)}\n            />\n            <label htmlFor={el} className=\"radio-label\">\n              {el}\n            </label>\n          </CheckboxContainer>\n        ))}\n      </RadioBtnWrapper>\n    </Formik>\n  );\n};\n\nexport default PriorityCheckboxForm;\n","import sprite from '../../images/icons.svg';\nimport { useState } from 'react';\nimport {\n  Button,\n  CloseModal,\n  FormTitle,\n  FormWraper,\n  Icon,\n  IconTextContainer,\n  Line,\n  ProjectName,\n  Section,\n  SectionTitle,\n  ShowAllLabel,\n  Text,\n} from './HeaderDashboard.styled';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showAll } from 'redux/filters/filtersSlice';\nimport { getTheme } from '../../components/themes';\nimport PriorityCheckboxForm from './ui/PriorityCheckboxForm';\n\nexport const HeaderDashboard = ({ project }) => {\n  console.log('project', project);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const filtersPriority = useSelector(state => state.filters.filtersPriority);\n\n  const customStyles = {\n    content: {\n      width: '300px',\n      heihght: '234px',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: `${getTheme().headerBgn}`,\n    },\n  };\n\n  return (\n    <>\n      <ProjectName>{project?.title}</ProjectName>\n      <Button onClick={handleOpen}>\n        <IconTextContainer>\n          <Icon>\n            <use xlinkHref={`${sprite}#icon-filter`}></use>\n          </Icon>\n          <Text>Filters</Text>\n        </IconTextContainer>\n      </Button>\n      <Modal\n        isOpen={open}\n        onRequestClose={handleClose}\n        style={customStyles}\n        appElement={document.getElementById('root')}\n      >\n        <CloseModal onClick={handleClose} type=\"button\">\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </CloseModal>\n        <Section>\n          <div>\n            <SectionTitle>Filters</SectionTitle>\n            <Line />\n            <FormWraper>\n              <FormTitle>Label color</FormTitle>\n              <ShowAllLabel\n                onClick={() => {\n                  console.log('Click');\n                  dispatch(showAll());\n                }}\n              >\n                Show all\n              </ShowAllLabel>\n            </FormWraper>\n            <PriorityCheckboxForm filtersPriority={filtersPriority} />\n          </div>\n        </Section>\n      </Modal>\n    </>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const ScreensPageWrapper = styled.div`\n  position: relative;\n  background-color: ${p => p.theme.violetColors.violetFill};\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n","export const selectColumns = state => state.columns.columns;\nexport const selectIsLoading = state => state.columns.isLoading;\nexport const selectError = state => state.columns.error;\nexport const selectBoardId =state => state.columns.board;\n","import styled from \"styled-components\";\n\nexport const Text = styled.p`  \n  margin: 258px 20px 0;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: rgba(22, 22, 22, 0.7);\n\n  @media only screen and (min-width: 375px) and (max-width: 768px) {\n    margin: 258px auto 0;\n    max-width: 335px;    \n  }\n  @media only screen and (min-width: 768px) {\n    margin: 368px auto 0;\n    max-width:486px;\n    font-size: 14px;    \n  }\n  @media only screen and (min-width: 1440px) {\n    margin: 247px auto 0; \n    /* margin-right: 347px;     */\n  }\n`;\n\nexport const ButtonText= styled.button`\n    padding: 0;\n    font-size: 12px;\n    border :none;\n    background-color: inherit;\n    color: ${p => p.theme.violetColors.accentColor};\n\n    @media only screen and (min-width: 768px) {      \n      font-size: 14px;\n    }\n`;","import styled from 'styled-components';\n\nexport const ModalCloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  border-color: transparent;\n  background-color: #fcfcfc;\n  transition: stroke 0.3s;\n`;\nexport const StyledSvgClose = styled.svg`\n  fill: ${props => props.theme.colors.darkTextColor};\n  stroke: ${props => props.theme.colors.darkTextColor};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 12px;\n  height: 12px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n`;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport sprite from '../../../images/icons.svg';\nimport '../ColumnModal.css';\nimport { ModalCloseButton, StyledSvgClose } from '../ColumnModal.styled';\n\n\n// Modal.setAppElement('#root');\n\n// const stylesModal = {\n//   position: 'relative',\n//   width: '100%',\n//   height: 'fit-content',\n//   maxHeight: '433px',\n//   maxWidth: '350px',\n//   // backgroundColor: ${props => props.theme.colors.white},\n//   // border-radius: '8px'\n//   // box-shadow: '0px 4px 16px 0px' ${props => props.theme.colors.greyIconColor};\n//   // transition: transform 0.3s;\n// }\n\nexport const AddColumnModal = ({ isOpen, onClose, submitButton, children }) => {\n  \n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName={'modal-overlay'}\n      // style={stylesModal}\n      className={'modal-content'}\n      closeTimeoutMS={300}\n      onRequestClose={() => onClose()}\n      ariaHideApp={false}\n    >\n\n   <ModalCloseButton onClick={() => onClose()}>\n          <StyledSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </StyledSvgClose>\n         \n        </ModalCloseButton>\n        {children}\n     \n      </Modal>\n    \n  );\n};\n","import React from 'react';\nimport Modal from 'react-modal';\nimport sprite from '../../../images/icons.svg';\nimport '../ColumnModal.css';\nimport { ModalCloseButton, StyledSvgClose } from '../ColumnModal.styled';\n// import { ModalCloseButton, StyledSvgClose } from '../ColumnModal.styled';\n\n// Modal.setAppElement('#root');\n\nconst stylesModal = {\n  position: 'relative',\n  width: '100%',\n  height: 'fit-content',\n  maxHeight: '433px',\n  maxWidth: '350px',\n  // backgroundColor: ${props => props.theme.colors.white},\n  // border-radius: '8px'\n  // box-shadow: '0px 4px 16px 0px' ${props => props.theme.colors.greyIconColor};\n  // transition: transform 0.3s;\n}\n\nexport const EditColumnModal = ({\n  isOpen,\n  onClose,\n  submitButton,\n  children,\n}) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName={'modal-overlay'}\n      // className={'modal-content'}\n      style={stylesModal}\n      closeTimeoutMS={300}\n      onRequestClose={() => onClose()}\n      ariaHideApp={false}\n    >\n     <ModalCloseButton onClick={() => onClose()}>\n        <StyledSvgClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </StyledSvgClose>\n      \n      </ModalCloseButton>\n      {children}\n     \n    </Modal>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from './Button';\n\nexport const ModalShowButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 334px;\n  height: 56px;\n  gap: 8px;\n  padding: 14px 0;\n  margin-bottom: 24px;\n  font-family: Poppins;\n  font-size: 14px;\n  letter-spacing: -0.32px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.darkTextColor};\n  border-radius: ${props => props.theme.radius.m};\n  border-color: ${props => props.theme.colors.white};\n  filter: drop-shadow(0 0 7px rgba(22, 22, 22, 0.08));\n  transition: background-color 0.3s;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const AddColumnTitle = styled.p`\n  color: ${props => props.theme.colors.darkTextColor};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.32px;\n  margin-bottom: 24px;\n`;\n\nexport const AddColumnInput = styled.input`\n  display: block;\n  width: 251px;\n  height: 21px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  margin-top: 24px;\n  opacity: 0.4;\n  border-radius: ${props => props.theme.radius.m};\n  border: 1px solid ${props => props.theme.violetColors.accentColor};\n  box-shadow: 0 4px 16px 0 ${props => props.theme.colors.shadowColor};\n  background-color: transparent;\n  color: ${props => props.theme.colors.darkTextColor};\n  letter-spacing: -0.32px;\n  &:focus {\n    opacity: 1;\n    outline: 1px solid ${props => props.theme.violetColors.accentColor};\n  }\n  @media screen and (min-width: 768px) {\n    width: 266px;\n  }\n`;\n\nexport const AddColumnBtn = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: Poppins;\n  font-size: 14px;\n  letter-spacing: -0.32px;\n  gap: 8px;\n  width: 100%;\n  width: 287px;\n  height: 49px;\n\n  padding: 10px 0;\n  background-color: ${props => props.theme.violetColors.accentColor};\n  color: ${props => props.theme.colors.white};\n  border-radius: 8px;\n  border-color: transparent;\n\n  &:hover {\n    background-color: ${props => props.theme.violetColors.hoverViolet};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const IconWhiteWrap = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radius.m};\n`;\n\nexport const IconVioletWrap = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.violetColors.hoverViolet};\n  border-radius: ${props => props.theme.radius.m};\n`;\n\nexport const StyledSvgWhitePlus = styled.svg`\n  fill: ${props => props.theme.colors.white};\n  stroke: ${props => props.theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  height: 14px;\n  border: none;\n`;\n\nexport const StyledSvgDarkPlus = styled.svg`\n  fill: ${props => props.theme.colors.darkTextColor};\n  stroke: ${props => props.theme.colors.darkTextColor};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  height: 14px;\n  border: none;\n`;\n","export const Button = ({\n    children,\n    type = 'click',\n    className,\n    handlerClick,\n    label,\n  }) => {\n    // Компонент кнопка, для зміни типу кнопки передаємо проп type=\"value\"-string\n    // якщо необхідно стилізувати кнопку, передаем компоненту <Button className={your style }></Button>\n  \n    return (\n      <button\n        type={type}\n        className={className}\n        onClick={handlerClick}\n        aria-label={label}\n      >\n        {children}\n      </button>\n    );\n  };","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AddColumnModal } from '../ColumnModal/AddColumnModal/AddColumnModal';\nimport { EditColumnModal } from '../ColumnModal/EditColumnModal/EditColumnModal';\nimport sprite from '../../images/icons.svg';\nimport {\n  addColumn,\n  // deleteColumn,\n  editColumn,\n} from '../../redux/columns/operations';\n\nimport {  \n  ModalShowButton,\n  AddColumnTitle,\n  AddColumnInput,\n  AddColumnBtn,\n  IconWhiteWrap,\n  IconVioletWrap,\n  StyledSvgWhitePlus,\n  StyledSvgDarkPlus,\n} from '../Button/AddColumnButton.styled';\nimport { useParams } from 'react-router-dom';\n\nexport const AddColumnButton = ({ columnId }) => {\n  const [modalAddColumnIsOpen, setModalAddColumnIsOpen] = useState(false);\n  const [modalEditColumnIsOpen, setModalEditColumnIsOpen] = useState(false);\n  const [editColumnValue, setEditColumnValue] = useState('');\n\n  const dispatch = useDispatch();\n  const {boardId} = useParams();\n  const handlerAddColumn = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.title.value.trim();\n    if (inputValue !== '') {\n      const newColumn = {\n        title: inputValue,\n        dashboardId:boardId\n      };\n     \n      dispatch(addColumn(newColumn));\n      setModalAddColumnIsOpen(false); \n      console.log(inputValue);\n      console.log(newColumn);\n      return;\n    }\n    return;\n  };\n\n  const handlerValue = ({ target }) => setEditColumnValue(target.value);\n\n  const handlerEditColumn = evt => {\n    evt.preventDefault();\n    const updatedTitle = evt.target.elements.title.value;\n\n    if (updatedTitle.trim() !== '') {\n      dispatch(editColumn({ id: columnId, title: updatedTitle }));\n      setModalEditColumnIsOpen(false);\n      return;\n    }\n    return;\n  };\n\n  // const handlerDeleteColumn = columnId => {\n  //   dispatch(deleteColumn(columnId));\n  // };\n\n  // export const handlerColumn = ({ column: { id, title, owner } }) => {\n  // const dispatch = useDispatch();\n  // const handlerEditColumn = (columnId, updatedData) => {\n  //   dispatch(editColumn({ id: columnId, ...updatedData }));\n  // };\n  // const handlerDeleteColumn = columnId => {\n  //   dispatch(deleteColumn(columnId));\n  // };\n\n  return (    \n      <>\n        <ModalShowButton\n          type=\"submit\"\n          onClick={() => setModalAddColumnIsOpen(true)}\n        >\n          <IconVioletWrap>\n            <StyledSvgWhitePlus>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </StyledSvgWhitePlus>\n          </IconVioletWrap>\n          Add another column\n        </ModalShowButton>\n\n        <ModalShowButton onClick={() => setModalEditColumnIsOpen(true)}>\n          <IconVioletWrap>\n            <StyledSvgWhitePlus>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </StyledSvgWhitePlus>\n          </IconVioletWrap>\n          Edit Column\n        </ModalShowButton>\n\n        <AddColumnModal\n          isOpen={modalAddColumnIsOpen}\n          onClose={() => setModalAddColumnIsOpen(false)}\n          submitButton=\"Add\"\n        >\n          <div>\n            <AddColumnTitle>Add column</AddColumnTitle>\n            <form onSubmit={handlerAddColumn}>\n              <AddColumnInput\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                autoFocus\n              />\n\n              <AddColumnBtn type=\"submit\">\n                <IconWhiteWrap>\n                  <StyledSvgDarkPlus>\n                    <use xlinkHref={`${sprite}#icon-plus`}></use>\n                  </StyledSvgDarkPlus>\n                </IconWhiteWrap>\n                Add\n              </AddColumnBtn>\n            </form>\n          </div>\n        </AddColumnModal>\n\n        <EditColumnModal\n          isOpen={modalEditColumnIsOpen}\n          onClose={() => setModalEditColumnIsOpen(false)}\n          submitButton=\"Add\"\n        >\n          <div>\n            <AddColumnTitle>Edit column</AddColumnTitle>\n            <form onSubmit={handlerEditColumn}>\n              <AddColumnInput\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"To Do\"\n                value={editColumnValue}\n                onChange={handlerValue}\n                autoFocus\n              />\n              <AddColumnBtn type=\"submit\">\n                <IconWhiteWrap>\n                  <StyledSvgDarkPlus>\n                    <use xlinkHref={`${sprite}#icon-plus`}></use>\n                  </StyledSvgDarkPlus>\n                </IconWhiteWrap>\n                Add\n              </AddColumnBtn>\n            </form>\n          </div>\n        </EditColumnModal>\n        </>      \n  );\n};\n","import styled from \"styled-components\";\n\nexport const ColumnListWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  margin-top: 46px;\n  width: 100%;\n\n  @media only screen and (min-width: 768px) {\n      margin-top: 26px; \n      max-width: 768px;   \n    };\n    @media only screen and (min-width: 1440px) {\n        margin-top: 10px;\n        max-width: 1440px;    \n    };\n\n    overflow-y: hidden;\n    overflow-x: auto;\n\n    &::-webkit-scrollbar {\n    width: 12px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};; \n  } \n`;\n\nexport const ColumnListStyled = styled.ul`\n    margin: 0 4px 60px 20px;\n    display: flex;\n    flex-direction: row;\n    gap: ${p=> p.theme.spacing(8.5)};\n\n    @media only screen and (min-width: 768px) {\n        margin: 0 4px 96px 32px    \n    };\n\n    @media only screen and (min-width: 1440px) {\n        margin: 0 4px 36px 24px    \n    };\n\n       overflow-y: hidden;\n      overflow-x: auto;\n\n      &::-webkit-scrollbar {\n      width: 12px; \n       } \n    &::-webkit-scrollbar-thumb {\n      background-color: ${p => p.theme.violetColors.lightViolet};\n      border-radius: ${p => p.theme.radius.l};\n      }\n    \n    &::-webkit-scrollbar-track {\n      background-color: ${p => p.theme.colors.white}; \n      border-radius: ${p => p.theme.radius.l};; \n      }    \n`;\n","import styled from \"styled-components\";\n\nexport const ColumnWrapper = styled.div`\n  display:flex;\n  flex-direction: column;  \n`;\n\nexport const ColumnHeader = styled.div`\n  width: 335px;\n  display: flex;\n  flex-direction:row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p=>p.theme.spacing(4.5)} 0;\n  border-radius: ${p => p.theme.radius.m};  \n  background-color:  ${p => p.theme.colors.white}\n`;\n\nexport const ColumnTitle = styled.h3`\n  margin-left: ${p => p.theme.spacing(5)}; \n  font-size: 14px;\n  letter-spacing: -0.28px;\n`;\n\nexport const EditBlock = styled.div`\n  margin-right :${p => p.theme.spacing(5)} ;\n  display: flex;\n  flex-direction: row;\n  gap: ${p=>p.theme.spacing(2)} ;  \n`;\nexport const EditButton = styled.button`\n  display:flex;\n  align-items: center;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const EditSVG = styled.svg`\n   stroke: ${p => p.theme.colors.greyIconColor};\n  fill: ${p => p.theme.colors.white};  \n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.violetColors.accentColor};\n  }\n`;\n\n","import { Field, Form } from \"formik\";\n\nimport { styled } from \"styled-components\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst getColor = (props) => {\n  switch (props.value) {\n    case 'Low':\n      return props.theme.priorityColors.low;\n    case 'Medium':\n      return props.theme.priorityColors.medium;\n    case 'High':\n      return props.theme.priorityColors.high;\n    default:\n      return props.theme.priorityColors.without;\n  }\n};\n\nexport const AddCardWrapper = styled(Form)`\npadding: 24px;\ndisplay:flex;\nflex-direction: column;\n\nwidth: 287px;\nbackground-color: ${p => p.theme.colors.white};\n\n`\nexport const AddCardContainer = styled.div`\n\ndisplay:flex;\nflex-direction: column;\ngap:24px;\n\n\n`\nexport const AddCardHeader = styled.h3`\nfont-weight: 500;\nfont-size: 18px;\nletter-spacing: -0.02em;\ncolor: ${p=> p.theme.colors.darkTextColor};\nwidth: 100%;\n\n`\n\nexport const AddCardTextCont = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap:14px;\n\n\n`\nexport const AddCardTitle = styled(Field)`\n width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.violetColors.accentColor};\n  background: ${p => p.theme.violetColors.bgColor};\n  color: ${p => p.theme.colors.darkTextColor};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.colors.darkTextColor};\n    letter-spacing: -0.02em;\n  }\n  &:focus {\n    opacity: 1;\n  }\n\n\n`\nexport const AddCardDescription = styled.textarea`\n width: 100%;\n  font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.violetColors.accentColor};\n  background: ${p => p.theme.violetColors.bgColor};\n  color: ${p => p.theme.colors.darkTextColor};\n  opacity: 0.4;\n  outline: none;\n  box-shadow: 0px 4px 16px 0px ${p => p.theme.colors.shadowColor};\n  box-sizing: border-box;\n  resize:none;\n  &::placeholder {\n    font-size: 14px;\n    color: ${p => p.theme.colors.darkTextColor};\n  }\n  &:focus {\n    opacity: 1;\n  }\n\n`\nexport const AddCardDesc = styled(Field)`\n /* width: 100%; */\n  /* font-size: 14px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  padding: 14px 18px;\n  border-radius: ${p => p.theme.radius.m};\n  border: 1px solid ${p => p.theme.violetColors.accentColor};\n  background: ${p => p.theme.violetColors.bgColor};\n  color: ${p => p.theme.colors.darkTextColor}; */\n\n\n`\n\nexport const AddCardColorCont = styled.div`\ndisplay: flex;\nflex-direction:column;\ngap:4px;\n\n`\nexport const AddCardLabelText = styled.p`\npadding: 0;\nmargin: 0;\nfont-size: 12px;\nletter-spacing: -0.02em;\ncolor: ${p => p.theme.colors.greyIconColor};\n\n\n`\nexport const AddCardLabelColor = styled(Field)`\n\nposition: relative;\nwidth: 14px;\nheight: 14px;\n&::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  background-color:  ${getColor};\n}\n/* input[type=\"radio\"]:checked + &::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  background-color:  ${getColor};\n\n   opacity:0; \n} */\n`\nexport const AddCardContMark = styled.div`\n\ndisplay: flex;\ngap:8px;\n\n\n`\n\n\nexport const AddCardBtn = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap:8px;\nwidth: 100%;\npadding-top: 10px;\npadding-bottom: 10px;\nbackground-color: ${p => p.theme.violetColors.accentColor};\nborder-radius:8px;\nborder-color:transparent;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 21px;\nletter-spacing: -2%;\n\n\n`\n\nexport const AddCardDate = styled(DatePicker)`\npadding: 0;\nbackground-color: ${p => p.theme.violetColors.bgColor};\n border:none;\n color: ${p => p.theme.violetColors.accentColor};\n outline: none;\n font-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\n.react-datepicker__month-container{\nbackground-color: '#ECEDFD';\ncolor:'#ECEDFD';\n\n\n}\n.react-datepicker__header  {\n    background-color: #4caf50;\n    color: #fff;\n  }\n\n`\n\nexport const AddCardContCal = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap:4px;\n`\nexport const AddCardOptionCont = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap:14px;\nmargin-bottom: 40px;\n\n\n`\nexport const AddCardTextCal = styled.p`\npadding:0;\nmargin: 0;\nfont-size: 12px;\nletter-spacing: -0.02em;\ncolor:${p => p.theme.colors.greyIconColor};\n\n`\n\nexport const AddCardSvgContainer = styled.span`\ndisplay: flex;\nalign-items: 'center';\njustify-content: center;\nborder-radius: 4px; \n\nwidth: 28px;\nheight: 28px;\nbackground-color:${p => p.theme.colors.white};\n\n\n\n\n`\n\n\nexport const AddCardButtonSvg = styled.svg`\n\n\n\nfill: ${p => p.theme.colors.darkTextColor};\n  stroke: ${p => p.theme.colors.darkTextColor};\n \n  width: 14px;\n  height: 14px;\n  margin:auto;\n \n\n`\nexport const AddCardSvgButtonText = styled.p`\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: ${p => p.theme.colors.white};\npadding: 0;\nmargin: 0;\n\n`\n\nexport const AddAnotherCard = styled.button`\nmargin-top:14px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap:8px;\nwidth: 100%;\npadding-top: 10px;\npadding-bottom: 10px;\nbackground-color: ${p => p.theme.violetColors.accentColor};\nborder-radius:8px;\nborder-color:transparent;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 21px;\nletter-spacing: -2%;\n`\n\nexport const AddCardSvgClose = styled.svg`\nfill: ${p => p.theme.colors.darkTextColor};\n  stroke: ${p => p.theme.colors.darkTextColor};\n  width: 18px;\n  height: 18px;\n\n`","import styled from \"styled-components\";\n\nexport const CardListWrapper = styled.div`\n  margin-bottom: ${p => p.theme.spacing(6)}; \n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: ${p => p.theme.spacing(13)} \n  };\n\n    @media only screen and (min-width: 1440px) {\n      margin-bottom: ${p => p.theme.spacing(4)}\n    };\n`;\n\nexport const CardListStyled = styled.ul`\n    padding-right: ${p => p.theme.spacing(1)}; \n    margin: ${p=>p.theme.spacing(3.5)} 0 ;\n    width: 347px;\n    display: flex;\n    flex-direction: column;\n    gap: ${p=> p.theme.spacing(2)};\n    max-height: 478px;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    @media only screen and (min-width: 768px) {\n      padding-right: ${p => p.theme.spacing(2)}; \n    };\n\n    /* Стилізація скроллбару */\n  &::-webkit-scrollbar {\n    width: 8px; /* Ширина скроллбару */    \n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.violetColors.lightViolet}; /* Колір скроллбару */\n    border-radius: ${p => p.theme.radius.l}; /* Округлення країв скроллбару */\n  }\n  \n  &::-webkit-scrollbar-track {\n    background-color: ${p => p.theme.colors.white}; /* Колір фону скроллбару */\n    border-radius: ${p => p.theme.radius.l};\n  }   \n`;\n\nexport const ButtonAddCard = styled.button`\n  width: 335px;\n  \n\n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectTasks = state => state.tasks.tasks;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.tasks.isLoading;\nexport const selectError = state => state.tasks.error;\n// export const getTasks = state => state.tasks.items;\n\nexport const selectVisibleTasks = createSelector (\n    [selectTasks], (tasks, filter) => {\nreturn tasks.filter(tasks => tasks.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n) ","import styled from \"styled-components\";\n\nexport const TaskContainer = styled.div`\n    display: grid; \n    grid-template-columns: 4px 1fr;\n    gap: 14px;\n    width: 335px;\n    height: 154px;\n    margin: 0 ;\n    background-color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radius.m};    \n`;\n\nexport const PrioritySeeContainer = styled.div`\n    height: 154px;\n    width: 4px;\n    padding: 0;\n    border-radius: 8px 0px 0px 8px;\n    background-color:  ${p => p.theme.priorityColors.low};\n`;\n\nexport const MainContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(3.5)};\n    padding: ${p => p.theme.spacing(3.5)} 0;\n    padding-right: ${p => p.theme.spacing(5)};\n`;\n\nexport const Title = styled.h2`\n    \n  margin: 0;\n  margin-bottom: ${p => p.theme.spacing(2)};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nexport const TextContainer = styled.div`\n  width: 290px;\n  height: 67px;\n  margin: 0;\n`;\n\nexport const DescriptionContainer = styled.div`\n  max-height: 38px; \n  overflow: hidden;\n  line-height: 1.3; \n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical; \n`;\n\nexport const Text = styled.p`\n  width: 290px;\n  height: 34px;\n  margin: 0;\n  \n  font-weight: 300;\n  font-size: 12px;\n  line-height: 1.3;\n`;\n\nexport const Line = styled.div`\n    width: 291px;\n    height: 1px;\n    border-top: 1px solid ${p => p.theme.colors.darkTextColor};\n    opacity: 10%;\n`;\n\nexport const MenuCard = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(1)};\n    justify-content: space-between;\n`;\n\nexport const CardPriorityDeadline = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(3.5)};\n`;\n\nexport const ToDoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const SubTitle = styled.h3`\n    font-size: 8px;\n    line-height: 1.3;\n    margin: 0;\n    color: ${p => p.theme.colors.darkTextColor};\n    opacity: 50%;\n`;\n\nexport const PriorityContainer = styled.div`\n    display:flex;\n    gap: ${p => p.theme.spacing(1)};\n    height: 15px;\n    width: auto;\n`;\n\nexport const CirclePriority = styled.div`\n    height: 12px;\n    width: 12px;\n    border-radius: 50%;\n    background-color: ${p => p.theme.priorityColors.low};\n`;\n\nexport const TextPriority = styled.p`\n    font-size: 10px;\n    line-height: 1.3;\n    color: ${p => p.theme.colors.darkTextColor};\n    margin: 0;\n`;\n\nexport const DeadlineContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const TextDate = styled.p`\n    font-size: 10px;\n    line-height: 1.3;\n    color: ${p => p.theme.colors.darkTextColor};\n    margin: 0;\n`;\n\nexport const ButtonsContainer = styled.div`\n    display: flex;\n    align-items: flex-end;\n    gap: ${p => p.theme.spacing(3)};\n`;\n\nexport const Bell = styled.div`\n    display: none;\n`;\n\nexport const SvgBell = styled.svg`\n    height: 16px;\n    width: 16px;\n    fill:${p => p.theme.colors.white};\n    stroke: ${p => p.theme.violetColors.accentColor};\n    opacity: 50%;\n`;\n\nexport const Buttons = styled.div`\n    display: flex;\n    gap: ${p => p.theme.spacing(1)};\n`;\n\nexport const Btn = styled.button`\n    background: transparent;\n    border: transparent;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n`;\n\nexport const Svg = styled.svg`\n    height: 16px;\n    width: 16px;\n    fill:${p => p.theme.colors.white};\n    stroke: ${p => p.theme.colors.darkTextColor};\n    opacity: 50%;\n    transition: 200ms ease-out;\n\n    :hover, :focus {\n        stroke: ${p => p.theme.violetColors.accentColor};\n    }\n`;\n\n// priorityColors: { // task's priority colors\n//     low: '#8FA1D0', //low priority\n//     medium:'E09CB5', //medium priority\n//     high:'BEDBB0', // high priority\n//     without: '161616', //without priority\n//     },","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport sprite from \"../../images/icons.svg\";\nimport { deleteTask, editTask } from \"redux/tasks/operations\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\n\n\nimport { PrioritySeeContainer, CardPriorityDeadline, \n  TaskContainer, Title, Text, Line, ToDoContainer, \n  DeadlineContainer, Bell, Buttons, TextContainer, Svg, \n  Btn, MenuCard, SubTitle, CirclePriority, TextPriority, \n  PriorityContainer, MainContainer, TextDate, ButtonsContainer, \n  SvgBell, DescriptionContainer } from \"./TaskCard.styled\";\n// import { PopUpSetColumn } from \"components/PopUpSetColumn/PopUpSetColumns\";\n\nModal.setAppElement('#root');\n\nexport const TaskCard = ({ task: { _id, title, description, priority } }) => {\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  \n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // const toEditTask = (taskId, updatedData) => {\n  //   dispatch(editTask({ id: taskId, updatedData }));\n  //   successToaster();\n  // };\n\n  // const toDeleteTask = taskId => {\n  //   dispatch(deleteTask(taskId));\n  //   successToaster();\n  // };\n\n  const toEditTask = async (taskId, updatedData) => {\n    try {\n      await dispatch(editTask({ id: taskId, updatedData }));\n      successToaster();\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n  const toDeleteTask = async (taskId) => {\n    try {\n      await dispatch(deleteTask(taskId));\n      successToaster();\n    } catch (error) {\n      errorToaster(error.message);\n    }\n  };\n\n\n  const successToaster = () => {\n    toast.success(\"It's success! Congratulations!\", {\n      position: \"top-right\",\n      duration: 4000,\n      style: {\n        background: \"green\",\n        color: \"#fff\",\n      },\n    });\n  };\n\n  const errorToaster = (error) => {toast.error(`Ooops.... It's ${error} error`, {\n    position: \"top-right\",\n    duration: 4000,\n    style: {\n      background: \"red\",\n      color: \"#fff\",\n    },\n  \n  });}\n\n  return (\n\n    <TaskContainer>\n      <PrioritySeeContainer></PrioritySeeContainer>\n      <MainContainer>\n\n        <TextContainer>\n          <Title>{title}</Title>\n          <DescriptionContainer>\n            <Text>{description}</Text>\n          </DescriptionContainer>\n\n        </TextContainer>\n\n        <Line></Line>\n\n        <MenuCard>\n          <CardPriorityDeadline>\n            <ToDoContainer>\n              <SubTitle>{priority}</SubTitle>\n              <PriorityContainer>\n                <CirclePriority />\n                <TextPriority></TextPriority>\n              </PriorityContainer>\n\n            </ToDoContainer>\n            <DeadlineContainer>\n              <SubTitle>\n                Deadline\n              </SubTitle>\n              <TextDate>\n\n              </TextDate>\n            </DeadlineContainer>\n          </CardPriorityDeadline>\n          <ButtonsContainer>\n            <Bell>\n              <SvgBell>\n                <use xlinkHref={`${sprite}#icon-bell-01`}></use>\n              </SvgBell>\n            </Bell>\n            <Buttons>\n              <Btn type=\"button\" onClick={openModal}>\n                <Svg>\n                  <use xlinkHref={`${sprite}#icon-active`}></use>\n                </Svg>\n              </Btn>\n              <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        {/* <PopUpSetColumn onCloseModal={closeModal} /> */}\n      </Modal>\n              <Btn type=\"button\" onClick={() => toEditTask(_id)}>\n                <Svg>\n                  <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n                </Svg>\n              </Btn>\n              <Btn type=\"button\" onClick={() => toDeleteTask(_id)}>\n                <Svg>\n                  <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n                </Svg>\n              </Btn>\n            </Buttons>\n          </ButtonsContainer>\n        </MenuCard>\n\n      </MainContainer>\n\n      <Toaster />\n\n    </TaskContainer>\n  );\n}\n\n\n","import {  CardListStyled, CardListWrapper } from \"./CardList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectTasks } from \"redux/tasks/selectors\";\nimport { TaskCard } from \"components/TaskCard/TaskCard\";\nimport { fetchTitle } from \"redux/tasks/operations\";\nimport { useEffect } from \"react\";\n\nexport const CardList = ( {columnId} ) => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTitle())\n  \n  }, [dispatch])\n\n    const tasks = useSelector(selectTasks);\n    // console.log(tasks);\n    // console.log(columnId);   \n    const filteredTasks = tasks.filter((task) => task.column === columnId);\n   \n    return(\n        <CardListWrapper>\n        <CardListStyled>  \n            {filteredTasks.map(task => (\n              <li key={task._id}>\n                <TaskCard task={task}/>\n              </li>\n            ))}\n        </CardListStyled>      \n        </CardListWrapper>\n    )\n};\n","import { Field, Formik } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from '../../images/icons.svg';\n\n\nimport {\n  AddCardBtn,\n  AddCardButtonSvg,\n  AddCardColorCont,\n  AddCardContCal,\n  AddCardContMark,\n  AddCardContainer,\n  AddCardDate,\n  // AddCardDesc,\n  AddCardDescription,\n  AddCardHeader,\n  AddCardLabelColor,\n  AddCardLabelText,\n  AddCardOptionCont,\n  AddCardSvgButtonText,\n  AddCardSvgClose,\n  AddCardSvgContainer,\n  AddCardTextCal,\n  AddCardTextCont,\n  AddCardTitle,\n  AddCardWrapper,\n} from './AddCard.styled';\nimport { useState} from 'react';\nimport { CLoseButton } from 'components/EditProfileModal/EditProfileModal.styled';\nimport { addTask } from 'redux/tasks/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const AddCard = ({ onCloseModal, id }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const dispatch = useDispatch();\n  // const formik = useFormik({\n  //   initialValues: {\n  //     title: '',\n  //     description: '',\n  //     priority: '',\n  //     deadline: '',\n  //   },\n   \n  // });\n\n//   const saveCard = ()=>{\n\n//     const newCard = {\n//       title: formik.values.title,\n//       description: formik.values.description,\n//       priority: formik.values.priority,\n//       deadline: formik.values.deadline,\n//     };\n// dispatch(addTask(newCard));\n\n\n//   }\n\n  const isToday = date => {\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        description: '',\n        priority: '',\n        deadline: `${startDate}`,\n      }}\n      onSubmit={(values, { resetForm }) => {\n        const newCard = {\n          title: values.title,\n          description: values.description,\n          priority: values.priority,\n          deadline: values.deadline,\n          column: id\n        };\n        \n        dispatch(addTask(newCard));\n        resetForm();\n\n      }}\n    >\n      <AddCardWrapper>\n        <CLoseButton onClick = {onCloseModal}>\n          <AddCardSvgClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </AddCardSvgClose>\n          </CLoseButton>\n        <AddCardContainer>\n          <AddCardHeader>Add Card</AddCardHeader>\n          <AddCardTextCont>\n            <AddCardTitle name=\"title\" placeholder=\"Title\" />\n            {/* <Field className='AddCardDesc' as='textarea'name=\"description\"></Field> */}\n            <Field\n            as={AddCardDescription}\n              name=\"description\"\n           \n              placeholder=\"Description\"\n              // value={Formik.values.description}\n              // onChange={(e) => {\n              //   AddCardDescription.value = e.target.value;\n              //   console.dir(AddCardDescription.value);\n              // }}\n              // onBlur={Formik.handleBlur}\n            />\n          </AddCardTextCont>\n          <AddCardOptionCont>\n            <AddCardColorCont>\n              <AddCardLabelText>Label color</AddCardLabelText>\n\n              <label>\n                <AddCardContMark>\n                  <AddCardLabelColor type=\"radio\" name=\"priority\" value=\"Low\" />\n                  <AddCardLabelColor type=\"radio\" name=\"priority\" value=\"Medium\" />\n                  <AddCardLabelColor type=\"radio\" name=\"priority\" value=\"High\" />\n                  <AddCardLabelColor type=\"radio\" name=\"priority\" value=\"Without\" />\n                </AddCardContMark>\n              </label>\n            </AddCardColorCont>\n            <AddCardContCal>\n              <AddCardTextCal>DeadLine</AddCardTextCal>\n              <AddCardDate\n              name='deadline'\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                dateFormat={\n                  isToday(startDate) ? \"'Today,' MMMM d\" : 'EEEE,MMMM d'\n                }\n                showWeekNumbers\n              />\n            </AddCardContCal>\n          </AddCardOptionCont>\n        </AddCardContainer>\n        <AddCardBtn type=\"submit\">\n          <AddCardSvgContainer>\n            <AddCardButtonSvg>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </AddCardButtonSvg>\n          </AddCardSvgContainer>\n          <AddCardSvgButtonText>Add</AddCardSvgButtonText>\n        </AddCardBtn>\n      </AddCardWrapper>\n    </Formik>\n  );\n};\n","import sprite from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport {\n  ColumnHeader,\n  ColumnTitle,\n  ColumnWrapper,\n  EditBlock,\n  EditButton,\n  EditSVG,\n} from './ColumnListItem.styled';\n\nimport { AddAnotherCard, AddCardButtonSvg, AddCardSvgButtonText, AddCardSvgContainer } from 'components/AddCard/AddCard.styled';\nimport { CardList } from 'components/CardList/CardList';\nimport { AddCard } from 'components/AddCard/AddCard';\n\n// import { useDispatch } from 'react-redux';\nModal.setAppElement('#root');\nexport const ColumnListItem = ({column}) => {    \n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  console.log(column);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  \n  \n  // const dispatch = useDispatch();\n  // const handlerEditColumn = (columnId, updatedData) => {\n  //   dispatch(editColumn({ id: columnId, ...updatedData }));\n  // };\n  // const handlerDeleteColumn = columnId => {\n  //   dispatch(deleteColumn(columnId));\n  // };\n    return(\n        <ColumnWrapper>\n         <ColumnHeader>\n         <ColumnTitle>{column.title}</ColumnTitle>\n          <EditBlock>\n            <EditButton type=\"button\" \n            // onClick={() => handlerEditColumn(id)}\n            >\n              <EditSVG>\n                <use xlinkHref={`${sprite}#icon-pencil-01`}/>\n              </EditSVG>\n            </EditButton>\n            <EditButton type=\"button\" \n            // onClick={() => handlerDeleteColumn(id)}\n            >\n              <EditSVG>\n                <use xlinkHref={`${sprite}#icon-trash-04`}/>\n              </EditSVG>\n            </EditButton>\n          </EditBlock>\n         </ColumnHeader>          \n            <CardList columnId={column._id}/>\n            {/* <AddColumnButton/> */}\n            <AddAnotherCard onClick = {openModal} type=\"submit\">\n          <AddCardSvgContainer>\n            <AddCardButtonSvg>\n              <use xlinkHref={`${sprite}#icon-plus`}></use>\n            </AddCardButtonSvg>\n          </AddCardSvgContainer>\n          <AddCardSvgButtonText>Add</AddCardSvgButtonText>\n        </AddAnotherCard> \n\n\n            <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <AddCard onCloseModal={closeModal} id={column._id}/>\n      </Modal> \n        </ColumnWrapper>      \n      );\n};\n","import { AddColumnButton } from \"components/Button/AddColumnButton\";\nimport { ColumnListStyled, ColumnListWrapper } from \"./ColumnList.styled\";\nimport { ColumnListItem } from \"components/ColumnListItem/ColumnListItem\";\n\n\nexport const ColumnList = ({columns}) => {\n\n//   const {boardId} = useParams();\n\n//   const dispatch = useDispatch();\n//      useEffect(() => {\n      \n//     dispatch(getColumsById(boardId))\n      \n//     }, [boardId]);\n    // const columns = useSelector(selectColumns);//приходить масив колонок;\n    // const { boardId } = useParams(); // Отримуємо динамічний параметр з URL\n    // console.log(boardId);\n    \n    // const filteredColumns = columns.filter((column) => column.board === boardId);\n    // console.log(filteredColumns);\n  \n  \n    // const handlerEditColumn = (columnId, updatedData) => {\n    //   dispatch(editColumn({ id: columnId, ...updatedData }));\n    // };\n    // const handlerDeleteColumn = columnId => {\n    //   dispatch(deleteColumn(columnId));\n    // };\n    console.log(columns);\n\n    return(\n        <ColumnListWrapper>\n        <ColumnListStyled>  \n           {columns.map(column => (\n            <li key={column._id} >                \n                <ColumnListItem column={column}/>                \n            </li>\n           ))}                               \n           \n        </ColumnListStyled>\n        \n        <AddColumnButton/>\n            \n        </ColumnListWrapper>\n    )\n};\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { selectAllBoards } from 'redux/boards/selectors';\nimport { getAllColumns } from 'redux/columns/operations';\nimport { selectColumns } from 'redux/columns/selectors';\nimport { ButtonText, Text } from './DashBoard.styled';\nimport { ColumnList } from 'components/ColumnList/ColumnList';\n\nconst DashBoard = () => {\n const {boardId} = useParams();\nconst dispatch = useDispatch();\n \nconst boards = useSelector(selectAllBoards); \n\n  useEffect(() => {\n    dispatch(getAllColumns())\n  \n  }, [dispatch])\n  const { t } = useTranslation('global');\n  \n  \n  const columns = useSelector(selectColumns);\n   const filteredColumns = columns.filter((column) => column.board === boardId);\n    console.log(columns);\n    console.log(filteredColumns);\n\n  return (\n    <>  \n      {boards.length === 0 ? \n        (<Text>{t('screenPage.static.message1')}\n        <ButtonText>{t('screenPage.static.message2')}</ButtonText>\n        {t('screenPage.static.message3')}</Text> )\n        : <ColumnList columns={filteredColumns}/>  }\n     \n    </>\n  );\n};\n\nexport default DashBoard;\n","import React from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { ScreensPageWrapper } from './ScreensPage.styled';\nimport DashBoard from 'components/DashBoard/DashBoard';\n\nexport default function ScreensPage() {    \n  \n  return (    \n      <ScreensPageWrapper>\n        <HeaderDashboard />\n        <DashBoard/>\n        {/* {(boards.length === 0 && filteredColumns.length === 0) ? <ColumnList columns={filteredColumns}/> : <AddColumnButton/> } */}\n        \n      </ScreensPageWrapper>    \n  );\n}\n","import { ErrorMessage, Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  box-sizing: border-box;\n  border-radius: ${props => props.theme.radius.m};\n\n  width: 335px;\n  padding: ${p => p.theme.spacing(6)};\n\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background-color: #fcfcfc;\n\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\nexport const CLoseButton = styled.button`\n  width: 18px;\n  height: 18px;\n  border: none;\n  padding: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  background-color: transparent;\n`;\nexport const IconClose = styled.svg`\n  width: 18px;\n  height: 18px;\n  border: none;\n  padding: 0;\n\n  stroke: ${props => props.theme.colors.darkTextColor};\n  stroke-width: 1.5px;\n`;\n\nexport const TitleModal = styled.h4`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.colors.darkTextColor};\n  margin-bottom: ${p => p.theme.spacing(6)};\n`;\n\nexport const ProfileFotoBox = styled.div`\n  width: 68px;\n  height: 78px;\n\n  margin: 0 auto ${p => p.theme.spacing(3.5)};\n  position: relative;\n`;\n\nexport const AddButton = styled.button`\n  width: 24px;\n  height: 24px;\n\n  border: 0;\n  border-radius: ${props => props.theme.radius.s};\n  background-color: #ecedfd;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 65%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconUser = styled.svg`\n  width: 68px;\n  height: 68px;\n  stroke-width: 0;\n\n  --color2: ${props => props.theme.colors.white};\n  --color1: #ecedfd;\n`;\nexport const ImageUser = styled.img`\n  width: 68px;\n  height: 68px;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const IconPlus = styled.svg`\n  width: 10px;\n  height: 10px;\n\n  stroke: ${props => props.theme.colors.darkTextColor};\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 14px;\n  margin: 0 auto;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  border: 1px solid ${props => props.theme.violetColors.accentColor};\n  border-radius: ${props => props.theme.radius.m};\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(9.5)}\n    ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(4.5)};\n  opacity: 0.4;\n  outline: none;\n  width: 100%;\n  height: 49px;\n\n  background-color: inherit;\n  color: ${props => props.theme.colors.darkTextColor};\n\n  &:focus {\n    opacity: 1;\n  }\n  box-sizing: border-box;\n`;\n\nexport const Button = styled.button`\n  border: 0;\n  border-radius: ${props => props.theme.radius.m};\n\n  background-color: ${props => props.theme.violetColors.accentColor};\n  color: ${props => props.theme.colors.white};\n\n  font-weight: 500;\n  width: 100%;\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(4.5)};\n  margin-top: ${p => p.theme.spacing(2.5)};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${props => props.theme.violetColors.hoverViolet};\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n  position: absolute;\n  left: 18px;\n  top: 50px;\n  color: #c04d4d;\n  z-index: 100;\n`;\n\nexport const HideBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  bottom: 18%;\n  right: 18px;\n  appearance: none;\n\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const IconEye = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: #fcfcfc;\n  stroke: ${props => props.theme.colors.darkTextColor};\n  opacity: 0.4;\n  stroke-width: 1.3px;\n  transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    stroke: ${props => props.theme.violetColors.hoverViolet};\n  }\n`;\n","export const selectLoading = state => state.boards.isLoading\nexport const selectAllBoards = state => state.boards.boards\n// export const selectBoardById = state => state.boards."],"names":["ProjectName","styled","_templateObject","_taggedTemplateLiteral","p","getTheme","theme","selectedTheme","mainText","IconTextContainer","_templateObject2","Icon","_templateObject3","grayText","Text","_templateObject4","Button","_templateObject5","accent","Section","_templateObject6","CloseModal","_templateObject7","plusIconFill","SectionTitle","_templateObject8","Line","_templateObject9","horizontScroll","FormWraper","_templateObject10","FormTitle","_templateObject11","ShowAllLabel","_templateObject12","RadioBtnWrapper","Form","_templateObject13","CheckboxContainer","_templateObject14","priority","priorityColors","without","low","medium","high","options","_ref","filtersPriority","console","log","dispatch","useDispatch","initialValues","label","isCheked","value","includes","_jsx","Formik","children","map","el","_jsxs","onChange","e","togglePriority","target","id","name","defaultChecked","type","checked","htmlFor","className","HeaderDashboard","project","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","useSelector","state","filters","customStyles","content","width","heihght","top","left","right","bottom","marginRight","transform","backgroundColor","concat","headerBgn","_Fragment","title","onClick","xlinkHref","sprite","Modal","isOpen","onRequestClose","style","appElement","document","getElementById","showAll","PriorityCheckboxForm","ScreensPageWrapper","violetColors","violetFill","selectColumns","columns","ButtonText","accentColor","ModalCloseButton","StyledSvgClose","props","colors","darkTextColor","AddColumnModal","onClose","submitButton","overlayClassName","closeTimeoutMS","ariaHideApp","stylesModal","position","height","maxHeight","maxWidth","EditColumnModal","ModalShowButton","white","radius","m","AddColumnTitle","AddColumnInput","shadowColor","AddColumnBtn","_ref$type","handlerClick","hoverViolet","IconWhiteWrap","IconVioletWrap","StyledSvgWhitePlus","StyledSvgDarkPlus","AddColumnButton","columnId","modalAddColumnIsOpen","setModalAddColumnIsOpen","_useState3","_useState4","modalEditColumnIsOpen","setModalEditColumnIsOpen","_useState5","_useState6","editColumnValue","setEditColumnValue","boardId","useParams","onSubmit","evt","preventDefault","inputValue","trim","newColumn","dashboardId","addColumn","placeholder","autoFocus","updatedTitle","elements","editColumn","_ref2","ColumnListWrapper","lightViolet","l","ColumnListStyled","spacing","ColumnWrapper","ColumnHeader","ColumnTitle","EditBlock","EditButton","EditSVG","greyIconColor","getColor","AddCardWrapper","AddCardContainer","AddCardHeader","AddCardTextCont","AddCardTitle","Field","bgColor","AddCardDescription","AddCardColorCont","AddCardLabelText","AddCardLabelColor","AddCardContMark","AddCardBtn","AddCardDate","DatePicker","AddCardContCal","AddCardOptionCont","_templateObject15","AddCardTextCal","_templateObject16","AddCardSvgContainer","_templateObject17","AddCardButtonSvg","_templateObject18","AddCardSvgButtonText","_templateObject19","AddAnotherCard","_templateObject20","AddCardSvgClose","_templateObject21","CardListWrapper","CardListStyled","selectTasks","tasks","createSelector","filter","toLowerCase","TaskContainer","PrioritySeeContainer","MainContainer","Title","TextContainer","DescriptionContainer","MenuCard","CardPriorityDeadline","ToDoContainer","SubTitle","PriorityContainer","CirclePriority","TextPriority","DeadlineContainer","TextDate","ButtonsContainer","Bell","SvgBell","Buttons","Btn","_templateObject22","Svg","_templateObject23","TaskCard","_ref$task","task","_id","description","isModalOpen","setIsModalOpen","toEditTask","_asyncToGenerator","_regeneratorRuntime","mark","_callee","taskId","updatedData","wrap","_context","prev","next","editTask","successToaster","t0","errorToaster","message","stop","_x","_x2","apply","arguments","toDeleteTask","_ref3","_callee2","_context2","deleteTask","_x3","toast","duration","background","color","error","Toaster","CardList","useEffect","fetchTitle","filteredTasks","column","AddCard","onCloseModal","Date","startDate","setStartDate","deadline","values","resetForm","newCard","addTask","CLoseButton","as","selected","date","dateFormat","today","getDate","getMonth","getFullYear","isToday","showWeekNumbers","ColumnListItem","closeModal","ColumnList","boards","selectAllBoards","getAllColumns","t","useTranslation","filteredColumns","board","length","ScreensPage","DashBoard","ModalWrap","IconClose","TitleModal","ProfileFotoBox","AddButton","s","IconUser","IconPlus","StyledForm","StyledLabel","StyledField","ErrMessage","ErrorMessage","HideBtn","IconEye"],"sourceRoot":""}