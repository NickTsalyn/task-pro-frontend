{"version":3,"file":"static/js/486.b22db880.chunk.js","mappings":"kVAMMA,GAAqB,WAAH,OAASC,EAAAA,GAAAA,KAACC,GAAAA,IAAU,GAAI,EAE1CC,GAAe,CACnBC,kBAAmB,SAAAC,GACjB,OACEJ,EAAAA,GAAAA,KAACK,EAAAA,EAAAA,mBAA4BC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKF,GAAK,IAAAG,UACrCP,EAAAA,GAAAA,KAACD,GAAkB,CAACS,MAAM,KAAKC,OAAO,SAG5C,GAGIC,GAAU,CACd,CACEC,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,eAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,UAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,aAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,cAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,eAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,aAIpC,CACEH,MAAO,MACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,aAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,cAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,aAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,cAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,eAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,oBAIpC,CACEH,MAAO,KACPC,OACEC,EAAAA,GAAAA,MAAA,QAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAA,QAAMc,MAAM,aAAkB,eAMhCC,GAAe,CACnBC,QAAS,SAACC,EAAUC,GAAK,OAAAZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBW,GAAQ,IACXE,MAAOD,EAAME,UAAY,mBAAqB,wBAC9CC,OAAQ,QACRC,UAAW,OACXC,QAAS,OACTC,OAAQ,SACRC,QAAS,IACTC,UAAW,IACXC,WAAY,IACZC,gBAAiB,eAAa,EAGhCC,YAAa,SAAAZ,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBW,GAAQ,IACXT,MAAO,OACPC,OAAQ,OACRgB,QAAS,IACTN,MAAO,SAAO,EAGhBW,mBAAoB,SAAAb,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBW,GAAQ,IACXM,QAAS,QAAM,EAGjBQ,mBAAoB,SAAAd,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBW,GAAQ,IACXM,QAAS,QAAM,EAGjBS,MAAO,SAAAf,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVW,GAAQ,IACXM,QAAS,QAAM,EAGjBU,kBAAmB,SAAAhB,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBW,GAAQ,IACXQ,QAAS,IACTS,OAAO,GAADC,QAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAC7C,mBAAoB,CAClBpB,MAAO,WAET,YAAa,CACXqB,QAAS,SACV,EAGHC,OAAQ,SAACxB,EAAUC,GAAK,OAAAZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBW,GAAQ,IACXW,gBAAiB,OACjBT,MAAOD,EAAMwB,WAAa,UAAY,kBAEtC,UAAW,CACTd,gBAAiB,UACjBT,MAAO,YACR,EAEHwB,YAAa,SAAA1B,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBW,GAAQ,IACXM,QAAS,QAAM,EAEjBqB,KAAM,SAAA3B,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTW,GAAQ,IACX4B,UAAW,QACXrC,MAAO,QAEPoB,gBAAiB,QACjBkB,aAAc,MAEdC,UAAW,OACX,uBAAwB,CACtBvC,MAAO,OAET,6BAA8B,CAC5BoB,gBAAiB,wBACjBkB,aAAc,OAEhB,6BAA8B,CAC5BlB,gBAAiB,gBAClB,EAEHoB,SAAU,SAAA/B,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbW,GAAQ,IACX8B,UAAW,QAAM,GA6CrB,GAzC8B,WAC5B,IAAQE,GAASC,EAAAA,EAAAA,IAAe,UAAxBD,KACRE,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,GAAYC,EAAAA,EAAAA,QAAO,MAKnBC,EAAqB,SAAAC,GACrBH,EAAUI,UAAYJ,EAAUI,QAAQC,SAASF,EAAMG,SACzDP,GAAc,EAElB,EAEMQ,EAAe,WACnBR,GAAeD,EACjB,EASA,OAPAU,EAAAA,EAAAA,YAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASR,GAE5B,WACLO,SAASE,oBAAoB,QAAST,EACxC,CACF,GAAG,KAED9C,EAAAA,GAAAA,MAAA,OAAKwD,IAAKZ,EAAUlD,SAAA,EAClBP,EAAAA,GAAAA,KAACsE,GAAAA,GAAM,CACLjE,WAAYH,GACZQ,QAASA,GACT6D,OAAQxD,GACRyD,SA3BuB,SAAAC,GAC3BxB,EAAKyB,eAAeD,EAAe9D,OACnC6C,GAAc,EAChB,EAyBMb,YAAY,GACZY,WAAYA,EACZoB,WAAYX,EACZY,YAAaZ,IACZ,MAGT,ECxPaa,GAAiB,WAC5B,IAAQ5B,GAASC,EAAAA,EAAAA,IAAe,UAAxBD,KAEF6B,EAAe,SAAAC,GACnB9B,EAAKyB,eAAeK,EACtB,EAOA,OACI/E,EAAAA,GAAAA,KAACgF,GAAc,CAACC,qBANS,SAAAC,GAC3B,IAAMC,EAAmBD,EAAEnB,OAAOpD,MAClCmE,EAAaK,EACf,EAGgEL,aAAcA,GAEhF,E,gCClBaM,GAAoBC,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,yGAGvB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAI9BC,GAAmBJ,GAAAA,GAAAA,OAAaK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,kXAUhC,SAAAnF,GAAK,OAAKA,EAAMuF,OAAS,iBAAmB,EAAE,IAY9CC,GAAkBP,GAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,2DAC7B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IC9BjCuD,GAAoBT,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,sJAElC,SAAAnD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAQnBO,GAAiBV,GAAAA,GAAAA,KAAWK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,8GAEtB,SAAAnD,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAGlB,SAAA7D,GAAC,OAAIA,EAAEC,MAAMC,aAAa4D,WAAW,IAE9CC,GAAiBd,GAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,4HAM3B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAGpCC,GAAgBhB,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,wBAC7B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAaiE,IAAI,ICrB3BC,GAAO,WAClB,OACE3F,EAAAA,GAAAA,MAACiF,GAAiB,CAAAvF,SAAA,EAChBP,EAAAA,GAAAA,KAAC+F,GAAc,CAAAxF,UACbP,EAAAA,GAAAA,KAACqG,GAAa,CAAA9F,UACZP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,sBAI7B1G,EAAAA,GAAAA,KAACmG,GAAc,CAAA5F,SAAC,eAGtB,E,4CCjBaoG,I,QAAyBtB,GAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,8bAS5B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,IAAI,K,sBCV/BoB,GAAkBvB,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,0RAKnB,SAAAsB,GAAW,OAAAA,EAARC,SACV,2BAA6B,aAAa,IAI5C,SAAA1E,GAAC,OAAIA,EAAEC,MAAM0E,OAAOC,KAAK,IACxB,SAAA5E,GAAC,OAAIA,EAAEC,MAAM0E,OAAOC,KAAK,IAQ1BC,GAAkB5B,GAAAA,GAAAA,OAAaK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,yZASjC,SAAA2B,GAAA,IAAGJ,EAAQI,EAARJ,SAAUzE,EAAK6E,EAAL7E,MAAK,OACzByE,EAAWzE,EAAMC,aAAa8D,aAAe/D,EAAMC,aAAa6E,SAAS,IAIhE,SAAA/E,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAOrC,SAAAgB,GAAA,IAAGN,EAAQM,EAARN,SAASzE,EAAK+E,EAAL/E,MAAK,OACzByE,EAAYzE,EAAMC,aAAa8D,aAAe/D,EAAMC,aAAa6E,SAAS,IAQnEE,GAAkBhC,GAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,kIAE5B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAKrC,SAAAhE,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,IAIjCC,GAAiBlC,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,mIAE5B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAMpC,SAAAhE,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,IAIjCE,GAAqBnC,GAAAA,GAAAA,OAAaoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,8GAQlCmC,GAAmBrC,GAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,kFAI7B,SAAAqC,GAAW,OAAAA,EAARd,SAA2B,OAAS,MAAM,ICrE7Ce,GAAgB,SAAHhB,GAAsC,IAAhCiB,EAAKjB,EAALiB,MAAOhB,EAAQD,EAARC,SAAUiB,EAAOlB,EAAPkB,QACzCC,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MACjBhF,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CiF,EAAW/E,EAAA,GAAEgF,EAAYhF,EAAA,GAqBhC,OACExC,EAAAA,GAAAA,MAAC+F,GAAe,CAACE,SAAUA,EAAUiB,QAASA,EAAQxH,SAAA,EAGpDM,EAAAA,GAAAA,MAACoG,GAAe,CACdqB,KAAK,SACLxB,SAAUA,EACViB,QAAS,WACPA,IACAC,GAASO,EAAAA,GAAAA,IAAaT,EAAMU,KAC9B,EAAEjI,SAAA,EAEFP,EAAAA,GAAAA,KAAA,OAAAO,UACEP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,KAAAvE,OAAI2F,EAAMW,cAGrCzI,EAAAA,GAAAA,KAAC0I,GAAAA,GAAI,CAACC,GAAE,SAAAxG,OAAW2F,EAAMU,KAAMjI,SAAEuH,EAAMc,YAGzC/H,EAAAA,GAAAA,MAAC6G,GAAgB,CAACZ,SAAUA,EAAUiB,QAASA,EAAQxH,SAAA,EACrDP,EAAAA,GAAAA,KAACwH,GAAkB,CAACO,QAnC1B,WACEM,GAAa,EACf,EAiC8CC,KAAK,SAAQ/H,UACnDP,EAAAA,GAAAA,KAACqH,GAAe,CAAA9G,UACdP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,0BAI7B1G,EAAAA,GAAAA,KAACwH,GAAkB,CAACO,QA/B1B,WACEC,GAASa,EAAAA,GAAAA,IAAYf,EAAMU,MAC3BN,EAAS,QACX,EA4BiDI,KAAK,SAAQ/H,UACtDP,EAAAA,GAAAA,KAACuH,GAAc,CAAAhH,UACbP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,4BAK/B1G,EAAAA,GAAAA,KAAC8I,GAAAA,EAAc,CACbV,YAAaA,EACbW,KAAMjB,EACNkB,aAvDN,WACEX,GAAa,EACf,EAsDMY,OAAQ,OACRC,WAjDN,SAAoBH,GAClB,IAAQP,EAAQV,EAARU,IACRR,GAASmB,EAAAA,GAAAA,IAAU,CAAEX,IAAAA,EAAKO,KAAAA,KAC1BV,GAAa,EACf,MAiDF,EC5Eae,GAAY,SAAHvC,GAAyB,IAAnBwC,EAAWxC,EAAXwC,YACpBrB,GAAWC,EAAAA,GAAAA,MACXqB,GAASC,EAAAA,GAAAA,IAAYC,GAAAA,KAE3BvF,EAAAA,EAAAA,YAAU,WACR+D,GAASyB,EAAAA,GAAAA,MACX,GAAG,CAACzB,IAEJ,IAAA7E,GAAoCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CuG,EAAUrG,EAAA,GAAEsG,EAAatG,EAAA,GAMhC,OACErD,EAAAA,GAAAA,KAAA4J,GAAAA,SAAA,CAAArJ,SACG+I,EAAOO,OAAS,IACf7J,EAAAA,GAAAA,KAAC2G,GAAsB,CAAApG,SACpB+I,EAAOQ,KAAI,SAAAhC,GAAK,OACf9H,EAAAA,GAAAA,KAAA,MAAAO,UACEP,EAAAA,GAAAA,KAAC6H,GAAa,CACZC,MAAOA,EACPhB,SAAUgB,IAAU4B,EACpB3B,QAAS,kBAbE,SAAAD,GACvB6B,EAAc7B,GACduB,GACF,CAU6BU,CAAiBjC,EAAM,KAJjCA,EAAMU,IAMV,OAMjB,ECpCawB,GAAY3E,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,4DACtB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa2H,YAAY,IAKtCC,GAAe7E,GAAAA,GAAAA,KAAWK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,kOAIlB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa6H,WAAW,IAOlC,SAAA/H,GAAC,OAAIA,EAAEC,MAAMC,aAAa8H,gBAAgB,IAIrDC,GAAkBhF,GAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,iRAQ9B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,ICtBvCkE,GAAiB,SAAHzD,GAAqB,IAAfkB,EAAOlB,EAAPkB,QACvBwC,GAAMrH,EAAAA,EAAAA,IAAe,UAArBqH,EACR,OACE1J,EAAAA,GAAAA,MAACwJ,GAAe,CAACtC,QAASA,EAAQxH,SAAA,CAC/BgK,EAAE,+BACHvK,EAAAA,GAAAA,KAACkK,GAAY,CAAA3J,UACXP,EAAAA,GAAAA,KAACgK,GAAS,CAAAzJ,UACRP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,sBAKnC,ECfa8D,GAAW,WACpB,IAAMxC,GAAWC,EAAAA,GAAAA,MACjB9E,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CiF,EAAW/E,EAAA,GAAEgF,EAAYhF,EAAA,GAgBhC,OACIxC,EAAAA,GAAAA,MAAA+I,GAAAA,SAAA,CAAArJ,SAAA,EACIP,EAAAA,GAAAA,KAACsK,GAAc,CAACvC,QAAS,SAACnE,GAAK,OAZvC,SAAmBA,GACfA,EAAM6G,kBACNpC,GAAa,EACjB,CAS4CqC,CAAU9G,EAAM,KACpD5D,EAAAA,GAAAA,KAAC8I,GAAAA,EAAc,CAACV,YAAaA,EAAaW,KAAM,CAAEH,MAAO,GAAIH,QAAS,eAAgBkC,cAAe,KAAO3B,aAjBpH,WACIX,GAAa,EACjB,EAe8IY,OAAQ,MAAOC,WAR7J,SAAoBH,GAChBf,GAAS4C,EAAAA,GAAAA,IAAS7B,IAClBV,GAAa,EACjB,MAQJ,EC5BawC,GAAiBxF,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,iLAU3BuF,GAAazF,GAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,iGAEvB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAayI,YAAY,IAC7B,SAAA3I,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAI9BwF,GAAsB3F,GAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,4FAChC,SAAAnD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,IAAI,IACZ,SAAApD,GAAC,OAAIA,EAAEC,MAAMC,aAAa2I,IAAI,IAC3B,SAAA7I,GAAC,OAAIA,EAAEC,MAAMC,aAAa2I,IAAI,IAE9CC,GAAkB7F,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,+RAQjC,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAGxC,SAAAhE,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,IAAI,IAarB2F,GAAkB9F,GAAAA,GAAAA,IAAUoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,oNAE7B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8I,UAAU,IAMlC,SAAAhJ,GAAC,OAAIA,EAAEC,MAAMC,aAAa+I,eAAe,IAM1CC,GAAejG,GAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,0FAOzBgG,GAASlG,GAAAA,GAAAA,IAAUmG,IAAAA,GAAAjG,EAAAA,GAAAA,GAAA,qE,6EClEnBkG,GAAepG,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,mbAUtB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAaoJ,QAAQ,IAC/B,SAAAtJ,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAc3B0F,GAAatG,GAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,0LAOhB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAC9B,SAAApD,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAGjCqJ,GAAcvG,GAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,sLAY3BsG,IAAQxG,EAAAA,GAAAA,IAAOyG,GAAAA,GAAPzG,CAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,iWAIZ,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,IACnC,SAAAlF,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAMxB,SAAA7D,GAAC,OAAIA,EAAEC,MAAMC,aAAayJ,QAAQ,IACtC,SAAA3J,GAAC,OAAIA,EAAEC,MAAMC,aAAa0J,QAAQ,IAWjCC,GAAe5G,GAAAA,GAAAA,SAAeoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,8XAIpB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,IACpC,SAAAlF,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAOxB,SAAA7D,GAAC,OAAIA,EAAEC,MAAMC,aAAayJ,QAAQ,IACtC,SAAA3J,GAAC,OAAIA,EAAEC,MAAMC,aAAa0J,QAAQ,IAUjCE,GAAa7G,GAAAA,GAAAA,OAAasC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,2UAIpB,SAAAnD,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAElB,SAAA7D,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,IAC7C,SAAAlF,GAAC,OAAIA,EAAEC,MAAM0E,OAAOC,KAAK,IAQZ,SAAA5G,GAAK,OAAIA,EAAMiC,MAAMC,aAAa6J,WAAW,IAGtDC,GAAiB/G,GAAAA,GAAAA,IAAUmG,IAAAA,GAAAjG,EAAAA,GAAAA,GAAA,4WAC7B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAaoJ,QAAQ,IACjC,SAAAtL,GAAK,OAAIA,EAAMiC,MAAMC,aAAaC,QAAQ,ICnGhD8J,GAAmBC,GAAAA,GAAW,CAClCC,MAAOD,GAAAA,KAAaC,MAAM,sCAAsCC,SAAS,IACzEC,QAASH,GAAAA,KAAaE,SAAS,MAGpBE,GAAgB,SAAH7F,GAA0C,IAApClB,EAAMkB,EAANlB,OAAQgH,EAAO9F,EAAP8F,QAAStD,EAAWxC,EAAXwC,YACzCrB,GAAWC,EAAAA,GAAAA,MACTsC,GAAMrH,EAAAA,EAAAA,IAAe,UAArBqH,EAEFqC,EAAU,eAAAxF,GAAAyF,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,EAAA9F,GAAA,IAAAqF,EAAAE,EAAA,OAAAK,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAASb,EAAKrF,EAALqF,MAAOE,EAAOvF,EAAPuF,QACjCzE,GAASqF,EAAAA,GAAAA,IAAgB,CAAEd,MAAAA,EAAOE,QAAAA,KAC/Ba,MAAK,WACJC,QAAQC,IAAI,6BACZb,GACF,IACCc,OAAM,SAAAC,GACLH,QAAQG,MAAM,yBAA0BA,EAC1C,IAAG,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,KACN,gBATeY,GAAA,OAAAxG,EAAAyG,MAAA,KAAAC,UAAA,KAWhB,OACE9N,EAAAA,GAAAA,KAAC+N,KAAK,CACJpI,OAAQA,EACRqI,iBAAiB,gBACjBC,UAAU,gBACVC,eAAgBvB,EAChBwB,aAAa,EAAM5N,UAEnBM,EAAAA,GAAAA,MAAC4K,GAAY,CAAAlL,SAAA,EACXP,EAAAA,GAAAA,KAAC4L,GAAW,CAAC7D,QAAS4E,EAAQpM,UAC5BP,EAAAA,GAAAA,KAACoM,GAAc,CAAA7L,UACbP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,wBAG7B1G,EAAAA,GAAAA,KAAC2L,GAAU,CAAApL,SAAEgK,EAAE,iCACfvK,EAAAA,GAAAA,KAACoO,GAAAA,GAAM,CACLC,cAAe,CAAE9B,MAAO,GAAIE,QAAS,IACrCJ,iBAAkBA,GAClBiC,SAAU1B,EAAWrM,SAEpB,SAAAqH,GAAeA,EAAZ2G,aAAY,OACd1N,EAAAA,GAAAA,MAAC2N,GAAAA,GAAI,CAAAjO,SAAA,EACHP,EAAAA,GAAAA,KAAC6L,GAAK,CACJvD,KAAK,QACLmG,KAAK,QACL9L,YAAa4H,EAAE,sCACfmE,GAAI5C,GAAAA,MAEN9L,EAAAA,GAAAA,KAAC2O,GAAAA,GAAY,CACXF,KAAK,QACLG,UAAU,MACVX,UAAU,mBAEZjO,EAAAA,GAAAA,KAAC8L,GAAAA,GAAK,CACJxD,KAAK,OACLmG,KAAK,UACL9L,YAAa4H,EAAE,qCACfmE,GAAIzC,MAGNjM,EAAAA,GAAAA,KAAC2O,GAAAA,GAAY,CACXF,KAAK,UACLG,UAAU,MACVX,UAAU,mBAEZjO,EAAAA,GAAAA,KAACkM,GAAU,CAAC5D,KAAK,SAASP,QAASsB,EAAY9I,SAAEgK,EAAE,4CAC9C,QAMnB,ECxFasE,GAAgBxJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,4OAMjB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa4D,WAAW,IACxC,SAAA9D,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAQ3B6I,GAAYzJ,GAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,+FAOtBwJ,GAAW1J,GAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,8NAKrB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAQpC4I,GAAa3J,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,yKAW1B0J,GAAa5J,GAAAA,GAAAA,IAAUoC,IAAAA,GAAAlC,EAAAA,GAAAA,GAAA,uMASzB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAGpC8I,GAAc7J,GAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,GAAAA,GAAA,iIACzB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAa8D,YAAY,IAMpC,SAAAhE,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,IAIjC6H,GAAU9J,GAAAA,GAAAA,KAAWmG,IAAAA,GAAAjG,EAAAA,GAAAA,GAAA,gLACvB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAagF,MAAM,I,sDCpB3C,GArCgB,SAAHT,GAAyB,IAAnBwC,EAAWxC,EAAXwC,YACjBlG,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CiF,EAAW/E,EAAA,GAAE+L,EAAc/L,EAAA,GAC1BkH,GAAMrH,EAAAA,EAAAA,IAAe,UAArBqH,EACF8E,EAAY,WAChBD,GAAe,EACjB,EAMA,OACEvO,EAAAA,GAAAA,MAACgO,GAAa,CAAAtO,SAAA,EACZP,EAAAA,GAAAA,KAAC8O,GAAS,CAACQ,IAAKC,GAAaC,IAAI,YACjC3O,EAAAA,GAAAA,MAACkO,GAAQ,CAAAxO,SAAA,CACNgK,EAAE,0BAA0B,KAACvK,EAAAA,GAAAA,KAACmP,GAAO,CAAA5O,SAAC,YACtCgK,EAAE,+BAELvK,EAAAA,GAAAA,KAACgP,GAAU,CAACjH,QAASsH,EAAU9O,UAC7BP,EAAAA,GAAAA,KAACkP,GAAW,CAAA3O,UACVP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,4BAG7B1G,EAAAA,GAAAA,KAACiP,GAAU,CAAClH,QAASsH,EAAU9O,SAC5BgK,EAAE,gCAGJnC,IACCpI,EAAAA,GAAAA,KAAC0M,GAAa,CACZ/G,OAAQyC,EACRuE,QAvBW,WACjByC,GAAe,EACjB,EAsBQ/F,YAAaA,MAKvB,ECjCaoG,GAAa,SAAH5I,GAAyB,IAAnBwC,EAAWxC,EAAXwC,YACrBrB,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MAOXuH,EAAqB,WACzBrG,GACF,EAEQkB,GAAMrH,EAAAA,EAAAA,IAAe,UAArBqH,EACR,OACE1J,EAAAA,GAAAA,MAACgK,GAAc,CAAAtK,SAAA,EACbP,EAAAA,GAAAA,KAAC8K,GAAU,CAAAvK,SAAEgK,EAAE,kCACf1J,EAAAA,GAAAA,MAAC0K,GAAM,CAAAhL,SAAA,EACLP,EAAAA,GAAAA,KAACgL,GAAmB,CAAAzK,UAClBP,EAAAA,GAAAA,KAACwK,GAAQ,CAACnB,YAAaqG,OAEzB1P,EAAAA,GAAAA,KAACoJ,GAAS,CAACC,YAAaqG,QAE1B7O,EAAAA,GAAAA,MAACyK,GAAY,CAAA/K,SAAA,EACXP,EAAAA,GAAAA,KAAC2P,GAAO,CAACtG,YAAaqG,KACtB7O,EAAAA,GAAAA,MAACqK,GAAe,CAAC5C,KAAK,SAASP,QArBjB,WAClBC,GAAS4H,EAAAA,GAAAA,OACT1H,EAAS,IACX,EAkB0D3H,SAAA,EAClDP,EAAAA,GAAAA,KAACmL,GAAe,CAAA5K,UACdP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,mBAE1B6D,EAAE,oCAKb,ECjDasF,GAAiBxK,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,6IAU3BuK,GAAgBzK,GAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,gbAGnB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAayN,UAAU,IAatD,WACA,IAAQ9M,GAASC,EAAAA,EAAAA,IAAe,UAAxBD,KAGR,MAAY,QAFAA,EAAK+M,IAAI/M,EAAKgN,UAGlB,mDAKA,kDAKV,ICvCWC,IAAUC,EAAAA,EAAAA,aAAW,SAAC/P,EAAOiE,GACxC,OACExD,EAAAA,GAAAA,MAACiP,GAAa,CAACzL,IAAKA,EAAI9D,SAAA,EACtBP,EAAAA,GAAAA,KAACwG,GAAI,KACLxG,EAAAA,GAAAA,KAACyP,GAAU,CAACpG,YAAajJ,EAAMiJ,gBAGrC,ICFa+G,GAAa,WACxB,IAAAjN,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCwC,EAAMtC,EAAA,GAAEgN,EAAOhN,EAAA,GAChBiN,GAAgB5M,EAAAA,EAAAA,QAAO,MACvB6M,GAAa7M,EAAAA,EAAAA,QAAO,MAMpB8M,EAAqB,WACzBH,GAAQ,EACV,EAEA,OACExP,EAAAA,GAAAA,MAACuE,GAAiB,CAAA7E,SAAA,EAChBP,EAAAA,GAAAA,KAACyF,GAAgB,CACf6C,KAAK,SACLP,QAZoB,WACxBsI,GAAS1K,EACX,EAWMtB,IAAKiM,EAAc/P,UAEnBP,EAAAA,GAAAA,KAAC4F,GAAe,CAAArF,UACdP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,uBAG5Bf,IACC9E,EAAAA,GAAAA,MAAA,OAAAN,SAAA,EACEP,EAAAA,GAAAA,KAAC6P,GAAc,CAAC9H,QAASyI,KACzBxQ,EAAAA,GAAAA,KAACkQ,GAAO,CAAC7L,IAAKkM,EAAYlH,YAAamH,SAKjD,ECxCaC,GAAepL,GAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,8QACrB,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAaoO,SAAS,IAI1C,SAAAtO,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,IAAI,IAAI,SAAApD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAElD,SAAApD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,IAAI,IAAI,SAAApD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAStDmL,GAA0BtL,GAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,gG,WCX3C7E,GAAU,CACd,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,WAGtBG,GAAe,CACnBC,QAAS,SAACC,EAAUC,GAAK,OAAAZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBW,GAAQ,IACXW,gBAAiB,cACjBT,MAAOD,EAAME,UAAY,mBAAqB,wBAC9CC,OAAQ,QACRC,UAAW,OACXC,QAAS,OACTC,OAAQ,SACRC,QAAS,IACTC,UAAW,IACXC,WAAY,KAAG,EAGjBE,YAAa,SAAAZ,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBW,GAAQ,IACXT,MAAO,OACPC,OAAQ,OACRgB,QAAS,IACTD,OAAQ,UAAQ,EAGlBO,mBAAoB,SAAAd,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBW,GAAQ,IACXM,QAAS,QAAM,EAGjBS,MAAO,SAAAf,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVW,GAAQ,IACXM,QAAS,QAAM,EAEjBU,kBAAmB,SAAAhB,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBW,GAAQ,IACXQ,QAAS,IACTD,OAAQ,SAER,YAAa,CACXgB,QAAS,SACV,EAGHC,OAAQ,SAACxB,EAAUC,GAAK,OAAAZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBW,GAAQ,IACXW,gBAAiB,OACjBT,MAAOD,EAAMwB,WAAa,UAAY,kBACtC,mBAAoB,CAClBvB,MAAO,YACR,EAEHwB,YAAa,SAAA1B,GAAQ,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBW,GAAQ,IACX2P,WAAY,MACZC,SAAU,OACVC,cAAe,UACf3P,MAAM,GAADgB,QAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,KAAE,GAIrCwO,GAAgB,WAC3B,IAAQxG,GAAMrH,EAAAA,EAAAA,IAAe,UAArBqH,EACFvC,GAAWC,EAAAA,GAAAA,MACjB9E,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,GAAYC,EAAAA,EAAAA,QAAO,MAEnBsN,GAAYzH,EAAAA,GAAAA,IAAY0H,GAAAA,IAMxBtN,EAAqB,SAAAC,GACrBH,EAAUI,UAAYJ,EAAUI,QAAQC,SAASF,EAAMG,SACzDP,GAAc,EAElB,EAEMQ,EAAe,WACnBR,GAAeD,EACjB,EAYA,OAPAU,EAAAA,EAAAA,YAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASR,GAE5B,WACLO,SAASE,oBAAoB,QAAST,EACxC,CACF,GAAG,KAED9C,EAAAA,GAAAA,MAAA,OAAKwD,IAAKZ,EAAUlD,SAAA,EAClBP,EAAAA,GAAAA,KAACsE,GAAAA,GAAM,CACL5D,QAASA,GACT6D,OAAQxD,GACRyD,SA9BoB,SAAA9D,GACxB,IAAM2B,EAAQ3B,EAAQC,MACtBqH,GAASkJ,EAAAA,GAAAA,IAAY,CAAE7O,MAAAA,KACvBmB,GAAc,EAChB,EA2BMD,WAAYA,EACZoB,WAAYX,EACZY,YAAaZ,EACbrB,YAAa4H,EAAE,2BACf5J,MArBc,WAClBD,GAAQyQ,MAAK,SAAA1O,GAAM,OAAIA,EAAO9B,QAAUqQ,CAAS,GACnD,IAoBO,MAGT,ECnHaI,GAAiB/L,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,wDAG/B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMmD,QAAQ,EAAE,IAGnB6L,GAAgBhM,GAAAA,GAAAA,OAAaK,IAAAA,GAAAH,EAAAA,GAAAA,GAAA,oIAKvB,SAAAnD,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,IAI3BqL,GAAiBjM,GAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,kHAC3B,SAAAnD,GAAC,OAAIA,EAAEC,MAAMC,aAAaC,QAAQ,IAOhCgP,GAAkBlM,GAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,wFAItB,SAAAnD,GAAC,OAAIA,EAAEC,MAAM2D,OAAOC,CAAC,I,WCzB3BuL,GAAgB,SAAH3K,GAAoB,IAAd4K,EAAM5K,EAAN4K,OAE9B,OACEzR,EAAAA,GAAAA,KAAA4J,GAAAA,SAAA,CAAArJ,SACGkR,GACCzR,EAAAA,GAAAA,KAAA,OAAKsP,IAAKmC,EAAOC,KAAMlC,IAAI,iBAE3BxP,EAAAA,GAAAA,KAAC2R,GAAAA,GAAQ,CAAApR,UACPP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,mBAKnC,ECdakL,GAAsB,SAAH/K,GAAkB,IAAZgL,EAAIhL,EAAJgL,KACpC1O,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC2O,EAAOzO,EAAA,GAAE0O,EAAU1O,EAAA,GACpB2O,EAAS,IAAIC,WAKnB,OAJAD,EAAOE,cAAcL,GACrBG,EAAOG,OAAS,WACdJ,EAAWC,EAAOI,OACpB,GAEEpS,EAAAA,GAAAA,KAAA4J,GAAAA,SAAA,CAAArJ,SAAGuR,IAAW9R,EAAAA,GAAAA,KAACqS,GAAAA,GAAW,CAAC/C,IAAKwC,EAAStC,IAAI,iBAEjD,ECkBM8C,GAAiBhG,GAAAA,KAAaiG,MAAM,CACxC9D,KAAMnC,GAAAA,KAAakG,IAAI,EAAG,YAAYC,IAAI,GAAI,WAC9ClG,MAAOD,GAAAA,KAAaC,MAAM,sCAE1BmG,SAAUpG,GAAAA,KACPkG,IAAI,EAAG,qDACPG,QAAQ,WAAY,8CAGZC,GAAmB,SAAH/L,GAAkC,IAA5BmC,EAAYnC,EAAZmC,aAAcyI,EAAM5K,EAAN4K,OACvClH,GAAMrH,EAAAA,EAAAA,IAAe,UAArBqH,EACFvC,GAAWC,EAAAA,GAAAA,MAKjB9E,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD0P,EAAYxP,EAAA,GAAEyP,EAAezP,EAAA,GAC9B0P,EAAiB,WACrBD,GAAiBD,EACnB,EAEMG,GAAUtP,EAAAA,EAAAA,QAAO,MAEvB,OACE7C,EAAAA,GAAAA,MAACoS,GAAAA,GAAS,CAAA1S,SAAA,EACRP,EAAAA,GAAAA,KAACkT,GAAAA,GAAU,CAAA3S,SAAEgK,EAAE,4CAEfvK,EAAAA,GAAAA,KAACmT,GAAAA,GAAW,CAACpL,QAASiB,EAAazI,UACjCP,EAAAA,GAAAA,KAACoT,GAAAA,GAAS,CAAA7S,UACRP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,wBAI7B1G,EAAAA,GAAAA,KAACoO,GAAAA,GAAM,CACLC,cAAe,CACbI,KAAM,GACNlC,MAAO,GACPmG,SAAU,GACVjB,OAAQ,MAEVpF,iBAAkBiG,GAClBhE,SAAU,SAAC+E,EAAQC,GA7BJ,IAAAC,IA8BAF,EA7BZrL,GAASwL,EAAAA,GAAAA,IAAcD,IA8BxBD,EAAQG,WACV,EAAElT,SAED,SAAA2G,GAAA,IAAGmM,EAAMnM,EAANmM,OAAQK,EAAaxM,EAAbwM,cAAa,OACvB7S,EAAAA,GAAAA,MAAC8S,GAAAA,GAAU,CAAApT,SAAA,EACTM,EAAAA,GAAAA,MAAC+S,GAAAA,GAAc,CAAArT,SAAA,EACbM,EAAAA,GAAAA,MAACgT,GAAAA,GAAK,CAAAtT,SAAA,EACJP,EAAAA,GAAAA,KAAA,SACE8T,QAAM,EACNzP,IAAK2O,EACL1K,KAAK,OACLmG,KAAK,SACLjK,SAAU,SAAAU,GACRwO,EAAc,SAAUxO,EAAEnB,OAAOgQ,MAAM,GACzC,IAEDV,EAAO5B,QACNzR,EAAAA,GAAAA,KAAC4R,GAAmB,CAACC,KAAMwB,EAAO5B,UAElCzR,EAAAA,GAAAA,KAACwR,GAAa,CAACC,OAAQA,QAI3BzR,EAAAA,GAAAA,KAACgU,GAAAA,GAAS,CAAC1L,KAAK,SAASP,QAAS,kBAAMiL,EAAQnP,QAAQoQ,OAAO,EAAC1T,UAC9DP,EAAAA,GAAAA,KAACkU,GAAAA,GAAQ,CAAA3T,UACPP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,wBAK/B7F,EAAAA,GAAAA,MAACsT,GAAAA,GAAW,CAACC,QAAQ,OAAM7T,SAAA,EACzBP,EAAAA,GAAAA,KAACqU,GAAAA,GAAW,CACV/L,KAAK,OACLmG,KAAK,OACL9L,YAAa4H,EAAE,2CAEjBvK,EAAAA,GAAAA,KAACsU,GAAAA,GAAU,CAAC1F,UAAU,OAAOH,KAAK,aAGpC5N,EAAAA,GAAAA,MAACsT,GAAAA,GAAW,CAACC,QAAQ,QAAO7T,SAAA,EAC1BP,EAAAA,GAAAA,KAACqU,GAAAA,GAAW,CACV/L,KAAK,QACLmG,KAAK,QACL9L,YAAa4H,EAAE,4CAEjBvK,EAAAA,GAAAA,KAACsU,GAAAA,GAAU,CAAC1F,UAAU,OAAOH,KAAK,cAGpC5N,EAAAA,GAAAA,MAACsT,GAAAA,GAAW,CAACC,QAAQ,WAAU7T,SAAA,EAC7BP,EAAAA,GAAAA,KAACqU,GAAAA,GAAW,CACV/L,KAAMuK,EAAe,OAAS,WAC9BpE,KAAK,WACL9L,YAAa4H,EAAE,+CAEjBvK,EAAAA,GAAAA,KAACsU,GAAAA,GAAU,CAAC1F,UAAU,OAAOH,KAAK,cAClCzO,EAAAA,GAAAA,KAACuU,GAAAA,GAAO,CAACjM,KAAK,SAASP,QAASgL,EAAexS,UAC7CP,EAAAA,GAAAA,KAACwU,GAAAA,GAAO,CAAAjU,UACNP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,uBAK/B1G,EAAAA,GAAAA,KAACyU,GAAAA,GAAM,CAACnM,KAAK,SAASP,QAASiB,EAAazI,SACzCgK,EAAE,4CAEM,MAKvB,EChIAwD,KAAAA,cAAoB,SAEb,I,MAAM2G,GAAW,WACtB,IAAMC,GAAWpL,EAAAA,GAAAA,IAAYqL,GAAAA,IACvBC,GAAatL,EAAAA,GAAAA,IAAYuL,GAAAA,IAC/B3R,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CiF,EAAW/E,EAAA,GAAE+L,EAAc/L,EAAA,GAE5B0R,EACJF,GACA,IAAIG,IAAIH,EAAY,qDAMhBI,EAAa,WACjB7F,GAAe,EACjB,EACA,OACEvO,EAAAA,GAAAA,MAACuQ,GAAc,CAAA7Q,SAAA,EACbP,EAAAA,GAAAA,KAACsR,GAAc,CAAA/Q,SAAEoU,EAASlG,QAC1BzO,EAAAA,GAAAA,KAACqR,GAAa,CAAC/I,KAAK,SAASP,QAVf,WAChBqH,GAAe,EACjB,EAQoD7O,SAC3CsU,GACD7U,EAAAA,GAAAA,KAACuR,GAAe,CACdjC,IAAKyF,EACLvF,IAAI,aACJhP,MAAO,GACPC,OAAQ,MAGVT,EAAAA,GAAAA,KAACkV,GAAAA,GAAY,CAAA3U,UACXP,EAAAA,GAAAA,KAAA,OAAKyG,UAAS,GAAAtE,OAAKuE,GAAAA,EAAM,qBAK/B1G,EAAAA,GAAAA,KAAC+N,KAAK,CACJpI,OAAQyC,EACR8F,eAAgB+G,EAChBjH,iBAAkB,gBAClBC,UAAW,gBACXkH,eAAgB,IAAI5U,UAEpBP,EAAAA,GAAAA,KAAC4S,GAAgB,CAAC5J,aAAciM,EAAYxD,OAAQsD,QAI5D,ECzDaK,GAAS,WACpB,OACEvU,EAAAA,GAAAA,MAAC4P,GAAY,CAAAlQ,SAAA,EACXP,EAAAA,GAAAA,KAACoQ,GAAU,KACXvP,EAAAA,GAAAA,MAAC8P,GAAuB,CAAApQ,SAAA,EACtBP,EAAAA,GAAAA,KAAC6E,GAAc,KACf7E,EAAAA,GAAAA,KAAC+Q,GAAa,KACd/Q,EAAAA,GAAAA,KAAC0U,GAAQ,SAIjB,E,WCfaW,GAAchQ,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,iGAOxB+P,GAAgBjQ,GAAAA,GAAAA,IAAUK,KAAAA,IAAAH,EAAAA,GAAAA,GAAA,uE,WCAxB,SAASgQ,KACtB,IAAApS,GAAwCC,EAAAA,EAAAA,UAASoS,OAAOC,YAAc,MAAKpS,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApEuS,EAAYrS,EAAA,GAAEsS,EAAetS,EAAA,GAC5BJ,GAASC,EAAAA,EAAAA,IAAe,UAAxBD,KAkBR,OAhBAgB,EAAAA,EAAAA,YAAU,WACR,IAAM+L,EAAM/M,EAAK+M,IAAI/M,EAAKgN,UAC1B/L,SAAS0R,gBAAgB5F,IAAMA,CACjC,GAAG,CAAC/M,EAAMA,EAAKgN,YACfhM,EAAAA,EAAAA,YAAU,WACR,IAAM4R,EAAe,WACnBF,EAAgBH,OAAOC,YAAc,KACvC,EAIA,OAFAD,OAAOrR,iBAAiB,SAAU0R,GAE3B,WACLL,OAAOpR,oBAAoB,SAAUyR,EACvC,CACF,GAAG,KAGDhV,EAAAA,GAAAA,MAACwU,GAAW,CAAA9U,SAAA,EACVP,EAAAA,GAAAA,KAAC8V,GAAAA,EAAM,CAAAvV,UACLP,EAAAA,GAAAA,KAAA,SAAAO,SAAO,aAERmV,IAAgB1V,EAAAA,GAAAA,KAACkQ,GAAO,KACzBrP,EAAAA,GAAAA,MAACyU,GAAa,CAAA/U,SAAA,EACZP,EAAAA,GAAAA,KAACoV,GAAM,KACPpV,EAAAA,GAAAA,KAAC+V,GAAAA,QAAW,SAIpB,C","sources":["components/Select/Select.jsx","components/SelectLanguage/SelectLanguage.jsx","components/Header/BurgerMenu/BurgerMenu.styled.js","components/Sidebar/Logo/Logo.styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/BoardList/BoardList.styled.js","components/Sidebar/BoardListItem/BoardListItem.styled.js","components/Sidebar/BoardListItem/BoardListItem.jsx","components/Sidebar/BoardList/BoardList.jsx","components/boardModals/addBoardButton/addBoardButton.styled.jsx","components/boardModals/addBoardButton/addBoardButton.jsx","components/boardModals/addBoard.jsx","components/Sidebar/SidebarNav/SidebarNav.styled.js","components/NeedHelpModal/NeedHelpModal.styled.jsx","components/NeedHelpModal/NeedHelpModal.jsx","components/HelpApp/HelpApp.styled.js","components/HelpApp/HelpApp.jsx","components/Sidebar/SidebarNav/SidebarNav.jsx","components/Sidebar/Sidebar.styled.js","components/Sidebar/Sidebar.jsx","components/Header/BurgerMenu/BurgerMenu.jsx","components/Header/Header.styled.js","components/Header/ThemeDropDown/ThemeDropDown.jsx","components/Header/UserInfo/UserInfo.styled.js","components/EditProfileModal/PreviewAvatar/PreviewAvatar.jsx","components/EditProfileModal/PreviewAvatar/PreviewUploadAvatar.jsx","components/EditProfileModal/EditProfileModal.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.jsx","Pages/HomePage.styled.js","Pages/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Select, { components } from 'react-select';\nimport { useTranslation } from 'react-i18next';\nimport { GrLanguage } from 'react-icons/gr';\nimport '/node_modules/flag-icons/css/flag-icons.min.css';\n\nconst CustomDropdownIcon = () => <GrLanguage />;\n\nconst IconLanguage = {\n  DropdownIndicator: props => {\n    return (\n      <components.DropdownIndicator {...props}>\n        <CustomDropdownIcon width=\"32\" height=\"32\" />\n      </components.DropdownIndicator>\n    );\n  },\n};\n\nconst options = [\n  {\n    value: 'ua',\n    label: (\n      <span>\n        <span class=\"fi fi-ua\"></span> Ukraine\n      </span>\n    ),\n  },\n  {\n    value: 'en',\n    label: (\n      <span>\n        <span class=\"fi fi-gb\"></span> UK\n      </span>\n    ),\n  },\n  {\n    value: 'cn',\n    label: (\n      <span>\n        <span class=\"fi fi-cn\"></span> China\n      </span>\n    ),\n  },\n  {\n    value: 'he',\n    label: (\n      <span>\n        <span class=\"fi fi-il\"></span> Israel\n      </span>\n    ),\n  },\n  {\n    value: 'de',\n    label: (\n      <span>\n        <span class=\"fi fi-de\"></span> Germany\n      </span>\n    ),\n  },\n  {\n    value: 'es',\n    label: (\n      <span>\n        <span class=\"fi fi-es\"></span> Spain\n      </span>\n    ),\n  },\n  {\n    value: 'ita',\n    label: (\n      <span>\n        <span class=\"fi fi-it\"></span> Italy\n      </span>\n    ),\n  },\n  {\n    value: 'fr',\n    label: (\n      <span>\n        <span class=\"fi fi-fr\"></span> France\n      </span>\n    ),\n  },\n  {\n    value: 'jp',\n    label: (\n      <span>\n        <span class=\"fi fi-jp\"></span> Japan\n      </span>\n    ),\n  },\n  {\n    value: 'pl',\n    label: (\n      <span>\n        <span class=\"fi fi-pl\"></span> Poland\n      </span>\n    ),\n  },\n  {\n    value: 'ro',\n    label: (\n      <span>\n        <span class=\"fi fi-ro\"></span> Romania\n      </span>\n    ),\n  },\n  {\n    value: 'ar',\n    label: (\n      <span>\n        <span class=\"fi fi-sa\"></span> Saudi Arabia\n      </span>\n    ),\n  },\n  {\n    value: 'gr',\n    label: (\n      <span>\n        <span class=\"fi fi-gr\"></span> Greece\n      </span>\n    ),\n  },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    margin: 'auto 0',\n    padding: '0',\n    minHeight: '0',\n    lineHeight: '1',\n    backgroundColor: 'transparent'\n  }),\n\n  downChevron: provided => ({\n    ...provided,\n    width: '32px',\n    height: '32px',\n    padding: '0',\n    color: 'white'\n  }),\n\n  IndicatorContainer: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  input: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: '0',\n    stroke: `${p => p.theme.currentTheme.mainText}`,\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: state.isSelected ? '#5255BC' : 'rgb(22, 22, 22)',\n\n    '&:hover': {\n      backgroundColor: '#FCFCFC',\n      color: '#5255BC',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n  menu: provided => ({\n    ...provided,\n    maxHeight: '120px',\n    width: '120px',\n\n    backgroundColor: 'white',\n    borderRadius: '8px',\n\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: 'rgba(22, 22, 22, 0.2)',\n      borderRadius: '8px',\n    },\n    '&::-webkit-scrollbar-track': {\n      backgroundColor: 'transparent',\n    },\n  }),\n  menuList: provided => ({\n    ...provided,\n    overflowY: 'none',\n  }),\n};\n\nexport const CustomDropdown = () => {\n  const { i18n } = useTranslation('global');\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const selectRef = useRef(null);\n  const handleChangeLanguage = selectedOption => {\n    i18n.changeLanguage(selectedOption.value);\n    setMenuIsOpen(false);\n  };\n  const handleClickOutside = event => {\n    if (selectRef.current && !selectRef.current.contains(event.target)) {\n      setMenuIsOpen(false);\n    }\n  };\n\n  const toggleSelect = () => {\n    setMenuIsOpen(!menuIsOpen);\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return (\n    <div ref={selectRef}>\n      <Select\n        components={IconLanguage}\n        options={options}\n        styles={customStyles}\n        onChange={handleChangeLanguage}\n        placeholder=\"\"\n        menuIsOpen={menuIsOpen}\n        onMenuOpen={toggleSelect}\n        onMenuClose={toggleSelect}\n      />{' '}\n    </div>\n  );\n};\n\nexport default CustomDropdown;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CustomDropdown from 'components/Select/Select';\n\n\nexport const SelectLanguage = () => {\n  const { i18n } = useTranslation('global');\n\n  const handleChange = lang => {\n    i18n.changeLanguage(lang);\n  };\n\n  const handleChangeLanguage = e => {\n    const selectedLanguage = e.target.value;\n    handleChange(selectedLanguage);\n  };\n\n  return (\n      <CustomDropdown handleChangeLanguage={handleChangeLanguage} handleChange={handleChange}/>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BurgerMenuWrapper = styled.div`\n  display: flex;\n  /* @media screen and (max-width: 375px) {\n    padding-left: ${p => p.theme.spacing(5)};\n  } */\n`;\n\nexport const StyledBurgerMenu = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: auto 0;\n  padding: 0;\n  position: relative;\n  display: ${props => (props.isOpen ? 'display: flex;' : '')};\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const StyledSVGBurger = styled.svg`\n  stroke: ${p => p.theme.currentTheme.mainText};\n  width: 100%;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLogoWrapper = styled.div`\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n  padding: 14px 14px 0 14px;\n\n  @media screen and (min-width: 768px) {\n   padding: 24px 24px 0 24px;\n }\n`;\n\nexport const StyledLogoIcon = styled.span`\n  display: flex;\n  border-radius: ${p => p.theme.radius.m};\n  width: 32px;\n  height: 32px;\n  background-color: ${p => p.theme.currentTheme.needHelpBgn};\n`;\nexport const StyledLogoText = styled.p`\n  display: flex;\n  margin: auto 0;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n`;\n\nexport const StyledSVGLogo = styled.svg`\n  fill: ${p => p.theme.currentTheme.logo};\n`;\n","import sprite from '../../../images/icons.svg';\nimport {\n  StyledLogoIcon,\n  StyledLogoText,\n  StyledLogoWrapper,\n  StyledSVGLogo,\n} from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <StyledLogoWrapper>\n      <StyledLogoIcon>\n        <StyledSVGLogo>\n          <use xlinkHref={`${sprite}#icon-logo2`}></use>\n        </StyledSVGLogo>\n      </StyledLogoIcon>\n\n      <StyledLogoText>Task Pro</StyledLogoText>\n    </StyledLogoWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport '../../../index.css';\n\nexport const StyledBoardListWrapper = styled.ul`\n  height: 126px;\n  overflow-y: scroll;\n  margin: 0 -14px;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n    height: 60px;\n    border-radius: 4px 0 0 4px;\n    margin-left: ${p => p.theme.spacing(3.5)};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #fff;\n    border-radius: 4px 0 0 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0 -24px;\n  }\n \n`;\n","import styled from 'styled-components';\n\nexport const StyledBoardList = styled.div`\n  display: flex;\n  padding: 22px 18px 22px 14px;\n  margin: 0 auto;\n  justify-content: space-between;\n  background-color: ${({ isActive }) =>\n    isActive ? 'rgba(255, 255, 255, 0.2)' : 'transparent'};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    stroke: ${p => p.theme.colors.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 21px 24px;\n  }\n`;\n\nexport const StyledBoardItem = styled.button`\n  border: none;\n  background: transparent;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: start;\n  padding: 0;\n  display: flex;\n  gap: 4px;\n  color: ${({ isActive, theme }) =>\n    isActive ? theme.currentTheme.iconNeedHelp : theme.currentTheme.greyBoard};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.currentTheme.iconNeedHelp};\n   \n  }\n  svg {\n    width: 18px;\n    height: 18px;\n    fill: transparent;\n    stroke: ${({ isActive,theme }) =>\n      isActive ?  theme.currentTheme.iconNeedHelp : theme.currentTheme.greyBoard};\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nexport const StyledSVGPensil = styled.svg`\n  fill: transparent;\n  stroke:  ${p => p.theme.currentTheme.iconNeedHelp};\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n\nexport const StyledSVGTrash = styled.svg`\n  fill: transparent;\n  stroke: ${p => p.theme.currentTheme.iconNeedHelp};\n\n  width: 16px;\n  height: 16px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n\nexport const StyledBoardListBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  display: flex;\n\n  margin: 0;\n  padding: 0;\n`;\nexport const StyledBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { BoardModalBase } from 'components/boardModals/ModalsBase/BoardModalBase';\nimport { getBoardById, deleteBoard, editBoard } from 'redux/boards/operations';\nimport sprite from '../../../images/icons.svg';\nimport {\n  StyledBoardItem,\n  StyledBoardList,\n  StyledBoardListBtn,\n  StyledBtnWrapper,\n  StyledSVGPensil,\n  StyledSVGTrash,\n} from './BoardListItem.styled';\n\n\nexport const BoardListItem = ({ board, isActive, onClick }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n  const [isModalOpen, setOpenModal] = useState(false);\n\n  function CloseModal() {\n    setOpenModal(false);\n  }\n\n  function OpenModal() {\n    setOpenModal(true);\n  }\n\n  function SubmitForm(info) {\n    const { _id } = board;\n    dispatch(editBoard({ _id, info }));\n    setOpenModal(false);\n  }\n\n  function HandleDelete() {\n    dispatch(deleteBoard(board._id));\n    navigate('/home')\n  }\n\n  return (\n    <StyledBoardList isActive={isActive} onClick={onClick}>\n      {/* <StyledBoardItem to={`/home/${board._id}`}></StyledBoardItem> */}\n\n      <StyledBoardItem\n        type=\"button\"\n        isActive={isActive}\n        onClick={() => {\n          onClick();\n          dispatch(getBoardById(board._id));\n        }}\n      >\n        <svg>\n          <use xlinkHref={`${sprite}#${board.iconURL}`}></use>\n        </svg>\n\n        <Link to={`/home/${board._id}`}>{board.title}</Link>\n      </StyledBoardItem>\n\n      <StyledBtnWrapper isActive={isActive} onClick={onClick}>\n        <StyledBoardListBtn onClick={OpenModal} type=\"button\">\n          <StyledSVGPensil>\n            <use xlinkHref={`${sprite}#icon-pencil-01`}></use>\n          </StyledSVGPensil>\n        </StyledBoardListBtn>\n\n        <StyledBoardListBtn onClick={HandleDelete} type=\"button\">\n          <StyledSVGTrash>\n            <use xlinkHref={`${sprite}#icon-trash-04`}></use>\n          </StyledSVGTrash>\n        </StyledBoardListBtn>\n      </StyledBtnWrapper>\n\n      <BoardModalBase\n        isModalOpen={isModalOpen}\n        info={board}\n        onCloseModal={CloseModal}\n        action={'edit'}\n        SubmitForm={SubmitForm}\n      />\n    </StyledBoardList>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBoards } from 'redux/boards/operations';\nimport { selectAllBoards } from 'redux/boards/selectors';\nimport { StyledBoardListWrapper } from './BoardList.styled';\nimport { BoardListItem } from '../BoardListItem/BoardListItem';\n\nexport const BoardList = ({ onItemClick }) => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectAllBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const [activeItem, setActiveItem] = useState(null);\n\n  const handleBoardClick = board => {\n    setActiveItem(board);\n    onItemClick();\n  };\n  return (\n    <>\n      {boards.length > 0 && (\n        <StyledBoardListWrapper>\n          {boards.map(board => (\n            <li key={board._id}>\n              <BoardListItem\n                board={board}\n                isActive={board === activeItem}\n                onClick={() => handleBoardClick(board)}\n              />\n            </li>\n          ))}\n        </StyledBoardListWrapper>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components'\n\nexport const StyledSVG = styled.svg`\n  stroke:  ${p => p.theme.currentTheme.plusIconFill};\n  width: 20px;\n  height: 20px;\n`\n\nexport const StyledButton = styled.span`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color:${p => p.theme.currentTheme.btnPlusFill};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n\n  &:hover {\n    background-color: ${p => p.theme.currentTheme.hoverBtnPlusFill};\n  }\n`\n\nexport const StyledCreateBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    width: 100%;\n    font-weight: 500;\n    line-height: 1.5;\n    text-align: start;\n\n    color:  ${p => p.theme.currentTheme.iconNeedHelp};\n    padding: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`","import React from 'react';\nimport sprite from 'images/icons.svg';\nimport {\n  StyledCreateBtn,\n  StyledButton,\n  StyledSVG,\n} from './addBoardButton.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddBoardButton = ({ onClick }) => {\n  const { t } = useTranslation('global');\n  return (\n    <StyledCreateBtn onClick={onClick}>\n      {t('screenPage.static.addBoard')}\n      <StyledButton>\n        <StyledSVG>\n          <use xlinkHref={`${sprite}#icon-plus`}></use>\n        </StyledSVG>\n      </StyledButton>\n    </StyledCreateBtn>\n  );\n};\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { AddBoardButton } from './addBoardButton/addBoardButton'\nimport { BoardModalBase } from './ModalsBase/BoardModalBase'\nimport { addBoard } from 'redux/boards/operations'\n\nexport const AddBoard = () => {\n    const dispatch = useDispatch()\n    const [isModalOpen, setOpenModal] = useState(false)\n\n    function CloseModal() {\n        setOpenModal(false)\n    }\n\n    function OpenModal(event) {\n        event.stopPropagation()\n        setOpenModal(true)\n    }\n\n    function SubmitForm(info) {\n        dispatch(addBoard(info))\n        setOpenModal(false)\n    }\n\n    return (\n        <>\n            <AddBoardButton onClick={(event) => OpenModal(event)} />\n            <BoardModalBase isModalOpen={isModalOpen} info={{ title: '', iconURL: 'icon-Project', backgroundURL: '0' }} onCloseModal={CloseModal} action={'add'} SubmitForm={SubmitForm}/>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 70px 14px 14px;\n  height: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 60px 24px 24px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  font-size: 12px;\n  color: ${p => p.theme.currentTheme.greySubtitle};\n  padding-bottom: ${p => p.theme.spacing(2)};\n  letter-spacing: -0.02em;\n`;\n\nexport const StyledCreateWrapper = styled.div`\n  padding: ${p => p.theme.spacing(3.5)} 0;\n  border-top: 1px solid ${p => p.theme.currentTheme.line};\n  border-bottom: 1px solid ${p => p.theme.currentTheme.line};\n`;\nexport const StyledLogoutBtn = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 100%;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(3.5)};\n  align-items: center;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\n// export const StyledSVGPlus = styled.svg`\n//   fill: ${p => p.theme.violetColors.accentColor};\n//   stroke: rgb(255, 255, 255);\n//   width: 20px;\n//   height: 20px;\n//   padding: 8px 10px;\n// `;\n\nexport const StyledSVGLogout = styled.svg`\n  fill: transparent;\n  stroke: ${p => p.theme.currentTheme.iconLogout};\n\n  width: 32px;\n  height: 32px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.hoverIconLogout};;\n    opacity: 0.5;\n  }\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  gap: 24px;\n`;\n\nexport const Boards = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 100%;\n  max-width: 335px;\n  min-width: 320px;\n  height: 355px;  \n  background: ${p => p.theme.currentTheme.modalBgn};\n  border-radius: ${p => p.theme.radius.m};\n  border: none;\n  padding: 24px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n\n  @media (min-width: 768px) {\n    width: 400px;\n  }\n  @media (min-width: 335px) {\n    width: 335px;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  margin-bottom: ${p => p.theme.spacing(6)};\n  color:  ${p => p.theme.currentTheme.mainText};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  top: 14px;\n  right: 14px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n  border: 1px solid ${p => p.theme.currentTheme.accent};\n  border-radius: ${p => p.theme.radius.m};\n  box-sizing: border-box;\n  opacity: 0.4;\n  margin-bottom: 14px; \n  letter-spacing: -0.02em;  \n  outline: none;\n  background: ${p => p.theme.currentTheme.inputBgn};\n  color:  ${p => p.theme.currentTheme.maintext};\n  &:placeholder {\n    font-size: 14px;\n\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const CommentInput = styled.textarea`\n  width: 100%;\n  height: 120px;   \n  padding: 14px 18px; \n  border: 1px solid  ${p => p.theme.currentTheme.accent};\n  border-radius: ${p => p.theme.radius.m};\n  box-sizing: border-box;\n  resize: none;\n  opacity: 0.4;    \n  letter-spacing: -0.02em;\n  margin-bottom: 24px;\n  outline: none; \n  background: ${p => p.theme.currentTheme.inputBgn};\n  color:  ${p => p.theme.currentTheme.maintext};\n  &:placeholder {\n    font-size: 14px;    \n  }\n   &:focus {\n    opacity: 1;\n  } \n\n`;\n\nexport const SendButton = styled.button`\n  width: 100%;  \n  padding: 14px;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  cursor: pointer;\n  background-color: ${p => p.theme.currentTheme.accent};\n color:${p => p.theme.colors.white};\n  font-weight: 500;  \n  letter-spacing: -0.02em;\n  text-align: center;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover {\n  background-color: ${props => props.theme.currentTheme.hoverButton};\n}\n`;\nexport const StyledSvgClose = styled.svg`\n  fill:  ${p => p.theme.currentTheme.modalBgn};\n  stroke: ${props => props.theme.currentTheme.mainText};\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  border: none;\n  transition: background-color 0.3s ease;\n  @media (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import Modal from 'react-modal';\nimport sprite from '../../images/icons.svg';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ModalWrapper,\n  CloseButton,\n  ModalTitle,\n  Input,\n  CommentInput,\n  SendButton,\n  StyledSvgClose,\n} from './NeedHelpModal.styled';\nimport { sendHelpRequest } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Please enter a valid email address').required(''),\n  comment: Yup.string().required(''),\n});\n\nexport const NeedHelpModal = ({ isOpen, onClose, onItemClick }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation('global');\n\n  const handleSend = async ({ email, comment }) => {\n    dispatch(sendHelpRequest({ email, comment }))\n      .then(() => {\n        console.log('Request sent successfully');\n        onClose();\n      })\n      .catch(error => {\n        console.error('Error sending request:', error);\n      });\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal-content\"\n      onRequestClose={onClose}\n      ariaHideApp={false}\n    >\n      <ModalWrapper>\n        <CloseButton onClick={onClose}>\n          <StyledSvgClose>\n            <use xlinkHref={`${sprite}#icon-x-close`}></use>\n          </StyledSvgClose>\n        </CloseButton>\n        <ModalTitle>{t('screenPage.static.needHelp')}</ModalTitle>\n        <Formik\n          initialValues={{ email: '', comment: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSend}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('screenPage.render.modal.help.email')}\n                as={Field}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n              <Field\n                type=\"text\"\n                name=\"comment\"\n                placeholder={t('screenPage.render.modal.help.text')}\n                as={CommentInput} \n                            \n              />\n              <ErrorMessage\n                name=\"comment\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n              <SendButton type=\"submit\" onClick={onItemClick}>{t('screenPage.render.modal.profile.send')}</SendButton>\n            </Form>\n          )}\n        </Formik>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HelpContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  width: 197px;\n  padding: 14px;\n  background-color: ${p => p.theme.currentTheme.needHelpBgn};\n  border-radius: ${p => p.theme.radius.m};\n\n  @media (min-width: 768px) {\n    width: 212px;\n    padding: 20px;\n  }\n`;\n\nexport const HelpImage = styled.img`\n  max-width: 54px;\n  height: 78px;\n  margin-bottom: 14px;\n  margin-right: 100px;\n`;\n\nexport const HelpText = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n  margin-bottom: 18px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nexport const HelpButton = styled.button`\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center; \n  border: none;\n  margin-right: 11px;\n  padding: 0;\n  background: transparent;\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  align-items: center;\n  cursor: pointer;\n  color: ${p => p.theme.currentTheme.iconNeedHelp};\n`;\n\nexport const QuestionSVG = styled.svg`\n  stroke: ${p => p.theme.currentTheme.iconNeedHelp};\n  fill: transparent;\n  width: 20px;\n  height: 20px;\n  &:hover,\n  &:focus {\n    stroke: ${p => p.theme.currentTheme.accent};\n  }\n`;\n\nexport const TaskPro = styled.span`\n  color: ${p => p.theme.currentTheme.accent};\n  font-size: 12px;\n  line-height: 20px;\n  letter-spacing: -0.02em;\n  text-align: left;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport sprite from '../../images/icons.svg';\nimport { NeedHelpModal } from 'components/NeedHelpModal/NeedHelpModal.jsx';\nimport {\n  HelpContainer,\n  HelpImage,\n  HelpButton,\n  HelpText,\n  ButtonText,\n  TaskPro,\n  QuestionSVG,\n} from './HelpApp.styled.js';\nimport flowerImage from './../../images/flower.png';\n\nconst HelpApp = ({ onItemClick }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation('global');\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HelpContainer>\n      <HelpImage src={flowerImage} alt=\"flower\" />\n      <HelpText>\n        {t('screenPage.static.help')} <TaskPro>TaskPro</TaskPro>\n        {t('screenPage.static.help2')}\n      </HelpText>\n      <HelpButton onClick={openModal}>\n        <QuestionSVG>\n          <use xlinkHref={`${sprite}#icon-help-circle`} />\n        </QuestionSVG>\n      </HelpButton>\n      <ButtonText onClick={openModal}>\n        {t('screenPage.static.needHelp')}\n      </ButtonText>\n\n      {isModalOpen && (\n        <NeedHelpModal\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          onItemClick={onItemClick}\n        />\n      )}\n    </HelpContainer>\n  );\n};\nexport default HelpApp;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport sprite from '../../../images/icons.svg';\nimport { BoardList } from '../BoardList/BoardList';\nimport { AddBoard } from 'components/boardModals/addBoard';\nimport {\n  Boards,\n  ItemsWrapper,\n  SidebarWrapper,\n  StyledCreateWrapper,\n  StyledLogoutBtn,\n  StyledSVGLogout,\n  StyledText,\n} from './SidebarNav.styled';\nimport { logout } from 'redux/auth/operations';\nimport HelpApp from 'components/HelpApp/HelpApp.jsx';\n\nexport const SidebarNav = ({ onItemClick }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  const handleClickSidebar = () => {\n    onItemClick();\n  };\n\n  const { t } = useTranslation('global');\n  return (\n    <SidebarWrapper>\n      <StyledText>{t('screenPage.static.my-boards')}</StyledText>\n      <Boards>\n        <StyledCreateWrapper>\n          <AddBoard onItemClick={handleClickSidebar} />\n        </StyledCreateWrapper>\n        <BoardList onItemClick={handleClickSidebar} />\n      </Boards>\n      <ItemsWrapper>\n        <HelpApp onItemClick={handleClickSidebar} />\n        <StyledLogoutBtn type=\"button\" onClick={handleClick}>\n          <StyledSVGLogout>\n            <use xlinkHref={`${sprite}#icon-login`}></use>\n          </StyledSVGLogout>\n          {t('screenPage.static.logout')}\n        </StyledLogoutBtn>\n      </ItemsWrapper>\n    </SidebarWrapper>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nexport const DarkBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(21, 21, 21, 0.3);\n  z-index: 999;\n`;\n\nexport const StyledSidebar = styled.aside`\n  width: 225px;\n  height: 100vh;\n  background-color: ${p => p.theme.currentTheme.sidebarBgn};\n  z-index: 999;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n  }\n  ${() => {\n    const { i18n } = useTranslation('global');\n    const dir = i18n.dir(i18n.language);\n\n    if (dir === 'rtl') {\n      return `\n        right: 0;\n        left: auto;\n      `;\n    } else {\n      return `\n        left: 0;\n        right: auto;\n      `;\n    }\n  }}\n  @media screen and (min-width: 1440px) {\n    z-index: 0;\n    position: static;\n    top: 0;\n    left: 0;\n  }\n`;\n","import { Logo } from './Logo/Logo';\nimport { SidebarNav } from './SidebarNav/SidebarNav';\nimport { StyledSidebar } from './Sidebar.styled';\nimport { forwardRef } from 'react';\n\nexport const Sidebar = forwardRef((props, ref) => {\n  return (\n    <StyledSidebar ref={ref}>\n      <Logo />\n      <SidebarNav onItemClick={props.onItemClick}/>\n    </StyledSidebar>\n  );\n});\n","import { useRef, useState } from 'react';\nimport sprite from '../../../images/icons.svg';\nimport {\n  BurgerMenuWrapper,\n  StyledBurgerMenu,\n  StyledSVGBurger,\n} from './BurgerMenu.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DarkBackground } from 'components/Sidebar/Sidebar.styled';\n\nexport const BurgerMenu = () => {\n  const [isOpen, setOpen] = useState(false);\n  const burgerMenuRef = useRef(null);\n  const sidebarRef = useRef(null);\n\n  const handleOpenSidebar = () => {\n    setOpen(!isOpen);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BurgerMenuWrapper>\n      <StyledBurgerMenu\n        type=\"button\"\n        onClick={handleOpenSidebar}\n        ref={burgerMenuRef}\n      >\n        <StyledSVGBurger>\n          <use xlinkHref={`${sprite}#icon-menu-01`}></use>\n        </StyledSVGBurger>\n      </StyledBurgerMenu>\n      {isOpen && (\n        <div>\n          <DarkBackground onClick={handleCloseSidebar}/>\n          <Sidebar ref={sidebarRef} onItemClick={handleCloseSidebar}/>\n        </div>\n      )}\n    </BurgerMenuWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\nbackground-color: ${p => p.theme.currentTheme.headerBgn} ;\n  display: flex;\n  justify-content: space-between;\n\n  padding: ${p => p.theme.spacing(3.5)} ${p => p.theme.spacing(5)};\n@media screen and (min-width: 768px) {\n    padding: ${p => p.theme.spacing(4.5)} ${p => p.theme.spacing(8)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 0;\n    padding: 18px 24px;\n  }\n`;\n\nexport const StyledHeaderItemWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n \n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeTheme } from 'redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\nimport { selectedUserTheme } from 'redux/auth/selectors';\n\nconst options = [\n  { value: 'light', label: 'Light' },\n  { value: 'dark', label: 'Dark' },\n  { value: 'violet', label: 'Violet' },\n];\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'transparent',\n    color: state.isFocused ? 'rgba(22, 22, 22)' : 'rgba(22, 22, 22, 0.8)',\n    border: 'none ',\n    boxShadow: 'none',\n    display: 'flex',\n    margin: 'auto 0',\n    padding: '0',\n    minHeight: '0',\n    lineHeight: '1',\n  }),\n\n  downChevron: provided => ({\n    ...provided,\n    width: '16px',\n    height: '16px',\n    padding: '0',\n    margin: '0 auto',\n  }),\n\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n\n  input: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: '0',\n    margin: 'auto 0',\n\n    '&::before': {\n      content: 'none',\n    },\n  }),\n\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    color: state.isSelected ? '#5255BC' : 'rgb(22, 22, 22)',\n    '&:hover, &:focus': {\n      color: '#5255bc',\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    fontWeight: '500',\n    fontSize: '14px',\n    letterSpacing: '-0.02em',\n    color: `${p => p.theme.currentTheme.mainText}`,\n  }),\n};\n\nexport const ThemeDropDown = () => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const selectRef = useRef(null);\n\n  const userTheme = useSelector(selectedUserTheme);\n  const handleChangeTheme = options => {\n    const theme = options.value;\n    dispatch(changeTheme({ theme }));\n    setMenuIsOpen(false);\n  };\n  const handleClickOutside = event => {\n    if (selectRef.current && !selectRef.current.contains(event.target)) {\n      setMenuIsOpen(false);\n    }\n  };\n\n  const toggleSelect = () => {\n    setMenuIsOpen(!menuIsOpen);\n  };\n  const themeSelect = () => {\n    options.find(option => option.value === userTheme);\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return (\n    <div ref={selectRef}>\n      <Select\n        options={options}\n        styles={customStyles}\n        onChange={handleChangeTheme}\n        menuIsOpen={menuIsOpen}\n        onMenuOpen={toggleSelect}\n        onMenuClose={toggleSelect}\n        placeholder={t('screenPage.static.theme')}\n        value={themeSelect}\n      />{' '}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledUserInfo = styled.div`\n  padding: 0;\n  display: flex;\n  gap: ${p => p.theme.spacing(2)};\n`;\n\nexport const StyledUserBtn = styled.button`\n  width: 32px;\n  height: 32px;\n  background-color: transparent;\n  border: none;\n  border-radius: ${p => p.theme.radius.m};\n  padding: 0;\n`;\n\nexport const StyledUserName = styled.p`\n  color: ${p => p.theme.currentTheme.mainText};\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  margin: auto 0;\n`;\n\nexport const StyledUserPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radius.m};\n`;\n","import React from 'react';\nimport { IconUser } from '../EditProfileModal.styled';\nimport sprite from '../../../images/icons.svg';\n\nexport const PreviewAvatar = ({ avatar }) => {\n    \n  return (\n    <>\n      {avatar ? (\n        <img src={avatar.href} alt=\"user-avatar\" />\n      ) : (\n        <IconUser>\n          <use xlinkHref={`${sprite}#icon-user`}></use>\n        </IconUser>\n      )}\n    </>\n  );\n};","import React, { useState } from 'react';\nimport { UploadImage } from '../EditProfileModal.styled';\n\nexport const PreviewUploadAvatar = ({ file }) => {\n  const [preview, setPreview] = useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>{preview && <UploadImage src={preview} alt=\"user-avatar\" />}</>\n  );\n};","import React, { useRef, useState } from 'react';\nimport {\n  AddButton,\n  Button,\n  CLoseButton,\n  ErrMessage,\n  HideBtn,\n  IconClose,\n  IconEye,\n  IconPlus,\n  // ImageUser,\n  ModalWrap,\n  ProfileFotoBox,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n  Thumb,\n  TitleModal,\n} from './EditProfileModal.styled.js';\n\nimport sprite from '../../images/icons.svg';\nimport { PreviewAvatar } from './PreviewAvatar/PreviewAvatar.jsx';\nimport { PreviewUploadAvatar } from './PreviewAvatar/PreviewUploadAvatar.jsx';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { updateProfile } from 'redux/auth/operations.js';\nimport { useTranslation } from 'react-i18next';\n\nconst editFormSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short').max(30, 'To long'),\n  email: Yup.string().email('Please enter a valid email address'),\n\n  password: Yup.string()\n    .min(5, 'The password should be at least 5 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const EditProfileModal = ({ onCloseModal, avatar }) => {\n  const { t } = useTranslation('global');\n  const dispatch = useDispatch();\n  const handleSubmit = credentials => {\n    return dispatch(updateProfile(credentials));\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const onShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const fileRef = useRef(null);\n\n  return (\n    <ModalWrap>\n      <TitleModal>{t('screenPage.render.modal.profile.title')}</TitleModal>\n\n      <CLoseButton onClick={onCloseModal}>\n        <IconClose>\n          <use xlinkHref={`${sprite}#icon-x-close`}></use>\n        </IconClose>\n      </CLoseButton>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          avatar: null,\n        }}\n        validationSchema={editFormSchema}\n        onSubmit={(values, actions) => {\n          handleSubmit(values);\n          actions.resetForm();\n        }}\n      >\n        {({ values, setFieldValue }) => (\n          <StyledForm>\n            <ProfileFotoBox>\n              <Thumb>\n                <input\n                  hidden\n                  ref={fileRef}\n                  type=\"file\"\n                  name=\"avatar\"\n                  onChange={e => {\n                    setFieldValue('avatar', e.target.files[0]);\n                  }}\n                />\n                {values.avatar ? (\n                  <PreviewUploadAvatar file={values.avatar} />\n                ) : (\n                  <PreviewAvatar avatar={avatar} />\n                )}\n              </Thumb>\n\n              <AddButton type=\"button\" onClick={() => fileRef.current.click()}>\n                <IconPlus>\n                  <use xlinkHref={`${sprite}#icon-plus`}></use>\n                </IconPlus>\n              </AddButton>\n            </ProfileFotoBox>\n\n            <StyledLabel htmlFor=\"name\">\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                placeholder={t('screenPage.render.modal.profile.name')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"name\" />\n            </StyledLabel>\n\n            <StyledLabel htmlFor=\"email\">\n              <StyledField\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('screenPage.render.modal.profile.email')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"email\" />\n            </StyledLabel>\n\n            <StyledLabel htmlFor=\"password\">\n              <StyledField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder={t('screenPage.render.modal.profile.password')}\n              ></StyledField>\n              <ErrMessage component=\"span\" name=\"password\" />\n              <HideBtn type=\"button\" onClick={onShowPassword}>\n                <IconEye>\n                  <use xlinkHref={`${sprite}#icon-eye`}></use>\n                </IconEye>\n              </HideBtn>\n            </StyledLabel>\n\n            <Button type=\"submit\" onClick={onCloseModal}>\n              {t('screenPage.render.modal.profile.send')}\n            </Button>\n          </StyledForm>\n        )}\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import {\n  StyledUserInfo,\n  StyledUserName,\n  StyledUserPhoto,\n  StyledUserBtn,\n} from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditProfileModal } from 'components/EditProfileModal/EditProfileModal';\nimport '../../EditProfileModal/EditModal.css';\nimport { selectAvatar, selectUser } from 'redux/auth/selectors';\nimport { IconUserInfo } from 'components/EditProfileModal/EditProfileModal.styled';\nimport sprite from '../../../images/icons.svg';\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n  const userName = useSelector(selectUser);\n  const userAvatar = useSelector(selectAvatar);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const avatarURL =\n    userAvatar &&\n    new URL(userAvatar, 'https://task-pro-backend-a1c2.onrender.com/public');\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <StyledUserInfo>\n      <StyledUserName>{userName.name}</StyledUserName>\n      <StyledUserBtn type=\"button\" onClick={openModal}>\n        {!!userAvatar ? (\n          <StyledUserPhoto\n            src={avatarURL}\n            alt=\"user_photo\"\n            width={32}\n            height={32}\n          />\n        ) : (\n          <IconUserInfo>\n            <use xlinkHref={`${sprite}#icon-user`}></use>\n          </IconUserInfo>\n        )}\n      </StyledUserBtn>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName={'modal-overlay'}\n        className={'modal-content'}\n        closeTimeoutMS={300}\n      >\n        <EditProfileModal onCloseModal={closeModal} avatar={avatarURL} />\n      </Modal>\n    </StyledUserInfo>\n  );\n};\n","import { SelectLanguage } from 'components/SelectLanguage/SelectLanguage';\nimport { BurgerMenu } from './BurgerMenu/BurgerMenu';\nimport { StyledHeader, StyledHeaderItemWrapper } from './Header.styled';\nimport { ThemeDropDown } from './ThemeDropDown/ThemeDropDown';\nimport { UserInfo } from './UserInfo/UserInfo';\n\nexport const Header = () => {\n  return (\n    <StyledHeader>\n      <BurgerMenu />\n      <StyledHeaderItemWrapper>\n        <SelectLanguage />\n        <ThemeDropDown />\n        <UserInfo />\n      </StyledHeaderItemWrapper>\n    </StyledHeader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  min-height: 100vh;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n","import { Header } from 'components/Header/Header';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\n\nimport { HeaderWrapper, HomeWrapper } from './HomePage.styled';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ScreensPage from './ScreensPage';\n\nexport default function HomePage() {\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n  const { i18n } = useTranslation('global');\n\n  useEffect(() => {\n    const dir = i18n.dir(i18n.language);\n    document.documentElement.dir = dir;\n  }, [i18n, i18n.language]);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <HomeWrapper>\n      <Helmet>\n        <title>Boards</title>\n      </Helmet>\n      {isWideScreen && <Sidebar />}\n      <HeaderWrapper>\n        <Header />\n        <ScreensPage />\n      </HeaderWrapper>\n    </HomeWrapper>\n  );\n}\n"],"names":["CustomDropdownIcon","_jsx","GrLanguage","IconLanguage","DropdownIndicator","props","components","_objectSpread","children","width","height","options","value","label","_jsxs","class","customStyles","control","provided","state","color","isFocused","border","boxShadow","display","margin","padding","minHeight","lineHeight","backgroundColor","downChevron","IndicatorContainer","indicatorSeparator","input","dropdownIndicator","stroke","concat","p","theme","currentTheme","mainText","content","option","isSelected","placeholder","menu","maxHeight","borderRadius","overflowY","menuList","i18n","useTranslation","_useState","useState","_useState2","_slicedToArray","menuIsOpen","setMenuIsOpen","selectRef","useRef","handleClickOutside","event","current","contains","target","toggleSelect","useEffect","document","addEventListener","removeEventListener","ref","Select","styles","onChange","selectedOption","changeLanguage","onMenuOpen","onMenuClose","SelectLanguage","handleChange","lang","CustomDropdown","handleChangeLanguage","e","selectedLanguage","BurgerMenuWrapper","styled","_templateObject","_taggedTemplateLiteral","spacing","StyledBurgerMenu","_templateObject2","isOpen","StyledSVGBurger","_templateObject3","StyledLogoWrapper","StyledLogoIcon","radius","m","needHelpBgn","StyledLogoText","iconNeedHelp","StyledSVGLogo","_templateObject4","logo","Logo","xlinkHref","sprite","StyledBoardListWrapper","StyledBoardList","_ref","isActive","colors","white","StyledBoardItem","_ref2","greyBoard","_ref3","StyledSVGPensil","accent","StyledSVGTrash","StyledBoardListBtn","_templateObject5","StyledBtnWrapper","_templateObject6","_ref4","BoardListItem","board","onClick","dispatch","useDispatch","navigate","useNavigate","isModalOpen","setOpenModal","type","getBoardById","_id","iconURL","Link","to","title","deleteBoard","BoardModalBase","info","onCloseModal","action","SubmitForm","editBoard","BoardList","onItemClick","boards","useSelector","selectAllBoards","fetchBoards","activeItem","setActiveItem","_Fragment","length","map","handleBoardClick","StyledSVG","plusIconFill","StyledButton","btnPlusFill","hoverBtnPlusFill","StyledCreateBtn","AddBoardButton","t","AddBoard","stopPropagation","OpenModal","backgroundURL","addBoard","SidebarWrapper","StyledText","greySubtitle","StyledCreateWrapper","line","StyledLogoutBtn","StyledSVGLogout","iconLogout","hoverIconLogout","ItemsWrapper","Boards","_templateObject7","ModalWrapper","modalBgn","ModalTitle","CloseButton","Input","Field","inputBgn","maintext","CommentInput","SendButton","hoverButton","StyledSvgClose","validationSchema","Yup","email","required","comment","NeedHelpModal","onClose","handleSend","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sendHelpRequest","then","console","log","catch","error","stop","_x","apply","arguments","Modal","overlayClassName","className","onRequestClose","ariaHideApp","Formik","initialValues","onSubmit","isSubmitting","Form","name","as","ErrorMessage","component","HelpContainer","HelpImage","HelpText","HelpButton","ButtonText","QuestionSVG","TaskPro","setIsModalOpen","openModal","src","flowerImage","alt","SidebarNav","handleClickSidebar","HelpApp","logout","DarkBackground","StyledSidebar","sidebarBgn","dir","language","Sidebar","forwardRef","BurgerMenu","setOpen","burgerMenuRef","sidebarRef","handleCloseSidebar","StyledHeader","headerBgn","StyledHeaderItemWrapper","fontWeight","fontSize","letterSpacing","ThemeDropDown","userTheme","selectedUserTheme","changeTheme","find","StyledUserInfo","StyledUserBtn","StyledUserName","StyledUserPhoto","PreviewAvatar","avatar","href","IconUser","PreviewUploadAvatar","file","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","UploadImage","editFormSchema","shape","min","max","password","matches","EditProfileModal","showPassword","setShowPassword","onShowPassword","fileRef","ModalWrap","TitleModal","CLoseButton","IconClose","values","actions","credentials","updateProfile","resetForm","setFieldValue","StyledForm","ProfileFotoBox","Thumb","hidden","files","AddButton","click","IconPlus","StyledLabel","htmlFor","StyledField","ErrMessage","HideBtn","IconEye","Button","UserInfo","userName","selectUser","userAvatar","selectAvatar","avatarURL","URL","closeModal","IconUserInfo","closeTimeoutMS","Header","HomeWrapper","HeaderWrapper","HomePage","window","innerWidth","isWideScreen","setIsWideScreen","documentElement","handleResize","Helmet","ScreensPage"],"sourceRoot":""}